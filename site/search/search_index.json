{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to SI Project Docs This site is going to document all of the work that Lesotho's Ministry of Health has done on both DHIS2 and eRegister For more information, please see the contacts tab.","title":"Welcome to SI Project Docs"},{"location":"#welcome-to-si-project-docs","text":"This site is going to document all of the work that Lesotho's Ministry of Health has done on both DHIS2 and eRegister For more information, please see the contacts tab.","title":"Welcome to SI Project Docs"},{"location":"contacts/","text":"Contact Information For more information, please contact below:","title":"Contact Information"},{"location":"contacts/#contact-information","text":"For more information, please contact below:","title":"Contact Information"},{"location":"covid/About-Us/","text":"This is an About Page ...information loading....New Version","title":"About Us"},{"location":"covid/Alerts/","text":"........content coming soon......","title":"Alerts"},{"location":"covid/Capturing-Weekly-Aggregate-Data/","text":"........content coming soon......","title":"Capturing Weekly Aggregate Data"},{"location":"covid/How-To-Prepare-Docker-Training-Instance/","text":"Note we chose Docker over other many ways of installing DHIS2 because in a few minutes you can have your instance up and running Installing Docker on the host server Please refer to this link for installing Docker Installling Docker Compose To install Docker Compose, please refer to the official Docker Compose site here To prepare the training instance, we used two images: dhis2 core 2.33 dmillon/postgis ( recommended because it already has postgis which DHIS2 depends on to render maps ) Downloading the images ``` paste contents of docker-compose.yml ``` you can change to whichever image you want to use. But please remember to drop SQL views before creating your dump You can go ahead and read this to prepare your instance. Within a few minutes you should by now have your DHIS2 instance running. Warning use postgres as your user for the db. It poses security threats (yes) but it's easier to deal with PostgreSQL with that setup. Unless ofcourse you're a PostgreSQL ninja. Restoring Postgres Database As you saw from the previous step, your instance is running two containers with networking between them handled by Docker Compose. If you have a live connection to Postgres database, you can't drop and restore your db. Do docker ps to see all of the running containers. docker-compose ps also works fine. it's important to do this step first because docker-compose is going to name according to how you named the folder containing the docker-compose.yml as well as how you labeled them inside the file To do that, you have to kill the frontend DHIS2 container then restore the DB with docker container kill <name_of_dhis_container> Copy DB backup file into Postgres container with docker cp dhis_db_backup.sql <name_of_postgres_container>:/ Get into the container with docker exec -it <name_of_postgres_container> bash Switch account from root to postgres with su postgres and then launch the PostgreSQL interactive terminal with psql \\l to list all of the databases drop database dhis2; to delete the database create database dhis2 to recreate the database. But now it's empty \\q to the interactive terminal psql --username=postgres --dbname=dhis2 < dhis_db_backup.sql to restore all of data into the empty database. if the command ran succefully, you should see a trail of verbosely listed SQL commands processed Then the trail is done, do exit to exit the container Finally, start the container that we \"killed\" with docker container start <name_of_dhis_container>","title":"How To Prepare Docker Training Instance"},{"location":"covid/Indicators/","text":"........content coming soon......","title":"Indicators"},{"location":"covid/Overview/","text":"Welcome to the COVID19 Surviellance Tool Technical Guide Overview The COVID19 Surveillance system can be found here: http://hmis.gov.ls/covid19 This system is built off of DHIS2's Tracker Module. All of the broader user manuals can be found here: Table of Contents In addition to that, we have developed guidelines specific to our context and usecases. The document structure looks like this: COVID-19 \u2514\u2500\u2500 Overview \u2514\u2500\u2500 Data Entry Guidelines \u251c\u2500\u2500 Registering a Case or Suspect \u251c\u2500\u2500 Capturing Weekly Aggregate Data \u2514\u2500\u2500 Using Mobile Devices \u2514\u2500\u2500 Technical \u251c\u2500\u2500 Alerts Dataset \u251c\u2500\u2500 Program Indicators \u251c\u2500\u2500 Indicators \u251c\u2500\u2500 Program Rules \u2514\u2500\u2500 How to Prepare Docker Training Instance Training Instance We have also have a training instance which we try by all means to make it an up-to-date replica of the live system. It can be found here: http://197.155.193.109:1010/","title":"Overview"},{"location":"covid/Program-Indicators/","text":"........content coming soon......","title":"Program Indicators"},{"location":"covid/Program_Rules/","text":"........content coming soon......","title":"Program Rules"},{"location":"covid/Registering-a-Case-or-Suspect/","text":"content loading....","title":"Registering a Case or Suspect"},{"location":"covid/Using-Mobile-Devices/","text":"content loading....","title":"Using Mobile Devices"},{"location":"covid/Using-Mobile/","text":"content loading....","title":"Using Mobile"},{"location":"covid/Using-Web-Aggregate/","text":"........content coming soon......","title":"Using Web Aggregate"},{"location":"covid/Validation-Rules/","text":"........content coming soon......","title":"Validation Rules"},{"location":"covid/Weekly-Report/","text":"","title":"Weekly Report"},{"location":"covid/registering-a-case-mobile/","text":"User Guide ........content coming soon...... Trainer Guide ........content coming soon......","title":"Registering a case mobile"},{"location":"covid/using-web/","text":"User Guide ........content coming soon...... Trainer Guide ........content coming soon......","title":"Using web"},{"location":"dhis2/hiv-care-n-tx/","text":"HIV Care and Treatment ....info on HIV Care and Treatment","title":"HIV Care and Treatment"},{"location":"dhis2/hiv-care-n-tx/#hiv-care-and-treatment","text":"....info on HIV Care and Treatment","title":"HIV Care and Treatment"},{"location":"dhis2/hts/","text":"HTS ....info on HTS","title":"HTS"},{"location":"dhis2/hts/#hts","text":"....info on HTS","title":"HTS"},{"location":"dhis2/installation/","text":"DHIS2 Installation ....info loading.....","title":"DHIS2 Installation"},{"location":"dhis2/installation/#dhis2-installation","text":"....info loading.....","title":"DHIS2 Installation"},{"location":"dhis2/intro/","text":"DHIS2 Info .....info on the National Data Warehouse","title":"Intro"},{"location":"dhis2/tb-indicators/","text":"TB Program Indicators The following is list of associated indicators that were created: TB Notification All (INDTB-2018_1) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator Sum of everything in block 1, excluding Bacteriologically Confirmed not Started on Treatment Sum of everything in Block 1 Sum of everything in Block 1 (leave out subtotals) Denominator 1 1 1 TB Notification New and Relapse (INDTB-2018_2) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator Sum of everything in block 1, excluding Bacteriologically Confirmed not Started on Treatment, and also exclude Retreatment excluding Relapse Sum of everything in Block 1, excluding Treatment After loss to Follow-up, Treatment after Failure and Other Previously Treated Sum of everything in Block 1 uner New (Pulmonary) (leave out subtotals) and Relapse (previously treated) Denominator 1 1 1 TB Notification New and Relapse Pulmonary Bacteriologically confirmed (INDTB-2018_3) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator sum of Pulmonary Bacteriologically Confirmed (row New and row Relapse) sum of row Pulmonary, Bacteriologically confirmed (row New and row Relapse) Sum of row Sputum Smear microscopy positive ( row New and row Relapse) Denominator 1 1 1 Bacteriologically Confirmed not initiated on treatment (INDTB-2018_4) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator Sum of everything in column Bacteriologically confirmed not Started on Treatment N/A N/A Denominator 1 N/A N/A Proportion of TB patients with a documented HIV status All (INDTB-2018_5) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator Block 5: sum of column Documented HIV Status (male & female), row New & Relapse and row Retreatment excl Relapse Block 4: sum of column No. HIV Tested and row New Pulmonary, row Other New and row Retreatments Block \u201cTB/HIV Activities\u201d: sum of column No. Tested for HIV (both male and female, both rows) Denominator Sum everything in Block 1 excluding Bacteriologically confirmed not started on treatment sum everything in Block 1 sum everything in Block 1 (leave out sub totals) Proportion of TB patients with a documented HIV status New and Relapse (INDTB-2018_6) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator Block 5: sum of column Documented HIV Status (male & female), row New & Relapse N/A N/A Denominator Sum everything in Block 1 excluding Bacteriologically confirmed not started on treatment N/A N/A TB/HIV Co-infection Rate All (INDTB-2018_7) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator Sum of column HIV Positive (both male and female), row New and Relapse, and row Retreatment excl Relapse Sum of column \"No. HIV Positive\" - row New Pulmonary, row Other New, row Retreatments Sum of column No. HIV Positive - row New sputum smear, Other TB Denominator sum of column Documented HIV Status (both male and female), row New and Relapse and row Retreatment excl Relapse Sum of column No. HIV Tested - row New Pulmonary, row Other New, row Retreatments Sum of column Tested for HIV - row New sputum smear, Other TB TB/HIV co-infected rate New and Relapse (INDTB-2018_8) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator Sum of column HIV Positive (both male and female), row New and Relapse N/A N/A Denominator sum of column Documented HIV Status (both male and female), row New and Relapse N/A N/A Proportion of HIV positive TB patients on ART All (INDTB-2018_9) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator Block 5: sum of column HIV Positive on ART, row New and Relapse and row Retreatment excl. Relapse Block 4: sum of column No. HIV Positive on ART, row New Pulmonary, row Other New, row Retreatments Block TB/HIV Activities: sum of column No. on ART, row New Sputum Smear, row Other TB Denominator Block: sum of column HIV Positive, column New and Relapse and row Retreatment excl. Relapse Block 4: sum of column No. HIV Positive, row New Pulmonary, row Other New, row Retreatments Block TB/HIV Activities: sum of column No. HIV Positive, row New Sputum Smear, row Other TB Proportion of HIV positive TB patients on ART New and Relapse (INDTB-2018_10) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator Block 5: sum of column HIV Positive on ART, row New and Relapse N/A N/A Denominator Block: sum of column HIV Positive, column New and Relapse N/A N/A Proportion of HIV positive TB patients on CPT/Dapzone All (INDTB-2018_11) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator Block 5: sum of column HIV Positive on CPT/Dapzone, row New and Relapse and row Retreatment excl. Relapse Block 4: sum of column No. HIV Positive On CPT, row New Pulmonary, row Other New, row Retreatments Block TB/HIV Activities: sum of column No. on CPT, row New Sputum Smear, row Other TB Denominator Block 5: sum of column HIV Positive, column New and Relapse and row Retreatment excl. Relapse Block 4: sum of column No. HIV Positive, row New Pulmonary, row Other New, row Retreatments Block TB/HIV Activities: sum of column No. HIV Positive, row New Sputum Smear, row Other TB Proportion of HIV positive TB patients on CPT/Dapzone New and Relapse (INDTB-2018_12) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator Block 5: sum of column HIV Positive on CPT/Dapzone, column New and Relapse N/A N/A Denominator Block 5: sum of column HIV Positive, column New and Relapse N/A N/A TB Treatment Success Rate All Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator foo foo foo Denominator foo foo foo TB Treatment Success Rate New and Relapse Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator foo foo foo Denominator foo foo foo TB Death Rate All (INDTB-2018_13) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator Block 1: sum of column Died, row New and Relapse, row Treatment excl Relapse Block 1: sum of column Died, all rows Block 1: sum of column died, all rows Denominator Block 1: sum of column Total number of patients, row New and Relapse, row Treatment excl Relapse Block 1: sum of column No of Cases Registered, all rows Block 1: sum of column Total number of cases registered TB Death Rate New and Relapse (INDTB-2018_14) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator Block 1: sum of column Died, row New and Relapse Block 1: sum of column Died, all rows Block 1: sum of column Died, all rows Denominator Block 1: sum of column Total number of patients, row New and Relapse Block 1: sum of column No of Cases Registered, row New Pulmonary (B+), row Relapse B(+), row Extra pulmonary B(+), row New Pulmonary CD, row Relapse CD, row Retreatment (Excluding Relapse)-CD Block 1: sum of column Total number of cases registered, row New, row 2.1 Relapses TB Lost to Followup Rate All (INDTB-2018_15) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator Block 1: sum of column Lost to Follow-up, row New and Relapse, row Treatment excl Relapse Block 1: sum of column Defaulted/LTFU, all rows Block 1: sum of column Default(5), all rows Denominator Block 1: sum of column Total number of patients, row New and Relapse, row Treatment excl Relapse Block 1: sum of column No of Cases Registered, all rows Block 1: sum of column Total number of cases registered TB Lost to Followup Rate New and Relapse (INDTB-2018_16) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator Block 1: sum of column Lost to Follow-up, row New and Relapse Block 1: sum of column Defaulted/LTFU, all rows Block 1: sum of column Default(5), all rows Denominator Block 1: sum of column Total number of patients, row New and Relapse Block 1: sum of column No of Cases Registered, row New Pulmonary (B+), row Relapse B(+), row Extra pulmonary B(+), row New Pulmonary CD, row Relapse CD, row Retreatment (Excluding Relapse)-CD Block 1: sum of column Total number of cases registered, row New, row 2.1 Relapses TB Not Evaluated Rate All (INDTB-2018_17) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator Block 1: sum of column Not Evaluated, row New and Relapse, row Treatment excl Relapse Block 1: sum of column Not Evaluated, all rows Block 1: sum of column Transfer Out(6), column Total Number NOT Evaluated for outcomes, all rows Denominator Block 1: sum of column Total number of patients, row New and Relapse, row Treatment excl Relapse Block 1: sum of column No of Cases Registered, all rows Block 1: sum of column Total number of cases registered TB Not Evaluated Rate New and Relapse (INDTB-2018_18) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator Block 1: sum of column Not Evaluated, row New and Relapse Block 1: sum of column Not Evaluated, all rows Block 1: sum of column Transfer Out(6), column Total Number NOT Evaluated for outcomes, all rows Denominator Block 1: sum of column Total number of patients, row New and Relapse Block 1: sum of column No of Cases Registered, row New Pulmonary (B+), row Relapse B(+), row Extra pulmonary B(+), row New Pulmonary CD, row Relapse CD, row Retreatment (Excluding Relapse)-CD Block 1: sum of column Total number of cases registered, row New, row 2.1 Relapses TB Failure Rate All (INDTB-2018_19) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator Block 1: sum of column Failed (Susceptible), row New and Relapse, row Treatment excl Relapse Block 1: sum of column Failure, all rows Block 1: sum of column Treatment Failure(4), all rows Denominator Block 1: sum of column Total number of patients, row New and Relapse, row Treatment excl Relapse Block 1: sum of column No of Cases Registered, all rows Block 1: sum of column Total number of cases registered TB Failure Rate New and Relapse (INDTB-2018_20) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator Block 1: sum of column Failed (Susceptible), row New and Relapse Block 1: sum of column Failure, all rows Block 1: sum of column Treatment Failure(4), all rows Denominator Block 1: sum of column Total number of patients, row New and Relapse Block 1: sum of column Failure, row New Pulmonary (B+), row Relapse B(+), row Extra pulmonary B(+), row New Pulmonary CD, row Relapse CD, row Retreatment (Excluding Relapse)-CD Block 1: sum of column Total number of cases registered, row New, row 2.1 Relapses TB Treatment Success Rate Among HIV Positive All (INDTB-2018_21) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator Block 1: sum of column Completed, column Cured, row All HIV positive Block 3: sum of column Completed, column Cured, row HIV positive all types Last block: sum of column Cure(1), column Treatment Completed (2), all rows Denominator Block 1: sum of column Total number of patients, row All HIV positive Block 3: sum of column Total number registered, row HIV positive all types Last block: sum of column Total Number of Patients registered , all rows TB Death Rate Among HIV Positive All (INDTB-2018_22) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator Block 1: sum of column Died, row All HIV positive Block 3: sum of column Died, row HIV positive all types Last block: sum of column Died(3), all rows Denominator Block 1: sum of column Total number of patients, row All HIV positive Block 3: sum of column Total number registered, row HIV positive all types Last block: sum of column Total Number of Patients registered , all rows TB Lost to Followup Rate Among HIV Positive All (INDTB-2018_23) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator Block 1: sum of column Lost to Follow-up, row All HIV positive Block 3: sum of column Defaulted/LTFU, row HIV positive all types Last block: sum of column Default(5), all rows Denominator Block 1: sum of column Total number of patients, row All HIV positive Block 3: sum of column Total number registered, row HIV positive all types Last block: sum of column Total Number of Patients registered , all rows TB Not Evaluated Rate Among HIV Positive All (INDTB-2018_24) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator Block 1: sum of column Lost to Follow-up, row All HIV positive Block 3: sum of column Defaulted/LTFU, row HIV positive all types Last block: sum of column Transfer Out(6), column Total Number NOT Evaluated for outcomes, all rows Denominator Block 1: sum of column Total number of patients, row All HIV positive Block 3: sum of column Total number registered, row HIV positive all types Last block: sum of column Total Number of Patients registered , all rows TB Failure Rate Among HIV Positive All (INDTB-2018_25) Dataset TB Notification 2018 TB_Notification_New TB Case Registration Old Numerator Block 1: sum of column Failed (Susceptible), row All HIV positive Block 3: sum of column Failure, row HIV positive all types Last block: sum of column Treatment failure(4), all rows Denominator Block 1: sum of column Total number of patients, row All HIV positive Block 3: sum of column Total number registered, row HIV positive all types Last block: sum of column Total Number of Patients registered , all rows TB Proportion of Presumptive cases examined using a bacteriologic test (INDTB-2018_26) Dataset TB Case Detection 2018 Presumptive TB Cases Numerator Block 1: Column c), row Total Block 1: Column c) Denominator Block 1: Column b), row Total Block 1: Column b) TB Positivity Yield (INDTB-2018_27) Dataset TB Case Detection 2018 Presumptive TB Cases Numerator Block 1: Column d), row Total Block 1: Column d) Denominator Block 1: Column c), row Total Block 1: Column c) Proportion of contacts of PTB cases screened for TB (INDTB-2018_28) Dataset TB Case Detection 2018 Presumptive TB Cases Numerator Block 2: column Number of contacts of PTB cases who are presumptive TB cases N/A \u201cbecause there are no contacts\u201d Denominator Block 2: column Total number of contacts of PTB cases N/A \u201cbecause there are no contacts\u201d Proportion of Under 5 childhood contacts screened for TB (INDTB-2018_29) Dataset TB Case Detection 2018 Presumptive TB Cases Numerator Block 3: column Number of contacts <5 years screened for TB N/A Denominator Block 3: column Number of childhood contacts <5 years N/A Proportion of Under 5 Childhood contacts without signs and symptoms of TB put on INH prophylaxis Dataset TB Case Detection 2018 Presumptive TB Cases Numerator Block 3: column Number of contacts <5 years started on INH after ruling out signs and symptoms of TB N/A Denominator Block 3: column Number of contacts <5 years who are not presumptive TB cases N/A Proportion of Under 5 Childhood contacts started on INH six months ago who completed their INH course (INDTB-2018_31) Dataset TB Notification 2018 TB_Notification_New Numerator Block 4: column Number of contacts <5 years started on INH who completed their IPT course N/A Denominator Block 3: column Number of contacts <5 years started on INH N/A TB Treatment Success Rate New & Relapse (INDTB-2018_32) Dataset TB Treatment Outcomes 2018 TB Treatment Outcomes New TB Treatment Outcomes Old Numerator Block 1: Sum of column Completed, column Cured - row New & Relapse Block 1: Block 1: Sum column Cured, Completed - rows New Pulmonary (B+) , Extra pulmonary B(+), New Pulmonary CD, New Extra pulmonary CD, Relapse B(+) and Relapse CD Block 1: Block 1 sum of column cured and completed of row New (1.1 Smear positive, 1.2 Smear Neg and not done and 1.4 EP) and 2.1 Relapse Denominator Block 1: Sum column Total number of patients of row New and Relapse Block 1 Sum column Total No. of Patients registered of row New Pulmonary (B+) , Extra pulmonary B(+), New Pulmonary CD, New Extra pulmonary CD, Relapse B(+) and Relapse CD Block 1 Sum column Total No. of Patients registered during Quarter Reported on row New (1.1 Smear positive, 1.2 Smear Neg and not done and 1.4 EP) and 2.1 Relapse TB Treatment Success All (INDTB-2018_33) Dataset TB Treatment Outcomes 2018 TB Treatment Outcomes New TB Treatment Outcomes Old Numerator Block 1 Sum of columns completed and cured of row New and Relapse and Retreatment excluding relapse Block 1 Sum of columns completed and cured of row New Pulmonary B+, Relapse B+, Extra pulmonary B+, Retreatment(excluding relapse) B+, New pulmonary CD, Retreatment(excluding relapse) CD and New extra pulmonary CD Block 1 sum of column cured and completed of row 1.New, 2.Retreatment (smear positive) and 3.Other previously treated Denominator Block 1 sum column total number of patients of row New and Relapse and Retreatment excluding relapses Block 1 Sum column No of cases registered of row New Pulmonary B+, Relapse B+, Extra pulmonary B+, Retreatment(excluding relapse) B+, New pulmonary CD, Retreatment(excluding relapse) CD and New extra pulmonary CD Block 1 Sum column Total No. of Patients registered during Quarter Reported on row New, Retreatment (smear positive) and Other previously treated","title":"Tb indicators"},{"location":"dhis2/tb-validation-rules/","text":"TB Program Validation Rules To ensure optimal quality of data, the following validation rules were setup. We have named them according to which dataset they apply Unsorted list of all validation rules. We'll later sort the according to which datasets they're meant to apply to. This is meant for you to deal better with these validation rules when they pop out. Dataset Validation Rules foo TB-2018_1 Total number of NEW patients tested for Rifampicin susceptibility should be greater than or equal to Number of patients tested for rifampicin susceptibility foo TB-2018_2 Total PREVIOUSLY TREATED DR-TB Patients should be greater than or equal to Number of PREVIOUSLY TREATED patients tested for rifampicin susceptibility who are laboratory confirmed RR-TB foo TB-2018_3 Total NEW DR-TB Patients should be greater than or equal to number of NEW patients tested for rifampicin susceptibility who are laboratory confirmed MDR-TB foo TB-2018_4 Total Previously Treated DR-TB Patients should be greater or equal to Number of patients tested for rifampicin susceptibility who are laboratory confirmed MDR-TB foo TB-2018_5 Total NEW DR-TB Patients should be greater than or equal to Number of laboratory confirmed RR-TB or MDT patients started on second-line treatment foo TB-2018_6 Total Previously Treated DR-TB Patients should be greater then or equal to Number of laboratory confirmed RR-TB or MDT patients started on second-line treatment foo TB-2018_7 Xpert MTB/RIF + LPA + Phenotypic DST (Block 2) should be less than or equal to Total New patients + Total Previously treated (Block 1) foo TB-2018_8 Total number of patients resistant to Isoniazid should be less than or equal to Total number of PTB bacteriologically confirmed cases foo TB-2018_9 Total Number resistant to Rifampicin only should be less than or equal to Total number of PTB bacteriologically confirmed cases foo TB-2018_10 Total Number resistant to Rifampicin and Isoniazid should be less than or equal to Total number of PTB bacteriologically confirmed cases foo TB-2018_12 Total Number resistant to Rifampicin and Isoniazid should be less than or equal to Total of Number of patients tested for Rifampicin susceptibility who are laboratory confirmed MDR-TB foo TB-2018_13 Total of RR or MDR-TB (block 3) should be equal to Total row \"c\" plus total row \"d\" (Block 2) foo TB-2018_14 Total of RR or MDR-TB (Block 4) should be equal to Total of row \"c\" + row \"d\" (Block 2) foo TB-2018_15 Total number of clients screened for TB (column (a), row (total) - Block 1) should be greater than or equal to Clients with signs and symptoms (Column (b), row (total) - Block 1) foo TB-2018_15a [Total] Total TB Screening greater_than_or_equal_to TB Screening Total Clients with signs and symptoms foo TB-2018_16 Total Referred by CHW (column(a)) should be greater than or equal to Referred by CHW Clients with signs and symptoms (column (b)) foo TB-2018_16a [Referred by CHW] Total TB Screening greater_than_or_equal_to Referred by CHW Clients with signs and symptoms foo TB-2018_17 [Referred by CSO] Total TB Screening greater_than_or_equal_to Referred by SCO Clients with signs and symptoms foo TB-2018_18 [Children] Total TB Screening greater_than_or_equal_to Children (0-14 years) Patients with signs and symptoms who tested bacteriologically foo TB-2018_19 [Mine Workers] Total TB Screening greater_than_or_equal_to Mine Workers Clients with signs and symptoms foo TB-2018_20 [Ex-mine workers] Total TB Screening greater_than_or_equal_to Ex-Mine Workers Clients with signs and symptoms foo TB-2018_21 [HHCM] Total TB Screening greater_than_or_equal_to HHCM Clients with signs and symptoms foo TB-2018_22 [HHXM] Total TB Screening greater_than_or_equal_to HHXM Clients with signs and symptoms foo TB-2018_23 [Factory Workers] Total TB Screening greater_than_or_equal_to Factory Workers Clients with signs and symptoms foo TB-2018_24 [Correctional Staff] Total TB Screening greater_than_or_equal_to Correctional Staff or Inmate Clients with signs and symptom foo TB-2018_25 [Health Workers] Total TB Screening greater_than_or_equal_to Health Workers Clients with signs and symptoms foo TB-2018_26 [Public Transport Ops] Total TB Screening greater_than_or_equal_to Public Transport Operators Clients with signs and symptoms foo TB-2018_27 [Total] Total TB Screening greater_than_or_equal_to TB Screening Total Patients with signs and symptoms who tested bacteriologically foo TB-2018_28 [Referred by CHW] Total TB Screening greater_than_or_equal_to Referred by CHW Patients with signs and symptoms who tested bacteriologically foo TB-2018_29 [Referred by CSO] Total TB Screening greater_than_or_equal_to Referred by SCO Total number of diagnosed foo TB-2018_30 [Children] Total TB Screening greater_than_or_equal_to Children (0-14 years) Patients with signs and symptoms who tested bacteriologically foo TB-2018_31 [Mine Workers] Total TB Screening greater_than_or_equal_to Mine Workers Patients with signs and symptoms who tested bacteriologically foo TB-2018_32 [Ex-mine workers] Total TB Screening greater_than_or_equal_to Ex-Mine Workers Total number of diagnosed foo TB-2018_33 [HHCM] Total TB Screening greater_than_or_equal_to HHCM Patients with signs and symptoms who tested bacteriologically foo TB-2018_34 [HHXM] Total TB Screening greater_than_or_equal_to HHXM Patients with signs and symptoms who tested bacteriologically foo TB-2018_35 [Factory Workers] Total TB Screening greater_than_or_equal_to Factory Workers Total number of diagnosed foo TB-2018_37 [Health Workers] Total TB Screening greater_than_or_equal_to Health Workers Patients with signs and symptoms who tested bacteriologically foo TB-2018_38 [Public Transport Ops] Total TB Screening greater_than_or_equal_to Public Transport Operators Patients with signs and symptoms who tested bacteriologically foo TB-2018_39 TB Screening Total Total number of diagnosed greater_than_or_equal_to TB Screening Total Number started on ant-TB treatment foo TB-2018_40 Referred by CHW Total number of diagnosed greater_than_or_equal_to Referred by CHW Number started on ant-TB treatment foo TB-2018_41 Referred by SCO Total number of diagnosed greater_than_or_equal_to Referred by SCO Number started on ant-TB treatment foo TB-2018_42 Children (0-14 years) Total number of diagnosed greater_than_or_equal_to Children (0-14 years) Number started on ant-TB treatment foo TB-2018_43 Mine Workers Total number of diagnosed greater_than_or_equal_to Mine Workers Number started on ant-TB treatment foo TB-2018_44 Ex-Mine Workers Total number of diagnosed greater_than_or_equal_to Ex-Mine Workers Number started on ant-TB treatment foo TB-2018_45 HHCM Total number of diagnosed greater_than_or_equal_to HHCM Number started on ant-TB treatment foo TB-2018_46 HHXM Total number of diagnosed greater_than_or_equal_to HHXM Number started on ant-TB treatment foo TB-2018_47 Factory Workers Total number of diagnosed greater_than_or_equal_to Factory Workers Number started on ant-TB treatment foo TB-2018_48 Correctional Staff or Inmate Total number of diagnosed greater_than_or_equal_to Correctional Staff or Inmate Number started on ant-TB treatment foo TB-2018_49 Health Workers Total number of diagnosed greater_than_or_equal_to Health Workers Number started on ant-TB treatment foo TB-2018_50 Public Transport Operators Total number of diagnosed greater_than_or_equal_to Public Transport Operators Number started on ant-TB treatment foo TB-2018_51 TB Screening Total Patients with signs and symptoms who tested bacteriologically greater_than_or_equal_to TB Screening Total Total number of diagnosed foo TB-2018_52 Referred by CHW Patients with signs and symptoms who tested bacteriologically greater_than_or_equal_to Referred by CHW Total number of diagnosed foo TB-2018_53 Referred by SCO Total number of diagnosed greater_than_or_equal_to Referred by SCO Total number of diagnosed foo TB-2018_54 Children (0-14 years) Patients with signs and symptoms who tested bacteriologically greater_than_or_equal_to Children (0-14 years) Total number of diagnosed foo TB-2018_55 Mine Workers Patients with signs and symptoms who tested bacteriologically greater_than_or_equal_to Mine Workers Total number of diagnosed foo TB-2018_56 Ex-Mine Workers Total number of diagnosed greater_than_or_equal_to Ex-Mine Workers Total number of diagnosed foo TB-2018_57 HHCM Patients with signs and symptoms who tested bacteriologically greater_than_or_equal_to HHCM Total number of diagnosed foo TB-2018_58 HHXM Patients with signs and symptoms who tested bacteriologically greater_than_or_equal_to HHXM Total number of diagnosed foo TB-2018_59 Factory Workers Total number of diagnosed greater_than_or_equal_to Factory Workers Total number of diagnosed foo TB-2018_60 Correctional Staff or Inmate Patients with signs and symptoms who tested bacteriologically greater_than_or_equal_to Correctional Staff or Inmate Total number of diagnosed foo TB-2018_61 Health Workers Patients with signs and symptoms who tested bacteriologically greater_than_or_equal_to Health Workers Total number of diagnosedm foo TB-2018_62 Public Transport Operators Patients with signs and symptoms who tested bacteriologically greater_than_or_equal_to Public Transport Operators Total number of diagnosed foo TB-2018_63 TB Screening Total Patients with signs and symptoms who tested bacteriologically greater_than_or_equal_to TB Screening Total Number started on ant-TB treatment foo TB-2018_64 Referred by CHW Patients with signs and symptoms who tested bacteriologically greater_than_or_equal_to Referred by CHW Number started on ant-TB treatment foo TB-2018_65 Referred by SCO Total number of diagnosed greater_than_or_equal_to Referred by SCO Number started on ant-TB treatment foo TB-2018_66 Children (0-14 years) Patients with signs and symptoms who tested bacteriologically greater_than_or_equal_to Children (0-14 years) Number started on ant-TB treatment foo TB-2018_67 Mine Workers Patients with signs and symptoms who tested bacteriologically greater_than_or_equal_to Mine Workers Number started on ant-TB treatment foo TB-2018_68 Ex-Mine Workers Total number of diagnosed greater_than_or_equal_to Ex-Mine Workers Number started on ant-TB treatment foo TB-2018_69 HHCM Patients with signs and symptoms who tested bacteriologically greater_than_or_equal_to HHCM Number started on ant-TB treatment foo TB-2018_70 HHXM Patients with signs and symptoms who tested bacteriologically greater_than_or_equal_to HHXM Number started on ant-TB treatment foo TB-2018_71 Factory Workers Total number of diagnosed greater_than_or_equal_to Factory Workers Number started on ant-TB treatment foo TB-2018_72 Correctional Staff or Inmate Patients with signs and symptoms who tested bacteriologically greater_than_or_equal_to Correctional Staff or Inmate Number started on ant-TB treatment foo TB-2018_73 Health Workers Patients with signs and symptoms who tested bacteriologically greater_than_or_equal_to Health Workers Number started on ant-TB treatment foo TB-2018_74 Public Transport Operators Patients with signs and symptoms who tested bacteriologically greater_than_or_equal_to Public Transport Operators Number started on ant-TB treatment foo TB-2018_75 TB Screening Total Clients with signs and symptoms greater_than_or_equal_to TB Screening Total Patients with signs and symptoms who tested bacteriologically foo TB-2018_76 Referred by CHW Clients with signs and symptoms greater_than_or_equal_to Referred by CHW Patients with signs and symptoms who tested bacteriologically foo TB-2018_77 Referred by SCO Clients with signs and symptoms greater_than_or_equal_to Referred by SCO Total number of diagnosed foo TB-2018_78 Children (0-14 years) Patients with signs and symptoms who tested bacteriologically greater_than_or_equal_to Children (0-14 years) Patients with signs and symptoms who tested bacteriologically foo TB-2018_79 Mine Workers Clients with signs and symptoms greater_than_or_equal_to Mine Workers Patients with signs and symptoms who tested bacteriologically foo TB-2018_80 Ex-Mine Workers Clients with signs and symptoms greater_than_or_equal_to Ex-Mine Workers Total number of diagnosed foo TB-2018_81 HHCM Clients with signs and symptoms greater_than_or_equal_to HHCM Patients with signs and symptoms who tested bacteriologically foo TB-2018_82 HHXM Clients with signs and symptoms greater_than_or_equal_to HHXM Patients with signs and symptoms who tested bacteriologically foo TB-2018_83 Factory Workers Clients with signs and symptoms greater_than_or_equal_to Factory Workers Total number of diagnosed foo TB-2018_84 Correctional Staff or Inmate Clients with signs and symptom greater_than_or_equal_to Correctional Staff or Inmate Patients with signs and symptoms who tested bacteriologically foo TB-2018_85 Health Workers Clients with signs and symptoms greater_than_or_equal_to Health Workers Patients with signs and symptoms who tested bacteriologically foo TB-2018_86 Public Transport Operators Clients with signs and symptoms greater_than_or_equal_to Public Transport Operators Patients with signs and symptoms who tested bacteriologically foo TB-2018_87 TB Screening Total Number who died anti-TB treatment less_than_or_equal_to TB Screening Total Total number of diagnosed foo TB-2018_88 Referred by CHW Number who died anti-TB treatment less_than_or_equal_to Referred by CHW Total number of diagnosed foo TB-2018_89 Referred by SCO Number who died anti-TB treatment less_than_or_equal_to Referred by SCO Total number of diagnosed foo TB-2018_90 Children (0-14 years) Number who died anti-TB treatment less_than_or_equal_to Children (0-14 years) Total number of diagnosed foo TB-2018_91 Mine Workers Number who died anti-TB treatment less_than_or_equal_to Mine Workers Total number of diagnosed foo TB-2018_92 Ex-Mine Workers Number who died anti-TB treatment less_than_or_equal_to Ex-Mine Workers Total number of diagnosed foo TB-2018_93 HHCM Number who died anti-TB treatment less_than_or_equal_to HHCM Total number of diagnosed foo TB-2018_94 HHXM Number who died anti-TB treatment less_than_or_equal_to HHXM Total number of diagnosed foo TB-2018_95 Factory Workers Number who died anti-TB treatment less_than_or_equal_to Factory Workers Total number of diagnosed foo TB-2018_96 Correctional Staff or Inmate Number who died anti-TB treatment less_than_or_equal_to Correctional Staff or Inmate Total number of diagnosed foo TB-2018_97 Health Workers Number who died anti-TB treatment less_than_or_equal_to Health Workers Total number of diagnosed foo TB-2018_98 Public Transport Operators Number who died anti-TB treatment less_than_or_equal_to Public Transport Operators Total number of diagnosed foo TB-2018_99 TB Screening Total Number who died anti-TB treatment less_than_or_equal_to TB Screening Total Number started on ant-TB treatment please click on each validation rules to learn how to handle them","title":"Tb validation rules"},{"location":"dhis2/tb/","text":"TB DR-TB 2018 TB Case Detection 2018 TB Treatment Outcomes 2018 TB Notification 2018","title":"TB"},{"location":"dhis2/tb/#tb","text":"DR-TB 2018 TB Case Detection 2018 TB Treatment Outcomes 2018 TB Notification 2018","title":"TB"},{"location":"dhis2/usermanual/","text":"User Manual This manual is inteded for non technical end users","title":"User Manual"},{"location":"dhis2/usermanual/#user-manual","text":"This manual is inteded for non technical end users","title":"User Manual"},{"location":"ereg/DeployingMappings/","text":"Mappings and Serialized Object Pipeline Warning First start with your local instance before attempting to update the live server. When configuring the live server, please make sure that no one is using the system when doing Step 1 and 2 Removing and Creating New Container . Backup live server database before doing any of these steps . It has been noticed that some of the backup services have some technical issues and therefore you are advised to double check the file size after restarting the backup service before removing and stopping the container. The other option you can manually backup facility database by yourself. Our automated deployment for mappings and serialized object comprises 5 steps: 0. Preparatory Steps SSH into the server with ssh openmrs@_SERVER_IP_ADDRESS First check to see if your server has internet connectivity with ping github.com If not try to check contents of resolv.conf in /etc/ by running the following command: cat /etc/resolv.conf.Normally you should see google.com nameserver pointing to its ip 8.8.8.8.Edit the file if name server is not configured in the file. Nameserver(all in lowercase) 8.8.8.8.Ping 8.8.8.8 or google.com.After you may ping github.com just to make sure you are able to get packets from github.com Then download all of the files need with git clone https://github.com/eRegister/docs.git The command above will create a folder called docs in /home/openmrs if you didn't change to another directory. All of files that need to be transfered to the server are in docs/scripts/mappingsscripts : concepts_restore.sh gitpull_bahmniapps.sh gitpull_concepts.sh gitpull_mappings.sh gitpull_serial.sh gitpullbahmniapps.service gitpullconcepts.service gitpullmappings.service gitpullserializedobject.service serializedboject_restore.sh Go to /development/ and create the following directories openmrs_reporting_release and openmrs_concepts_release and grant openmrs user permissions to own the files. Move the following files to /usr/local/bin/ and make them executable: concept_restore.sh , serializedobject_restore . Move gitpull_concepts.sh to /development/openmrs_concepts_release and gitpull_serial.sh to /development/openmrs_reporting_release/ , make them executable. Note Files are already on the server Caution PLEASE ENSURE THAT YOU HAVE BACKED UP THE DB BEFORE EXECUTING THE STEPS BELOW!!! 1. Removing Current Container check the running container: docker ps Stop the container: docker stop openmrseregister Check that the container has stopped run docker ps and you should see an empty table Create a new image from the stopped container: docker commit openmrseregister omrsregrepo/bahmni_base:09082020 [ tag should be date at time of creating image ] you can check the newly created image with docker images Remove the container: docker container rm openmrseregister 2. Creating a Volumes and enabling services Now it's time to create a new container from the image we created earlier with: docker run -e container_name=openmrseregister -it -d --restart always -p 443:443 -p 80:80 -p 8069:8069 -p 8000:8000 --privileged --name openmrseregister -v /development/bahmni_config_release:/development/bahmni_config_release -v /development/dhisconnector_mappings:/development/dhisconnector_mappings -v /development/bahmniapps_release:/development/bahmniapps_release omrsregrepo/bahmni_base:06082020 /bin/bash Go to /development/ and grant openmrs user permissions to files in /development/dhisconnector_mappings and /development/bahmniapps_release Move gitpull_bahmniapps.sh to /development/bahmniapps_release and gitpull_mappings.sh to /development/dhisconnector_mappings , make them executable. Create local repo's in all directories in /development except /development/bahmni_config_release , with the following commands: git init , git remote add git origin https://github.com:/eRegister/repo_name test that you are able to fetch files from remote repo's by git fetch --all move all services gitpullmappings.service , gitpullconcepts.serivce , gitpullbahmniapps.service and gitpullserializedobject.service . Nagivate into /etc/system/system/ and type the following commands to enable gitpull_mappings.service , gitpullconcepts.service , gitpullbahmniapps.service , gitpullserializedobject.service sudo chmod 664 service_name sudo systemctl daemon-reload sudo systemctl enable service_name Note when the service has been registered successfully you should see created sym link in /etc/systemd/system/default.target.wants/. 3. Configuring cronjob configure the cronjob to trigger the services everyday 7 am if our servers universal time is at UTC. to edit the cronjob do: sudo crontab -e if it's first time running the this command it'll probably ask you to choose the default text editor, please be kind enough to choose Nano as it's the easiest editor for most administrators. configure the script as shown below and then when the updates have been pulled successfully change the script to trigger services at 7:05 , 7:10 , 7:15 , 7:25 respectively. Do not change the command that trigger serialized object script */3 * * * * systemctl restart gitpullmappings.service >> /var/log gitpull_mappings.log */4 * * * * systemctl restart gitpullserializedobject.service >> /var/log/gitpull_serial.log */5 * * * * systemctl restart gitpullconcepts.service >> /var/log/gitpull_concepts.log */6 * * * * sudo bash /usr/local/bin/concepts_restore.sh >> /var/log/concept_restore.log 20 7 * * * sudo bash /usr/local/bin/serializedobject_restore.sh >> /var/log/serial_restore.log Wait for a while for cron job to execute the commands and check directories in development have updates from GitHub. For failed services refer to Automated Deployment Exit Codes to troubleshoot. 4. Restore database and create soft links Go to into a container and start mysql service. Connect to database server using no password mysql -uroot -p Initialise openmrs database and users by sourcing openmsq.sql file in container root directory, source openmrs.sql; Wait a moment for databases to be created and once the script is done quit or exit the database server and restart mysql. Restore facility database using the command mysql -uroot -ppassword openmrs; Go to /opt/openmrs/dhisconnector Remove mappings folder and create soft link to /development/dhisconnector_mappings/dhisconnector_mappings/mappings command: sudo ln -s /development/dhisconnector_mappings/dhisconnector_mappings/mappings/ mappings Exit the container and go to /usr/local/bin and run serializedobject_restore.sh Restart other services and openmrs the broswer to access openmrs admin page. Go to reporting you should see total of 36 openmrs period indicator reports. Refer to staging server to see example eRegister Staging server","title":"Mappings and Serialized Object Pipeline"},{"location":"ereg/DeployingMappings/#mappings-and-serialized-object-pipeline","text":"Warning First start with your local instance before attempting to update the live server. When configuring the live server, please make sure that no one is using the system when doing Step 1 and 2 Removing and Creating New Container . Backup live server database before doing any of these steps . It has been noticed that some of the backup services have some technical issues and therefore you are advised to double check the file size after restarting the backup service before removing and stopping the container. The other option you can manually backup facility database by yourself.","title":"Mappings and Serialized Object Pipeline"},{"location":"ereg/FAQs/","text":"FAQ's .....info on loading...","title":"FAQ's"},{"location":"ereg/FAQs/#faqs","text":".....info on loading...","title":"FAQ's"},{"location":"ereg/IntegrationDHIS2/","text":"Bahmni DHIS2 Integration Installation Install git $sudo yum update # update system packages $sudo yum install git Install maven $sudo yum install maven Install rpm-build $sudo yum install rpm-build Clone the source code from the repository $sudo git clone <repository url link> Build the plugin $sudo mvn -Dmaven.test.skip=true install Install the plugin $sudo yum install dhis-integration-1.0-1.noarch.rpm Configure the plugin - set application properties Navigate to the application\u2019s properties configuration file: cd /etc/dhis-integration/dhis-integration.yml Configure the application as follows: Testing Configure reports - create a concatenated report (in reports.json) for the program and associated query file e.g product_list.sql $sudo yum autoremove dhis-integration Uninstallation $sudo yum autoremove dhis-integration","title":"Bahmni DHIS2 Integration"},{"location":"ereg/IntegrationDHIS2/#bahmni-dhis2-integration","text":"","title":"Bahmni DHIS2 Integration"},{"location":"ereg/TB/","text":"TB Patient Flow Fig 1 - TB Patient Flow","title":"TB"},{"location":"ereg/bahmniaddons/","text":"Core Addons & Bahmni Addons Pipeline Warning Content coming soon...","title":"Core Addons & Bahmni Addons Pipeline"},{"location":"ereg/bahmniaddons/#core-addons-bahmni-addons-pipeline","text":"Warning Content coming soon...","title":"Core Addons &amp; Bahmni Addons Pipeline"},{"location":"ereg/bahmniapps/","text":"Bahmni Apps Pipeline Warning Content coming soon...","title":"Bahmni Apps Pipeline"},{"location":"ereg/bahmniapps/#bahmni-apps-pipeline","text":"Warning Content coming soon...","title":"Bahmni Apps Pipeline"},{"location":"ereg/bahmniconfigs/","text":"Bahmni Configs Pipeline Warning Please make sure that no one is using the system Backup your database before doing any of these steps. Our automated deployment comprises 5 steps: 0. Preparatory Steps SSH into the server with ssh openmrs@_SERVER_IP_ADDRESS First check to see if your server has internet connectivity with ping github.com If not try to check contents of resolv.conf in /etc/ by running the following command: cat /etc/resolv.conf Normally you should see google.com nameserver pointing to its ip 8.8.8.8 . Edit the file if name server is not configured in the file. * `nameserver 8.8.8.8` `Ping 8.8.8.8` or `google.com`.After you may ping github.com just to make sure you are able to get packets from github.com Then download all of the files need with git clone https://github.com/eRegister/docs.git The command above will create a folder called docs in /home/openmrs if you didn't change to another directory. All of files that need to be transfered to the server are in docs/scripts/: gitpull.service gitpull.sh openmrs_global_properties serialized objects symbolic_creation.sh visit_types.sql Note we started by ssh'ng into the server so the files are already in the server Backup facility specific configurations and configurations: * if you haven't already, backup your database with invoking the script that does that, that is already in your server: docker exec -i openmrseregister /usr/bin/mysqldump -u root --password=password -A > $HOME/latestback.sql the -A tag is going to backup everything * do ls -lh to see the size of latestback.sql it should be 200MB or more, not less. Caution PLEASE ENSURE THAT YOU HAVE BACKED UP BOTH THE DB AND CONFIG FILES BEFORE EXECUTING THE STEPS BELOW!!! 1. Removing Current Container check the running container: docker ps Stop the container: docker stop openmrseregister Check that the container has stopped run docker ps and you should see an empty table Create a new image from the stopped container: docker commit openmrseregister omrsregrepo/bahmni_base:19052020 [ tag should be date at time of creating image ] you can check the newly created image with* docker images Remove the container: docker container rm openmrseregister 2. Creating a Volume create development directory sudo mkdir -p /development/bahmni_config_release change ownership of the new folder from root to openmrs with sudo chown -R openmrs:openmrs /development becuase the service is managed by openmrs user get into the directory with cd /development/bahmni_config_release configure gitpull services Note DO NOT use git clone initialise new local git repo: git init if you do ls -a you'll see a hidden .git to show that indeed the folder has been intialized connect local repository with remote: git remote add origin https://github.com/eRegister/bahmni_config_release.git download the latest commits to the repo: git fetch --all you should see a log of all the latest commits downloading now go to the home directory: cd ~ OR cd $HOME copy gitpull.service file: sudo cp gitpull.service /etc/systemd/system/ move gitpull.sh file: sudo mv gitpull.sh /development/bahmni_config_release change directory cd /development/bahmni_config_release/ make the script executable sudo chmod +x gitpull.sh and sudo chown openmrs:openmrs gitpull.sh check the contents of the script with cat gitpull.sh to make sure that it does git fetch --all and git pull origin master Nagivate into /etc/systemd/system/ and type the following commands to register gitpull service in system sudo chmod 664 gitpull.service sudo systemctl daemon-reload sudo systemctl enable gitpull.service Note:when the service has been registered successfully you should see created sym link in /etc/systemd/system/default.target.wants/. 3. Configuring cronjob & Restoring database configure the cronjob to trigger the service Monday 9 am to edit the cronjob do: sudo crontab -e if it's first time running the this command it'll probably ask you to choose the default text editor, please be kind enough to choose Nano as it's the easiest editor formost administrators. configure the script to run within 2 mins just to make sure everything is running OK: */2 * * * * systemctl restart gitpull.service >> /var/log/gitpull.log2>&1 inside the crontab editor write: * 7 * * mon systemctl restart gitpull.service >> /var/log/gitpull.log2>&1 Go to /development/bahmni_config_release/ and check the status of cron service to see when it has executed gitpull. service, once done check the file by typing ll or ls. For some reason you may find that the service has not pulled the files from our remote repository, first thing to do is to check the status of the service if it has successfully started. If not check the status code of the service to guide you what might went wrong. The following table shows possible exit codes of the systemd service. Another possible reason it could be that you forgot to change the ownership of the development bahmni config release, check it. EXIT CODE SYMBOLIC NAME DESCRIPTION 0 EXIT_SUCCESS Generic success code 1 EXIT_FAILURE Generic failure or unspecified error(try to start the development/bahmni_config_release afresh directory ) 200 EXIT_CHDIR Changing to the requested working directory failed 208 EXIT_STDIN Failed to setup standard input 209 EXIT_STDOUT Failed to set up standard out 203 EXIT_EXEC The actual process execution failed. Most likely this is caused by a missing or non-accessible executable file Another possible reason could be that the service in unable to fetch from remote repository which is not related to systemd service, check the logs of the service by typing sudo tail -f /var/log/gitpull.log If gitpull service has pulled the bahmni config file then make a permanent configuration in cronjob to trigger the service every Monday 9am . inside the crontab editor write: * 7 * * mon systemctl restart gitpull.service >> /var/log/gitpull.log2>&1 Now it's time to create a new container from the image we created earlier with: docker run -e container_name=openmrseregister -it -d --restart always -p 443:443 -p 80:80 -p 8069:8069 -p 8000:8000 --privileged --name openmrseregister -v /development/bahmni_config_release:/development/bahmni_config_release -v openmrseregister:/openmrseregister omrsregrepo/bahmni_base:19052020 /bin/bash After the command above you should see a container called openmrseregister running If the container has started successfully there is no need to restore database just copy all .sql files to container root ./ and symbolic_creation.sh to /opt/openmrs into the new running container docker cp latestbackup.sql openmrseregister:/ To get into the container do: docker exec -it openmrseregister bash Change directory to /development/bahmni_config to check if the volume was created when starting a new container. You should see the bahmni config release files. Go to /var/www/ and run: sudo rm bahmni_config or unlink bahmni_config Type sudo ln \u2013s /development/bahmni_config_release/ bahmni_config Go to /opt/openmrs/ and make symbolic_creation executable and run it Start MySQL service: service mysqld start Restore all sql copied sql files visit_type.sql , patient_identifier.sql , openmrs_global_property.sql and serial object.sql Start other services openmrs , httpd and bahmni-reports Browse to http://IP_of_eRegister/bahmni/home and check if the changes have been effected. The video below is an attempt to demonstrate the steps above:","title":"Bahmni Configs Pipeline"},{"location":"ereg/bahmniconfigs/#bahmni-configs-pipeline","text":"Warning Please make sure that no one is using the system Backup your database before doing any of these steps.","title":"Bahmni Configs Pipeline"},{"location":"ereg/clientregistry/","text":"Client Register ....info on Lesotho's Client Register Architecture","title":"Client Register"},{"location":"ereg/clientregistry/#client-register","text":"....info on Lesotho's Client Register Architecture","title":"Client Register"},{"location":"ereg/clinicalsearch/","text":"Clinical Search Deployment Guideline Repositories to pull updates from 1. Bahmniaps_release 2. Openmrs-module-bahmnicore-release 3. Openmrs-module-xdssender-release 4. Openmrs-module-dhisconnector-release 5. Bahmni-docker Updates deployment in eRegister 1. Make sure all services are running for all the mentioned repositories.NB don\u2019t git clone please 2. Copy all downloaded omods files to /opt/openmrs/modules/ 3. For bahmni docker repo, after pulling from master branch, go to misc folder and restore global_property_15112021.sql 4. Restart openmrs to load updated modules Deployment verification Xdssender Search xdssender.exportObsEndpoint and verify the property is set to http://devbukanals.org/xdsrepositoryrest/openmrs/ws/rest/v1/obs Bahmni apps You should see the following snapshot After clicking view Long. Obs button you should get the following reponse from SHR. DHIS connector Go to location mapping form , under OpenMRS location you should see long list of locations.Make configurations by testing the DHIS server, mapping the right location in OpenMRS to DHIS2, configure the right mappings under automation form. Check that the reporting auto running scheduler is running.","title":"Clinical Search Deployment Guideline"},{"location":"ereg/clinicalsearch/#clinical-search-deployment-guideline","text":"Repositories to pull updates from 1. Bahmniaps_release 2. Openmrs-module-bahmnicore-release 3. Openmrs-module-xdssender-release 4. Openmrs-module-dhisconnector-release 5. Bahmni-docker Updates deployment in eRegister 1. Make sure all services are running for all the mentioned repositories.NB don\u2019t git clone please 2. Copy all downloaded omods files to /opt/openmrs/modules/ 3. For bahmni docker repo, after pulling from master branch, go to misc folder and restore global_property_15112021.sql 4. Restart openmrs to load updated modules Deployment verification Xdssender Search xdssender.exportObsEndpoint and verify the property is set to http://devbukanals.org/xdsrepositoryrest/openmrs/ws/rest/v1/obs Bahmni apps You should see the following snapshot After clicking view Long. Obs button you should get the following reponse from SHR. DHIS connector Go to location mapping form , under OpenMRS location you should see long list of locations.Make configurations by testing the DHIS server, mapping the right location in OpenMRS to DHIS2, configure the right mappings under automation form. Check that the reporting auto running scheduler is running.","title":"Clinical Search Deployment Guideline"},{"location":"ereg/eRegister-092-Release-Notes/","text":"eRegister Release Notes Warning this beta version is going to be deployed at selected pilot facilities. Please report issues here: https://github.com/eRegister/bahmni_docker/issues 0.92 - Release Candidate (RC) #1 Pharmacy Module Customized core odoo addons and Bamni addons to fit Lesotho context Changed workflow to suite Lesotho context Reports Ported all Bahmni 0.90 reports to Bahmni 0.92 Developed Informed Push Tool reports Automated Deployment Now supports auto deploying Bahmnni modules (apps), and odoo modules Registration Module National Search ported from 0.90 and improved Rename gender to sex Disabled camera and picture icon Other Information: change contact to phone number Hide PNC & ANC numbers for male patients Clinical Module Refactoring Bahmni App to align with 0.90 Improving the flow of order automation from observation to medication tab Numbering on patient queue Pregnancy status: use gender attribute to show and hide Include both age and sex to the patient payload sent from bahmni to odoo Atomfeed Atom feed to allow concepts in Bahmni to automatically be pulled in odoo","title":"eRegister 092 Release Notes"},{"location":"ereg/facilityimplementationchecklist/","text":"Facility Implementation Checklist Below is a checklist of things that should be done and how to do them during rollout: Disable server laptop lid to hibernate/shutdown when lid is closed. This is done to protect the laptop's monitor and keyboard from dust and potential damage. edit the file /etc/systemd/logind.conf and change the line #HandleLidSwitch=hibernate to HandleLidSwitch=ignore . Don't forget to uncomment the line by removing # Configure automated reporting to DHIS2 (Training Instance) ...CONTENT LOADING.... Configure Services to Start When the Server Boots ...CONTENT LOADING.... Configure static IP address ...CONTENT LOADING.... Changing the login name of eRegister ssh in to the server with ssh openmrs@IPADDRESS and then get into the running container with sudo docker exec -it openmrseregister bash then vi /var/www/bahmniapps/i18n/home/locale_en.json and then look for LOGIN_PAGE_HEADER_TEXT variable and change it accordingly. Create usernames for all health facility staff browse to IPADDRESS/openmrs and login when logged in, go to Administration -> Manage Users -> Add User. Don't forget to search for the user's account before adding a new user account check on appropriate roles Enabled appropriate \"locations\" for login into the system ssh in to the server with ssh openmrs@IPADDRESS and then get into the running container with sudo docker exec -it openmrseregister bash then vi /var/www/bahmniapps/i18n/home/locale_en.json and then mysql -u root -p enter password when prompted, then use openmrs and then run this query to see all location for your site. For example if you're in Lithipeng Health Center you can run select location_id, name, description, retired from location where description like '%lithipeng%' and then you'll something like this: +---------------+-----------------+--------------+------------+ | location_id | name | description | retired | +---------------+-----------------+--------------+------------+ | 554 | Lithipeng HC | Lithipeng HC | 1 | | 555 | ART/TB Clinic | Lithipeng HC | 1 | | 556 | MCH Clinic | Lithipeng HC | 1 | | 557 | HTS General OPD | Lithipeng HC | 1 | +---------------+-----------------+--------------+------------+ 4 rows in set (0.00 sec) Then update retired to be 0 with update set location retired=0 where location_id=554 AND location_id=555 AND location_id=556 AND location_id=557; NB: Creation of locations is managed centrally and your role is just to enable/disable locations so that we mantain identical schemas of the database across all health facilities in the country. This will help in making Health Information Exchange easy. Automated Backups ...CONTENT LOADING.... Blocking The Following Social Media Sites on the Wi-Fi router: whatsapp.com facebook.com youtube.com instagram.com tiktok.com twitter.com Browse to http://192.168.8.1 and login, then go to Settings -> Security -> Domain Name Filter, make sure the Blacklist radio button is selected, then Add the domains. Don't forget to change status to \"on\". NB: Make sure \"Enable Domain Name Filter\" is enabled in here Settings -> Firewall Switch","title":"Facility Implementation Checklist"},{"location":"ereg/facilityimplementationchecklist/#facility-implementation-checklist","text":"Below is a checklist of things that should be done and how to do them during rollout: Disable server laptop lid to hibernate/shutdown when lid is closed. This is done to protect the laptop's monitor and keyboard from dust and potential damage. edit the file /etc/systemd/logind.conf and change the line #HandleLidSwitch=hibernate to HandleLidSwitch=ignore . Don't forget to uncomment the line by removing # Configure automated reporting to DHIS2 (Training Instance) ...CONTENT LOADING.... Configure Services to Start When the Server Boots ...CONTENT LOADING.... Configure static IP address ...CONTENT LOADING.... Changing the login name of eRegister ssh in to the server with ssh openmrs@IPADDRESS and then get into the running container with sudo docker exec -it openmrseregister bash then vi /var/www/bahmniapps/i18n/home/locale_en.json and then look for LOGIN_PAGE_HEADER_TEXT variable and change it accordingly. Create usernames for all health facility staff browse to IPADDRESS/openmrs and login when logged in, go to Administration -> Manage Users -> Add User. Don't forget to search for the user's account before adding a new user account check on appropriate roles Enabled appropriate \"locations\" for login into the system ssh in to the server with ssh openmrs@IPADDRESS and then get into the running container with sudo docker exec -it openmrseregister bash then vi /var/www/bahmniapps/i18n/home/locale_en.json and then mysql -u root -p enter password when prompted, then use openmrs and then run this query to see all location for your site. For example if you're in Lithipeng Health Center you can run select location_id, name, description, retired from location where description like '%lithipeng%' and then you'll something like this: +---------------+-----------------+--------------+------------+ | location_id | name | description | retired | +---------------+-----------------+--------------+------------+ | 554 | Lithipeng HC | Lithipeng HC | 1 | | 555 | ART/TB Clinic | Lithipeng HC | 1 | | 556 | MCH Clinic | Lithipeng HC | 1 | | 557 | HTS General OPD | Lithipeng HC | 1 | +---------------+-----------------+--------------+------------+ 4 rows in set (0.00 sec) Then update retired to be 0 with update set location retired=0 where location_id=554 AND location_id=555 AND location_id=556 AND location_id=557; NB: Creation of locations is managed centrally and your role is just to enable/disable locations so that we mantain identical schemas of the database across all health facilities in the country. This will help in making Health Information Exchange easy. Automated Backups ...CONTENT LOADING.... Blocking The Following Social Media Sites on the Wi-Fi router: whatsapp.com facebook.com youtube.com instagram.com tiktok.com twitter.com Browse to http://192.168.8.1 and login, then go to Settings -> Security -> Domain Name Filter, make sure the Blacklist radio button is selected, then Add the domains. Don't forget to change status to \"on\". NB: Make sure \"Enable Domain Name Filter\" is enabled in here Settings -> Firewall Switch","title":"Facility Implementation Checklist"},{"location":"ereg/intro/","text":"eRegister Installation Manual Warning this guide is for Bahmni eRegister 0.90. For version 0.92, please refer to guide here This document attempts to standardize how we prepare our servers to be ready for deployment at health facilities. Before we follow the steps on how to prepare the server, we first have to install Ubuntu Server 18.04 LTS from Ubuntu Site Installing Docker To install Docker, please follow the instructions detailed in https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-16-04 these instructions above were written for Ubuntu 16 but work perfectly for Ubuntu 18 Pulling the docker image and running it as a container In situations of poor internet connectivity where we're committing and sharing images using sneakernet, please follow the guide in here To pull the docker, it's not necessary to login from the terminal, just run the following: docker pull omrsregrepo/bahmni_base:25012020_release After the image has been pulled you should be able to see it when you do docker images A container is a running instance of an image. The last step is to run our image to make container with docker run -e container_name=openmrseregister -it -d --restart always -p 443:443 -p 80:80 -p 8069:8069 -p 8000:8000 --privileged --name openmrseregister -v openmrseregister:/openmrseregister omrsregrepo/bahmni_base:25012020_release /bin/bash To check that indeed we have a container running, you can do docker ps . Navigate into the container using the command, docker exec -it openmrseregister bash Once you have landed into the container, make sure that you're in the / directory and then start mysqld service with services mysqld start , login to a database without a password and then run the command below: source openmrs.sql After running the command above, do use openmrs and then do source OpenMRS_Start_up_Schema_V1.sql Starting Services Often times, we're going to encounter situations where a container is running but the services inside the container are not, to start your services running the following commands in this order: service httpd start service mysqld start service openmrs start service bahmni-reports start Now you should be able to see eRegister when you browse to http://server_IP/bahmni/home. you'll use the IP address of your server Enabling/Disabling Locations Depending on the health facility where the server will be deployed, we'll have to either enable or disable locations in the database. To do all of these, it is highly recommended that we run all of our sql queries through phpMyAdmin and shy away from using CLI. Browse to http://192.168.8.10/mydb and use the following credentials. remember to use your IP address username: password: On the left pane, you'll see a list of databases, click on openmrs . All of the locations are managed by a location table. If for example you're in Motebang Hospital, to see all of the locations for Motebang Hospital, run the following query: SELECT location_id, name, retired FROM location WHERE name LIKE '%mote%' 1 is for when retired is TRUE and 0 is when retired is FALSE . To enable locations we have to set retired to 0 . * So it will be done with the following UPDATE query: UPDATE location SET retired = 0, WHERE location_id=121; to enable Motebang Hospital * So it will be done with the following UPDATE query: UPDATE location SET retired = 0, WHERE location_id=122; to enable ART Corner Motebang Hospital * ...and so on and so fourth... ## Configuring Backup CONTENT LOADING....","title":"eRegister Installation Manual"},{"location":"ereg/intro/#eregister-installation-manual","text":"Warning this guide is for Bahmni eRegister 0.90. For version 0.92, please refer to guide here This document attempts to standardize how we prepare our servers to be ready for deployment at health facilities. Before we follow the steps on how to prepare the server, we first have to install Ubuntu Server 18.04 LTS from Ubuntu Site","title":"eRegister Installation Manual"},{"location":"ereg/odooreports/","text":"Odoo Reports Pipeline Warning Content coming soon...","title":"Odoo Reports Pipeline"},{"location":"ereg/odooreports/#odoo-reports-pipeline","text":"Warning Content coming soon...","title":"Odoo Reports Pipeline"},{"location":"ereg/reppull/","text":"Automated Pulling of Latest Changes from GitHub Repo Get into the container by running docker exec -it openmrseregister bash . In the container, you'll land in / directory If it's not already there, create a folder in the root / directory with the following command: mkdir -p scripts NB: you don't need to do sudo because we're already logged into the container as root Change directory into the scripts folder with cd /scripts Do pwd to make sure you're in /scripts folder Download the git_sync_branch.sh script by running wget https://raw.githubusercontent.com/eRegister/scripts/master/git_sync_branch.sh When you run ls you should now see the script. Make the script executable by running chmod +x git_sync_branch.sh You can test that the script is running fine by doing bash -v git_sync_branch.sh Now let's exit the container with Exit Now that you're outside the containder, change directory to /usr/local/bin/ In the /usr/local/bin/ directory create a new file with sudo touch remote_git_sync_branch.sh Open the remote_git_sync_branch.sh file with sudo vi remote_git_sync_branch.sh Add the following lines in remote_git_sync_branch.sh #!/usr/bin/env bash docker exec -i openmrseregister sh /scripts/git_sync_branch.sh Configure a cronjob to run the script everyday at 10:00am or anytime suiting, based on the facility's needs crontab -e if it's the first that command is bieng run, it'll probably prompt you to choose your preferred editor. I recommend nano because of its shallow learning curve. Then add this line: 0 10 * * * /usr/local/bin/remote_git_sync_branch.sh Then lastly add a service to handle running this script Change directory to /etc/systemd/system/ Create the file with sudo touch git_sync_branch.service Open the file with sudo vi git_sync_branch.service Add the following inside the git_sync_branch.service file [Unit] After=docker.service [Service] ExecStart=/usr/local/bin/remote_git_sync_branch.sh Restart=always [Install] WantedBy=default.target","title":"Reppull"},{"location":"ereg/upgrading-to-092/","text":"Upgrading to Bahmni 0.92 Preparing Bahmni 0.90 Backup First we have to take a proper backup of the system so that should the upgrade process be problematic, we have can resume facility activities with ease. We can start by taking a backup of the database with docker exec -it openmrseregister mysqldump -uroot -p openmrs > openmrs.sql . This command will create the backup inside the container but put the sql file outside the container. Then we can commit the running container to take a snapshot of it as is with docker commit openmrseregister omrsregrepo/bahmni_092:18052021 you can use whatever date when doing this for your tag Before moving forward with the steps below, please make sure you have both the sql file and the docker image with ls -lh . The file openmrs.sql should be more than 100M, if in doubt, you can do cat openmrs.sql to see the file has content. Also do docker images and make sure you can see the image you just created. To prevent conflicting ports, we have to finally stop and kill the container with docker stop openmrseregister and remove it completely with docker rm openmrseregister Warning Please don't skip this step. It's very important to do the backup before upgrading!!! Installing Docker The hosting should already have docker installed, but if for some reason it's not installed, please refer to this guide Please go as far as installing docker only and then come back to this guide. Installing Docker Compose To upgrade to version 0.92, we're going to use Docker Compose we're using more than one container. To install Docker Compose, copy and run the following: sudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose Then make the binary file you just downloaded executable with the command below (copy and paste) sudo chmod +x /usr/local/bin/docker-compose Check that everything is running well by running docker-compose version and you'll see something like this: docker-compose version 1.28.2, build 67630359 docker-py version: 4.4.1 CPython version: 3.7.9 OpenSSL version: OpenSSL 1.1.0l 10 Sep 2019 If you don't see anything, you might want to do su $USER to reload enviroment variables then do docker-compose version again. Installing Git Do git version to check if Git is already installed. If it's not, run sudo apt install git Setting up containers Fig 1 - eRegister Bahmni 0.92 Diagram Preparing containers Go to home directory with cd ~ Download the repo with docker-compose file: git clone https://github.com/eRegister/bahmni_docker.git Change directory into docker_docker folder with cd docker_docker Start the containers with docker-compose up -d make sure you have internet connectivity because docker-compose is going to try do download the images to your serve After running the command abover, While still in $HOME/docker_docker , run docker-compose ps to check if the containers without any errors. You should see something like: Name Command State Ports -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- bahmni_docker_emr-service_1 /usr/sbin/init /usr/sbin/i ... Up 0.0.0.0:33062->3306/tcp, 0.0.0.0:443->443/tcp, 0.0.0.0:80->80/tcp, 0.0.0.0:8000->8000/tcp, 0.0.0.0:8050->8050/tcp, 8053/tcp bahmni_docker_erp-service_1 /usr/sbin/init /usr/sbin/i ... Up 0.0.0.0:8069->8069/tcp The above output is also important as it shows names of the two containers created. Now we need to restore out backup into the new instance we just created by: copying openmrs.sql into the bahmni_docker_emr-service_1 with docker cp $HOME/openmrs.sql bahmni_docker_emr-service_1:/ get into the bahmni_docker_emr-service_1 container with docker exec -it bahmni_docker_emr-service_1 bash run ls and you should see openmrs.sql get into the MySQL database with mysql -u root -p then enter password run show databases and you should see a list all databases which include a database called openmrs . delete the openmrs database with drop database openmrs recreate the database again with create database openmrs get into the database with use openmrs . Before running the command below, make sure you're in the (blank) openmrs database by running select database() and you will see a small table that confirms that indeed you're in the openmrs database. restore the backup with source openmrs.sql Then run bahmni -ilocal start to start services and daemons that Bahmni depend on. Go to /var/www/ and run: sudo rm bahmniapps or unlink bahmniapps do sudo ln \u2013s /development/bahmni_apps_release/ bahmniapps do sudo ln \u2013s /development/bahmni_config092/ bahmni_config_ Browse to http://IP_of_eRegister/bahmni/home and check if the changes have been effected. Check that the system is running by browsing to http://SERVER_IP and you should see the new Bhamni 092 system as shown below: Fig 2 - eRegister Bahmni 0.92 After Upgrade Configuring Automated Deployment 0. PREPARATORY STEPS SSH into the server with ssh openmrs@_SERVER_IP_ADDRESS First check to see if your server has internet connectivity with ping github.com Then download all of the files need with git clone https://github.com/eRegister/docs.git The command above will create a folder called docs in /home/openmrs if you didn't change to another directory. All of files that need to be transferred to the server are in docs/scripts/: gitpull_bahmniapps.service gitpull_bahmniapps.sh openmrs_global_properties serialized objects symbolic_creation.sh Visit_types.sql etc. 1. CREATING A VOLUME create development_emr directory sudo mkdir -p /development_emr/bahmni_apps_release change ownership of the new folder from root to openmrs with sudo chown -R openmrs:openmrs /development_emr because the service is managed by openmrs user get into the directory with cd /development_emr/bahmni_apps_release 2. CONFIGURE BAHMNIAPPS SERVICES initialise new local git repo: git init (Do not use git clone) if you do ls -a you'll see a hidden .git to show that indeed the folder has been intialized connect local repository with remote: git remote add origin https://github.com/eRegister/bahmniapps092beta.git download the latest commits to the repo: git fetch --all you should see a log of all the latest commits downloading now go to the home directory: cd ~ OR cd $HOME copy gitpull_bahmniapps.service file: sudo cp gitpull_bahmniapps.service /etc/systemd/system/ move gitpull_bahmniapps.sh file: sudo mv gitpull_bahmniapps.sh /development_emr/bahmni_apps_release change directory cd /development_emr/bahmni_apps_release/ make the script executable sudo chmod +x gitpull_bahmniapps.sh and cat check the contents of the script with cat gitpull.sh to make sure that it does git fetch --all and git pull origin autobuildmaster Nagivate into /etc/systemd/system/ and type the following commands to register gitpull service in system sudo chmod 664 gitpull_bahmniapps.service sudo systemctl daemon-reload sudo systemctl enable gitpull_bahmniapps.service Note when the service has been registered successfully you should see created sym link in /etc/systemd/system/defacat ult.target.wants/. 3. CONFIGURING CRONJOB configure the cronjob to trigger the service Monday 9 am to edit the cronjob do: sudo crontab -e if it's the first time running this command it'll probably ask you to choose the default text editor, please be kind enough to choose Nano as it's the easiest editor for most administrators. configure the script to run within 2 mins just to make sure everything is running OK: */2 * * * * systemctl restart gitpull_bahmniapps.service >> /var/log/gitpull_bahmniapps.log2>& inside the crontab editor write: * 7 * * mon systemctl restart gitpull_bahmniapps.service >> /var/log/gitpull_bahmniapps.log2>&1 Go to /development_emr/bahmni_apps_release/ and check the status of cron service to see when it has executed gitpull_bahmniapps service, once done check the file by typing ll or ls. For some reason you may find that the service has not pulled the files from our remote repository, first thing to do is to check the status of the service if it has successfully started. If not, check the status code of the service to guide you what might gone wrong. The following table shows possible exit codes of the systemd service. Another possible reason it could be that you forgot to change the ownership of the development bahmni config release, check it. Another possible reason could be that the service in unable to fetch from remote repository which is not related to systemd service, check the logs of the service by typing sudo tail -f /var/log/gitpull_bahmniapps.log If gitpull service has pulled the bahmni config file then make a permanent configuration in cronjob to trigger the service every Monday 9am. inside the crontab editor write: * 7 * * mon systemctl restart gitpull.service >> /var/log/gitpull.log2>&1","title":"Upgrading to Bahmni 0.92"},{"location":"ereg/upgrading-to-092/#upgrading-to-bahmni-092","text":"","title":"Upgrading to Bahmni 0.92"},{"location":"ereg/workingwithdockerlocally/","text":"Working with Docker Images Locally Committing a Container locally Alternatively, we can package all of the changes done on a running container locally by like so: * First verify the name of your running container with docker ps and then, * Commit all of the changes in a running container with docker commit d76b19479a2f omrsregrepo/bahmni_base:24102019 we normally use the date of committing a container as a tag * docker save bahmni_base:24102019 | gzip > bahmni_base_24102019.tar.gz * The newly created tarball can be shared via USB stick and loaded with docker load < bahmni_base_24102019.tar.gz * You should now see your newly loaded image when do docker images","title":"Working with Docker Images Locally"},{"location":"ereg/workingwithdockerlocally/#working-with-docker-images-locally","text":"","title":"Working with Docker Images Locally"},{"location":"informedpush/informedpush/","text":"Informed Push ....Information for Informed Push Dataset","title":"Informed Push"},{"location":"informedpush/informedpush/#informed-push","text":"....Information for Informed Push Dataset","title":"Informed Push"},{"location":"informedpush/informedpusharv/","text":"Informed Push ARV ....Information for Informed Push ARV Dataset","title":"Informed Push ARV"},{"location":"informedpush/informedpusharv/#informed-push-arv","text":"....Information for Informed Push ARV Dataset","title":"Informed Push ARV"},{"location":"odoo/Accounting/","text":"Accounting Module This module has SALES and PURCHASES menus for Pharmacy Sales Sales outlines the following sub-menus; * Customer Invoices * Sales Receipts * Customers * Sales Receipts * Sellable Products Purchases Purchases outlines the following sub-menus; * Vendor Bills * Purchase Receipts * Vendors * Purchasable Products","title":"Accounting"},{"location":"odoo/Dispensary/","text":"Dispensing Module Dashboard: Dispensing Menu and Invoicing Menu Dispensing Dispensing sub-menus; Clients all frontend changes done related to Odoo Customers, renamed to Clients Prescriptions all frontend changes done related to Odoo Quotations, renamed to Prescription Dispensing Orders all frontend changes done related to Odoo Sales Orders, renamed to Dispensing Orders Products all frontend changes done related to Odoo Products Dispensing Updates Top Menu item (Sales) changed to Dispensing Left Menu item under \u201cDashboard\u201d (Sales) changed to Dispensing Left Menu item under \u201cDispensing\u201d (Customers) changed to Clients Left Menu item under \u201cDispensing\u201d (Quotations) changed to Prescriptions Left Menu item under \u201cDispensing\u201d (Sales Orders) changed to Dispensing Orders Left Menu item under \u201cConfiguration\u201d (Shop) changed to Dispensary Confirm Sale button changed to confirm dispensing _Inside Prescriptions: New modified fields { Prescription number , Prescription Date , Client, Dispensary , Pharmacy Staff , Provider name , Service Point and Status } Inside Each Prescription: Locations changed to Pharmacy Locations, removal of Tax and other associated Costs Inside Dispensing Orders: New modified fields { Prescription number , Prescription Date , Client , Pharmacy Staff }, sales buttons changed to Dispense and new medical kit icon _Files Changed: Odoo_addons/sale/views/sale_views.xml , Odoo_addons/base/views/res_partner_view.xml , Bahmni_addons/views/sale/views/sales_order_views.xml Invoicing Invoicing sub-menus; * ###### Sales to Invoice * all frontend changes done related to Sales to Invoice Orders to Upsell all frontend changes done related to Orders to Upsell","title":"Dispensary"},{"location":"odoo/Overview/","text":"Modules with notable updates: Sales, Purchases Modules without notable updates: Point Of Sale, Inventory, Accounting Odoo UI changes are stored on the two sub-repositories on eRegister repository namely: bahmni_addons and odoo_addons. Bahmni_addons simlink creation must point to the directory: opt/bahmni-erp/bahmni-addons Odoo_addons simlink creation must point to the directory: opt/bahmni-erp/odoo/addons After creation of Sim links: \u201csystemctl restart odoo.service\u201d command updates the UI accordingly.","title":"Overview"},{"location":"odoo/Requisition/","text":"Top Menu item (Purchases) changed to Requisitions Left Menu item under \u201cDashboard\u201d (Sales) changed to Product Requisitions Left Menu item under \u201cProduct Requisitions\u201d changed to Clients Request for product(s) Left Menu item under \u201cRequest for product(s)\u201d changed to Requisition Orders Files Changed: Odoo_addons/views/purchase_views.xml","title":"Requisition"}]}