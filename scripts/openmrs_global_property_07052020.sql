-- MySQL dump 10.13  Distrib 5.6.40, for Linux (x86_64)
--
-- Host: localhost    Database: openmrs
-- ------------------------------------------------------
-- Server version	5.6.40

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `global_property`
--

DROP TABLE IF EXISTS `global_property`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `global_property` (
  `property` varchar(255) NOT NULL DEFAULT '',
  `property_value` text,
  `description` text,
  `uuid` char(38) NOT NULL,
  `datatype` varchar(255) DEFAULT NULL,
  `datatype_config` text,
  `preferred_handler` varchar(255) DEFAULT NULL,
  `handler_config` text,
  `date_changed` datetime DEFAULT NULL,
  `changed_by` int(11) DEFAULT NULL,
  PRIMARY KEY (`property`),
  UNIQUE KEY `global_property_uuid_index` (`uuid`),
  KEY `global_property_property_index` (`property`),
  KEY `global_property_changed_by` (`changed_by`),
  CONSTRAINT `global_property_changed_by` FOREIGN KEY (`changed_by`) REFERENCES `users` (`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `global_property`
--

LOCK TABLES `global_property` WRITE;
/*!40000 ALTER TABLE `global_property` DISABLE KEYS */;
INSERT INTO `global_property` VALUES ('addresshierarchy.addressToEntryMapUpdaterLastStartTime',NULL,'The module uses this field to store when the AddressToEntryMapUpdater task was last started; DO NOT MODIFY','702f273e-3f10-11e4-adec-0800271c1b75',NULL,NULL,NULL,NULL,NULL,NULL),('addresshierarchy.allowFreetext','true','Valid values: true/false. When overriding the address portlet, allow the entry of free text for address fields associated with the address hierarchy by providing an \"Other\" option','702f461a-3f10-11e4-adec-0800271c1b75',NULL,NULL,NULL,NULL,NULL,NULL),('addresshierarchy.database_version','2.10.0','DO NOT MODIFY.  Current database version number for the addresshierarchy module.','702f6ccb-3f10-11e4-adec-0800271c1b75',NULL,NULL,NULL,NULL,NULL,NULL),('addresshierarchy.enableOverrideOfAddressPortlet','true','Valid values: true/false. When enabled, the existing \"edit\" component of the address portlet is overridden by the new functionality provided by the address hierarchy module','702f8db1-3f10-11e4-adec-0800271c1b75',NULL,NULL,NULL,NULL,NULL,NULL),('addresshierarchy.initializeAddressHierarchyCacheOnStartup','true','Sets whether to initialize the address hierarchy in-memory cache (which is used to speed up address hierarchy searches. Generally, you want to set this to \"true\", though developers may want to set it to false during development to speed module start-up.','702fb052-3f10-11e4-adec-0800271c1b75',NULL,NULL,NULL,NULL,NULL,NULL),('addresshierarchy.mandatory','false','true/false whether or not the addresshierarchy module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','702fd8be-3f10-11e4-adec-0800271c1b75',NULL,NULL,NULL,NULL,NULL,NULL),('addresshierarchy.soundexProcessor',NULL,'If the Name Phonetics module is installed, this defines the name of a soundex algorithm used by the getPossibleFullAddresses service method.','70300408-3f10-11e4-adec-0800271c1b75',NULL,NULL,NULL,NULL,NULL,NULL),('addresshierarchy.started','true','DO NOT MODIFY. true/false whether or not the addresshierarchy module has been started.  This is used to make sure modules that were running  prior to a restart are started again','ac871c38-79e8-4a11-a9be-2e2111127f31',NULL,NULL,NULL,NULL,NULL,NULL),('allergy.allergen.ConceptClasses','Drug,MedSet','A comma-separated list of the allowed concept classes for the allergen field of the allergy dialog','4d1380bb-6c28-4310-993f-88f786863130',NULL,NULL,NULL,NULL,NULL,NULL),('allergy.concept.allergen.drug','162552AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA','UUID for the drug allergens concept','eaec1e70-b81e-4f6d-8a3a-a4989a4904a1',NULL,NULL,NULL,NULL,NULL,NULL),('allergy.concept.allergen.environment','162554AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA','UUID for the environment allergens concept','25098738-6de6-45a2-aeba-5fe520847a91',NULL,NULL,NULL,NULL,NULL,NULL),('allergy.concept.allergen.food','162553AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA','UUID for the food allergens concept','60782b4e-1079-4949-beaa-010fe2b4764a',NULL,NULL,NULL,NULL,NULL,NULL),('allergy.concept.otherNonCoded','5622AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA','UUID for the allergy other non coded concept','23619e2f-1414-4db1-8229-e0743a65ee44',NULL,NULL,NULL,NULL,NULL,NULL),('allergy.concept.reactions','162555AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA','UUID for the allergy reactions concept','929a60c9-e57b-4f77-b0a9-e8e608858776',NULL,NULL,NULL,NULL,NULL,NULL),('allergy.concept.severity.mild','1498AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA','UUID for the MILD severity concept','4e97d0ed-d225-43a7-a626-697bc17dfb43',NULL,NULL,NULL,NULL,NULL,NULL),('allergy.concept.severity.moderate','1499AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA','UUID for the MODERATE severity concept','9b18b5a2-6961-4a14-ab40-3db611761e39',NULL,NULL,NULL,NULL,NULL,NULL),('allergy.concept.severity.severe','1500AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA','UUID for the SEVERE severity concept','fa277c6d-9b52-4517-8521-03f6986da79b',NULL,NULL,NULL,NULL,NULL,NULL),('allergy.concept.unknown','1067AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA','UUID for the allergy unknown concept','33fe0f23-294b-45c1-8c65-b49b7351075e',NULL,NULL,NULL,NULL,NULL,NULL),('allergy.reaction.ConceptClasses','Symptom','A comma-separated list of the allowed concept classes for the reaction field of the allergy dialog','70638dbd-a266-4021-bc33-ce139b6978ec',NULL,NULL,NULL,NULL,NULL,NULL),('allowMultipleLoginLocation','false','Allow Connect app to login via Multiple login locations','f483061c-5fd7-4382-962f-5883a448c289',NULL,NULL,NULL,NULL,NULL,NULL),('appframework.mandatory','false','true/false whether or not the appframework module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','87adb5ce-c13a-42fe-b1c8-e6917d8c1471',NULL,NULL,NULL,NULL,NULL,NULL),('appframework.started','true','DO NOT MODIFY. true/false whether or not the appframework module has been started.  This is used to make sure modules that were running  prior to a restart are started again','38f8f7ca-8586-4213-af9f-c41f032e73d2',NULL,NULL,NULL,NULL,NULL,NULL),('application.name','OpenMRS','The name of this application, as presented to the user, for example on the login and welcome pages.','eafa45ee-c9d3-4c4f-a810-2a373f6e4c35',NULL,NULL,NULL,NULL,NULL,NULL),('appointments.mandatory','false','true/false whether or not the appointments module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','86d62cac-c8aa-4ea4-af3b-291dc42680b9',NULL,NULL,NULL,NULL,NULL,NULL),('appointments.started','true','DO NOT MODIFY. true/false whether or not the appointments module has been started.  This is used to make sure modules that were running  prior to a restart are started again','dc881e73-bcbe-4ea4-8563-4172fdb095c4',NULL,NULL,NULL,NULL,NULL,NULL),('aqs.config.path','Configure AQS config path','Add the AQS Config path here','bfb33957-b7fb-11e4-9c67-080027b662ec',NULL,NULL,NULL,NULL,NULL,NULL),('atomfeed.event.urlPatternForPatientRelationshipChange',NULL,'URL pattern to use for published relationship events. Default is /openmrs/ws/rest/v1/relationship/%s','43476b97-5572-11e6-8be9-0800270d80ce',NULL,NULL,NULL,NULL,NULL,NULL),('atomfeed.event.urlPatternForProgramStateChange',NULL,'URL pattern to use for published program events. Default is /openmrs/ws/rest/v1/programenrollment/{uuid}?v=full','435e0a54-5572-11e6-8be9-0800270d80ce',NULL,NULL,NULL,NULL,NULL,NULL),('atomfeed.publish.eventsForPatientProgramStateChange',NULL,'If set true, events related to program changes are published','435c645f-5572-11e6-8be9-0800270d80ce',NULL,NULL,NULL,NULL,NULL,NULL),('atomfeed.publish.eventsForPatientRelationshipChange',NULL,'If set true, events related to relationship changes are published','4345c218-5572-11e6-8be9-0800270d80ce',NULL,NULL,NULL,NULL,NULL,NULL),('auditlog.mandatory','false','true/false whether or not the auditlog module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','9af059e1-3322-4ebb-ab72-16e1648faba6',NULL,NULL,NULL,NULL,NULL,NULL),('auditlog.started','true','DO NOT MODIFY. true/false whether or not the auditlog module has been started.  This is used to make sure modules that were running  prior to a restart are started again','55c9ca11-2a24-4bae-8f3e-502f023eb4ab',NULL,NULL,NULL,NULL,NULL,NULL),('bacteriology.mandatory','false','true/false whether or not the bacteriology module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','e146b819-023e-46c7-bcdf-bfa5085a6c9c',NULL,NULL,NULL,NULL,NULL,NULL),('bacteriology.started','true','DO NOT MODIFY. true/false whether or not the bacteriology module has been started.  This is used to make sure modules that were running  prior to a restart are started again','83665cce-63c1-44eb-93ef-6c6c6ffe35b8',NULL,NULL,NULL,NULL,NULL,NULL),('bahmni.cacheHeadersFilter.expiresDuration','0','Expires duration in minutes','672dc790-e0b6-11e3-8b68-0800200c9a66',NULL,NULL,NULL,NULL,NULL,NULL),('bahmni.enableAuditLog','true','Enable or disable audit log','6521cd7a-2aff-4521-b65c-8cb784b177ee',NULL,NULL,NULL,NULL,NULL,NULL),('bahmni.encountersession.duration','60','Encountersession duration in minutes','81ef037d-3f10-11e4-adec-0800271c1b75',NULL,NULL,NULL,NULL,NULL,NULL),('bahmni.encounterType.default','Consultation','Default Encounter Type','01ddaa00-1bc9-11e5-87fc-080027b662ec',NULL,NULL,NULL,NULL,NULL,NULL),('bahmni.extraPatientIdentifierTypes','5c1e8ae2-33c6-11e8-8236-0242ac110002,3cdb2f37-33c7-11e8-8236-0242ac110002,0d2ac572-8de3-46c8-9976-1f78899c599f,588f45f8-33ca-11e8-8236-0242ac110002,07f2dc6b-ac44-410d-918d-7d7d685dcabc,d2084c23-edae-4b0f-98a2-cbcdb6708294','A list of UUIDs indicating extra Patient Identifier Types that should be displayed','25133c8e-6923-41fa-9319-81615843454d',NULL,NULL,NULL,NULL,NULL,NULL),('bahmni.forms.directory','/home/bahmni/clinical_forms/','Filesystem path for saving the bahmni forms','fb41ee2e-9eb4-4fce-8157-d98485ad668c',NULL,NULL,NULL,NULL,NULL,NULL),('bahmni.formTranslations.directory','/home/bahmni/clinical_forms/translations','Filesystem path for saving the bahmni forms translations','a8d99000-30d1-4e1d-8068-cdf6b221e9cb',NULL,NULL,NULL,NULL,NULL,NULL),('bahmni.ie.apps.mandatory','false','true/false whether or not the bahmni.ie.apps module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','a3d837fc-936f-4a30-be23-ab24ad07640c',NULL,NULL,NULL,NULL,NULL,NULL),('bahmni.ie.apps.started','true','DO NOT MODIFY. true/false whether or not the bahmni.ie.apps module has been started.  This is used to make sure modules that were running  prior to a restart are started again','f3c61b77-3c89-43d6-847d-06ec343b7543',NULL,NULL,NULL,NULL,NULL,NULL),('bahmni.primaryIdentifierType','81433852-3f10-11e4-adec-0800271c1b75','Primary identifier type for looking up patients, generating barcodes, etc','70683b08-3f10-11e4-adec-0800271c1b75',NULL,NULL,NULL,NULL,NULL,NULL),('bahmni.relationshipTypeMap','{\"provider\":[\"Doctor\"],\"patient\":[\"Parent\",\"Sibling\"]}','Relationships type maps for providers','03f63077-4c7a-11e5-9192-080027b662ec',NULL,NULL,NULL,NULL,NULL,NULL),('bahmni.sqlGet.pastAppointments','SELECT\r\n     app_service.name                                                                                AS `DASHBOARD_APPOINTMENTS_SERVICE_KEY`,\r\n     app_service_type.name                                                                           AS `DASHBOARD_APPOINTMENTS_SERVICE_TYPE_KEY`,\r\n     DATE_FORMAT(start_date_time, \"%d/%m/%Y\")                                                        AS `DASHBOARD_APPOINTMENTS_DATE_KEY`,\r\n     CONCAT(DATE_FORMAT(start_date_time, \"%l:%i %p\"), \" - \", DATE_FORMAT(end_date_time, \"%l:%i %p\")) AS `DASHBOARD_APPOINTMENTS_SLOT_KEY`,\r\n     CONCAT(pn.given_name, \' \', pn.family_name)                                                      AS `DASHBOARD_APPOINTMENTS_PROVIDER_KEY`,\r\n     pa.status                                                                                       AS `DASHBOARD_APPOINTMENTS_STATUS_KEY`\r\nFROM\r\n   patient_appointment pa\r\n   JOIN person p ON p.person_id = pa.patient_id AND pa.voided IS FALSE\r\n   JOIN appointment_service app_service\r\n     ON app_service.appointment_service_id = pa.appointment_service_id AND app_service.voided IS FALSE\r\n   LEFT JOIN provider prov ON prov.provider_id = pa.provider_id AND prov.retired IS FALSE\r\n   LEFT JOIN person_name pn ON pn.person_id = prov.person_id AND pn.voided IS FALSE\r\n   LEFT JOIN appointment_service_type app_service_type\r\n     ON app_service_type.appointment_service_type_id = pa.appointment_service_type_id\r\n WHERE p.uuid = ${patientUuid} AND start_date_time < CURDATE() AND (app_service_type.voided IS FALSE OR app_service_type.voided IS NULL)\r\n ORDER BY start_date_time DESC\r\n LIMIT 5;','Past appointments for patient','7b3ff3a5-250f-11e8-a31f-0242ac110002',NULL,NULL,NULL,NULL,NULL,NULL),('bahmni.sqlGet.upComingAppointments','SELECT\r\n  app_service.name                                                                                AS `DASHBOARD_APPOINTMENTS_SERVICE_KEY`,\r\n  app_service_type.name                                                                           AS `DASHBOARD_APPOINTMENTS_SERVICE_TYPE_KEY`,\r\n  DATE_FORMAT(start_date_time, \"%d/%m/%Y\")                                                        AS `DASHBOARD_APPOINTMENTS_DATE_KEY`,\r\n  CONCAT(DATE_FORMAT(start_date_time, \"%l:%i %p\"), \" - \", DATE_FORMAT(end_date_time, \"%l:%i %p\")) AS `DASHBOARD_APPOINTMENTS_SLOT_KEY`,\r\n  CONCAT(pn.given_name, \' \', pn.family_name)                                                      AS `DASHBOARD_APPOINTMENTS_PROVIDER_KEY`,\r\n  pa.status                                                                                       AS `DASHBOARD_APPOINTMENTS_STATUS_KEY`\r\nFROM\r\n  patient_appointment pa\r\n  JOIN person p ON p.person_id = pa.patient_id AND pa.voided IS FALSE\r\n  JOIN appointment_service app_service\r\n    ON app_service.appointment_service_id = pa.appointment_service_id AND app_service.voided IS FALSE\r\n  LEFT JOIN provider prov ON prov.provider_id = pa.provider_id AND prov.retired IS FALSE\r\n  LEFT JOIN person_name pn ON pn.person_id = prov.person_id AND pn.voided IS FALSE\r\n  LEFT JOIN appointment_service_type app_service_type\r\n    ON app_service_type.appointment_service_type_id = pa.appointment_service_type_id\r\nWHERE p.uuid = ${patientUuid} AND\r\n      start_date_time >= CURDATE() AND\r\n      (app_service_type.voided IS FALSE OR app_service_type.voided IS NULL)\r\nORDER BY start_date_time ASC;','Upcoming appointments for patient','7b439234-250f-11e8-a31f-0242ac110002',NULL,NULL,NULL,NULL,NULL,NULL),('bahmni.visitMatcher','org.bahmni.module.bahmniOfflineSync.OfflineVisitMatcher','visit matcher for offline','37433e34-7ba1-48b0-a99b-3f73978fe3b5',NULL,NULL,NULL,NULL,NULL,NULL),('bahmniconnect.initsync.directory','/home/bahmni/init_sync','Initial sync artifacts directory for connect app','a2b879d1-67da-44d2-b043-8320bb8080af',NULL,NULL,NULL,NULL,NULL,NULL),('bahmnicore.mandatory','false','true/false whether or not the bahmnicore module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','442643d1-2beb-4eee-a055-6b43a71180c4',NULL,NULL,NULL,NULL,NULL,NULL),('bahmnicore.started','true','DO NOT MODIFY. true/false whether or not the bahmnicore module has been started.  This is used to make sure modules that were running  prior to a restart are started again','b2db719e-c0c6-4a65-b8ee-9cdcd5e07031',NULL,NULL,NULL,NULL,NULL,NULL),('bahmniOfflineSync.mandatory','false','true/false whether or not the bahmniOfflineSync module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','e1b11c09-be5f-4704-9d2b-1a0f95a33f04',NULL,NULL,NULL,NULL,NULL,NULL),('bahmniOfflineSync.started','true','DO NOT MODIFY. true/false whether or not the bahmniOfflineSync module has been started.  This is used to make sure modules that were running  prior to a restart are started again','ad801c3c-9cb3-4532-adcd-dffba923418d',NULL,NULL,NULL,NULL,NULL,NULL),('bahmniOfflineSync.strategy',NULL,'custom filter evaluator','792e6cd8-9b1d-11e8-aad8-0242ac110002',NULL,NULL,NULL,NULL,NULL,NULL),('bedmanagement.mandatory','false','true/false whether or not the bedmanagement module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','1678049f-6a44-4ff6-9cc3-b3f8cd58ebad',NULL,NULL,NULL,NULL,NULL,NULL),('bedmanagement.started','true','DO NOT MODIFY. true/false whether or not the bedmanagement module has been started.  This is used to make sure modules that were running  prior to a restart are started again','70ce745b-d7fe-43f6-8452-4f68bbaaada0',NULL,NULL,NULL,NULL,NULL,NULL),('calculation.mandatory','false','true/false whether or not the calculation module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','f88cb781-ddf3-4dc4-bbb2-4b12a389fb1b',NULL,NULL,NULL,NULL,NULL,NULL),('calculation.started','true','DO NOT MODIFY. true/false whether or not the calculation module has been started.  This is used to make sure modules that were running  prior to a restart are started again','820b3bec-7a78-4a37-922c-7598d28dc590',NULL,NULL,NULL,NULL,NULL,NULL),('concept.caseSensitiveNamesInConceptNameTable','true','Indicates whether names in the concept_name table are case sensitive or not. Setting this to false for MySQL with a case insensitive collation improves search performance.','4a8c8fdb-a26d-4a7e-b0ac-d798d16fe077',NULL,NULL,NULL,NULL,NULL,NULL),('concept.causeOfDeath','5002','Concept id of the concept defining the CAUSE OF DEATH concept','81860120-b52f-4de4-b24d-195d6f73c56c',NULL,NULL,NULL,NULL,NULL,NULL),('concept.defaultConceptMapType','NARROWER-THAN','Default concept map type which is used when no other is set','9974b56a-9110-4828-bffa-c5fa58352df7',NULL,NULL,NULL,NULL,NULL,NULL),('concept.false','2','Concept id of the concept defining the FALSE boolean concept','d3f13d8c-a37d-4a3e-a2ca-4374d3231d4e',NULL,NULL,NULL,NULL,NULL,NULL),('concept.height','5090','Concept id of the concept defining the HEIGHT concept','5e517d4e-2150-48bc-bb94-64d44eef0146',NULL,NULL,NULL,NULL,NULL,NULL),('concept.medicalRecordObservations','1238','The concept id of the MEDICAL_RECORD_OBSERVATIONS concept.  This concept_id is presumed to be the generic grouping (obr) concept in hl7 messages.  An obs_group row is not created for this concept.','59922a66-f741-413b-a130-1be2d1a5c9c0',NULL,NULL,NULL,NULL,NULL,NULL),('concept.none','1107','Concept id of the concept defining the NONE concept','3c004f2b-193a-4126-8acb-222f19685693',NULL,NULL,NULL,NULL,NULL,NULL),('concept.otherNonCoded','5622','Concept id of the concept defining the OTHER NON-CODED concept','784d26cb-4476-48eb-8672-a76ebedf839f',NULL,NULL,NULL,NULL,NULL,NULL),('concept.patientDied','3650','Concept id of the concept defining the PATIENT DIED concept','dc19e195-1142-4813-951a-95f8e7503a8b',NULL,NULL,NULL,NULL,NULL,NULL),('concept.problemList','1284','The concept id of the PROBLEM LIST concept.  This concept_id is presumed to be the generic grouping (obr) concept in hl7 messages.  An obs_group row is not created for this concept.','90239244-e178-4bff-b5f1-1df4cdcaef58',NULL,NULL,NULL,NULL,NULL,NULL),('concept.reasonExitedCare',NULL,'Concept id of the concept defining the REASON EXITED CARE concept','8b099986-5217-4a28-93aa-ba7f802f35ce',NULL,NULL,NULL,NULL,NULL,NULL),('concept.reasonForDeath','Reason For Death','Fully Specified name of the Concept Set created as Reasons for death','40f5ee5f-4c79-11e5-9192-080027b662ec',NULL,NULL,NULL,NULL,NULL,NULL),('concept.reasonOrderStopped','1812','Concept id of the concept defining the REASON ORDER STOPPED concept','6b234867-dfa4-4504-96b7-c90dc1370f3f',NULL,NULL,NULL,NULL,NULL,NULL),('concept.true','1','Concept id of the concept defining the TRUE boolean concept','e96c233a-ad0d-4304-aca8-b45f8ed0ccd2',NULL,NULL,NULL,NULL,NULL,NULL),('concept.weight','5089','Concept id of the concept defining the WEIGHT concept','e2ac406f-0c0f-415b-a4fd-a7db5828941d',NULL,NULL,NULL,NULL,NULL,NULL),('conceptDrug.dosageForm.conceptClasses',NULL,'A comma-separated list of the allowed concept classes for the dosage form field of the concept drug management form.','6dbaf339-7e91-4aed-b679-c20441d860e8',NULL,NULL,NULL,NULL,NULL,NULL),('conceptDrug.route.conceptClasses',NULL,'A comma-separated list of the allowed concept classes for the route field of the concept drug management form.','e9049adb-b745-4edc-b2a4-fc885c222e9b',NULL,NULL,NULL,NULL,NULL,NULL),('concepts.locked','false','if true, do not allow editing concepts','5cd3f671-5e8a-4ec5-abf5-5e519eaaa4ff','org.openmrs.customdatatype.datatype.BooleanDatatype',NULL,NULL,NULL,NULL,NULL),('concept_map_type_management.enable','false','Enables or disables management of concept map types','f8ff45a6-c63a-4a2a-8d7a-4039bac218ff','org.openmrs.customdatatype.datatype.BooleanDatatype',NULL,NULL,NULL,NULL,NULL),('conditionList.endReasonConceptSetUuid',NULL,'UUID of end reason concept set','5b9d4776-2cf0-4777-8fc3-006bc25f811e',NULL,NULL,NULL,NULL,NULL,NULL),('conditionList.nonCodedUuid','71ce0aed-36e8-11e7-be35-080027e99513','UUID of non coded concept','a7273d25-4096-4c6a-a7b0-2bb51cb83cf7',NULL,NULL,NULL,NULL,NULL,NULL),('dashboard.encounters.maximumNumberToShow',NULL,'An integer which, if specified, would determine the maximum number of encounters to display on the encounter tab of the patient dashboard.','5c1f7e92-65c9-4949-99ea-52e42337f68e',NULL,NULL,NULL,NULL,NULL,NULL),('dashboard.encounters.providerDisplayRoles',NULL,'A comma-separated list of encounter roles (by name or id). Providers with these roles in an encounter will be displayed on the encounter tab of the patient dashboard.','9849e131-9761-431c-a53a-b6ba53bf98ce',NULL,NULL,NULL,NULL,NULL,NULL),('dashboard.encounters.showEditLink','true','true/false whether or not to show the \'Edit Encounter\' link on the patient dashboard','b5c50eda-3377-409e-a64e-0cbc5c58d78e','org.openmrs.customdatatype.datatype.BooleanDatatype',NULL,NULL,NULL,NULL,NULL),('dashboard.encounters.showEmptyFields','true','true/false whether or not to show empty fields on the \'View Encounter\' window','b37f0fc2-e17d-414d-a2d3-0cb8a5314e38','org.openmrs.customdatatype.datatype.BooleanDatatype',NULL,NULL,NULL,NULL,NULL),('dashboard.encounters.showViewLink','true','true/false whether or not to show the \'View Encounter\' link on the patient dashboard','778478c0-2fad-496e-b03d-29e219db3b48','org.openmrs.customdatatype.datatype.BooleanDatatype',NULL,NULL,NULL,NULL,NULL),('dashboard.encounters.usePages','smart','true/false/smart on how to show the pages on the \'View Encounter\' window.  \'smart\' means that if > 50% of the fields have page numbers defined, show data in pages','d2956122-c821-4055-8c9d-4e32cc552496',NULL,NULL,NULL,NULL,NULL,NULL),('dashboard.header.programs_to_show',NULL,'List of programs to show Enrollment details of in the patient header. (Should be an ordered comma-separated list of program_ids or names.)','6aa0071c-c966-4b6f-818c-dba70c41908f',NULL,NULL,NULL,NULL,NULL,NULL),('dashboard.header.showConcept','5497','Comma delimited list of concepts ids to show on the patient header overview','258e3748-ae7d-428e-9f34-6f6b63ecd5d2',NULL,NULL,NULL,NULL,NULL,NULL),('dashboard.header.workflows_to_show',NULL,'List of programs to show Enrollment details of in the patient header. List of workflows to show current status of in the patient header. These will only be displayed if they belong to a program listed above. (Should be a comma-separated list of program_workflow_ids.)','0bf38415-a8aa-48ff-842a-94233a9cfb3f',NULL,NULL,NULL,NULL,NULL,NULL),('dashboard.metadata.caseConversion',NULL,'Indicates which type automatic case conversion is applied to program/workflow/state in the patient dashboard. Valid values: lowercase, uppercase, capitalize. If empty no conversion is applied.','a0092961-f243-4e48-a4b7-a2f559cb0909',NULL,NULL,NULL,NULL,NULL,NULL),('dashboard.overview.showConcepts',NULL,'Comma delimited list of concepts ids to show on the patient dashboard overview tab','742bf7ba-d4a6-47c8-b016-b9b02c419aa0',NULL,NULL,NULL,NULL,NULL,NULL),('dashboard.regimen.displayDrugSetIds','ANTIRETROVIRAL DRUGS,TUBERCULOSIS TREATMENT DRUGS','Drug sets that appear on the Patient Dashboard Regimen tab. Comma separated list of name of concepts that are defined as drug sets.','4de5e8e4-55c4-4ec7-85ce-f42887bb269e',NULL,NULL,NULL,NULL,NULL,NULL),('dashboard.regimen.displayFrequencies','7 days/week,6 days/week,5 days/week,4 days/week,3 days/week,2 days/week,1 days/week','Frequency of a drug order that appear on the Patient Dashboard. Comma separated list of name of concepts that are defined as drug frequencies.','57468c9f-4030-4b9c-8f5c-91f3d27be225',NULL,NULL,NULL,NULL,NULL,NULL),('dashboard.regimen.standardRegimens','<list>  <regimenSuggestion>    <drugComponents>      <drugSuggestion>        <drugId>2</drugId>        <dose>1</dose>        <units>tab(s)</units>        <frequency>2/day x 7 days/week</frequency>        <instructions></instructions>      </drugSuggestion>    </drugComponents>    <displayName>3TC + d4T(30) + NVP (Triomune-30)</displayName>    <codeName>standardTri30</codeName>    <canReplace>ANTIRETROVIRAL DRUGS</canReplace>  </regimenSuggestion>  <regimenSuggestion>    <drugComponents>      <drugSuggestion>        <drugId>3</drugId>        <dose>1</dose>        <units>tab(s)</units>        <frequency>2/day x 7 days/week</frequency>        <instructions></instructions>      </drugSuggestion>    </drugComponents>    <displayName>3TC + d4T(40) + NVP (Triomune-40)</displayName>    <codeName>standardTri40</codeName>    <canReplace>ANTIRETROVIRAL DRUGS</canReplace>  </regimenSuggestion>  <regimenSuggestion>    <drugComponents>      <drugSuggestion>        <drugId>39</drugId>        <dose>1</dose>        <units>tab(s)</units>        <frequency>2/day x 7 days/week</frequency>        <instructions></instructions>      </drugSuggestion>      <drugSuggestion>        <drugId>22</drugId>        <dose>200</dose>        <units>mg</units>        <frequency>2/day x 7 days/week</frequency>        <instructions></instructions>      </drugSuggestion>    </drugComponents>    <displayName>AZT + 3TC + NVP</displayName>    <codeName>standardAztNvp</codeName>    <canReplace>ANTIRETROVIRAL DRUGS</canReplace>  </regimenSuggestion>  <regimenSuggestion>    <drugComponents>      <drugSuggestion reference=\"../../../regimenSuggestion[3]/drugComponents/drugSuggestion\"/>      <drugSuggestion>        <drugId>11</drugId>        <dose>600</dose>        <units>mg</units>        <frequency>1/day x 7 days/week</frequency>        <instructions></instructions>      </drugSuggestion>    </drugComponents>    <displayName>AZT + 3TC + EFV(600)</displayName>    <codeName>standardAztEfv</codeName>    <canReplace>ANTIRETROVIRAL DRUGS</canReplace>  </regimenSuggestion>  <regimenSuggestion>    <drugComponents>      <drugSuggestion>        <drugId>5</drugId>        <dose>30</dose>        <units>mg</units>        <frequency>2/day x 7 days/week</frequency>        <instructions></instructions>      </drugSuggestion>      <drugSuggestion>        <drugId>42</drugId>        <dose>150</dose>        		<units>mg</units>        <frequency>2/day x 7 days/week</frequency>        <instructions></instructions>      </drugSuggestion>      <drugSuggestion reference=\"../../../regimenSuggestion[4]/drugComponents/drugSuggestion[2]\"/>    </drugComponents>    <displayName>d4T(30) + 3TC + EFV(600)</displayName>    <codeName>standardD4t30Efv</codeName>    <canReplace>ANTIRETROVIRAL DRUGS</canReplace>  </regimenSuggestion>  <regimenSuggestion>    <drugComponents>      <drugSuggestion>        <drugId>6</drugId>        <dose>40</dose>        <units>mg</units>        <frequency>2/day x 7 days/week</frequency>        <instructions></instructions>      </drugSuggestion>      <drugSuggestion reference=\"../../../regimenSuggestion[5]/drugComponents/drugSuggestion[2]\"/>      <drugSuggestion reference=\"../../../regimenSuggestion[4]/drugComponents/drugSuggestion[2]\"/>    </drugComponents>    <displayName>d4T(40) + 3TC + EFV(600)</displayName>    <codeName>standardD4t40Efv</codeName>    <canReplace>ANTIRETROVIRAL DRUGS</canReplace>  </regimenSuggestion></list>','XML description of standard drug regimens, to be shown as shortcuts on the dashboard regimen entry tab','2ffd37ca-9e6b-4098-a0f2-7bc094c79ba0',NULL,NULL,NULL,NULL,NULL,NULL),('dashboard.relationships.show_types',NULL,'Types of relationships separated by commas.  Doctor/Patient,Parent/Child','7491e8c0-3234-444d-b383-39c12796d56d',NULL,NULL,NULL,NULL,NULL,NULL),('dashboard.showPatientName','false','Whether or not to display the patient name in the patient dashboard title. Note that enabling this could be security risk if multiple users operate on the same computer.','dc57a4df-28aa-4dfc-b50d-1a8042bec54c','org.openmrs.customdatatype.datatype.BooleanDatatype',NULL,NULL,NULL,NULL,NULL),('datePicker.weekStart','0','First day of the week in the date picker. Domingo/Dimanche/Sunday:0  Lunes/Lundi/Monday:1','820dab62-abee-4382-b960-4e602f8859a2',NULL,NULL,NULL,NULL,NULL,NULL),('default_locale','en','Specifies the default locale. You can specify both the language code(ISO-639) and the country code(ISO-3166), e.g. \'en_GB\' or just country: e.g. \'en\'','de5284c2-1edf-47b7-b421-c70205af8d7f',NULL,NULL,NULL,NULL,NULL,NULL),('default_location','Unknown Location','The name of the location to use as a system default','509e8f89-6b2b-40c3-9a88-6a44292d7399',NULL,NULL,NULL,NULL,NULL,NULL),('default_theme',NULL,'Default theme for users.  OpenMRS ships with themes of \'green\', \'orange\', \'purple\', and \'legacy\'','a36be38e-5bac-4a6b-811d-2a3e3236af07',NULL,NULL,NULL,NULL,NULL,NULL),('dhis.mandatory','false','true/false whether or not the dhis module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','741589f5-3c75-4a02-96f1-3ad6257e8df4',NULL,NULL,NULL,NULL,NULL,NULL),('dhis.started','true','DO NOT MODIFY. true/false whether or not the dhis module has been started.  This is used to make sure modules that were running  prior to a restart are started again','26b2da88-3895-4cf5-b2d4-e0e81a1779d6',NULL,NULL,NULL,NULL,NULL,NULL),('dhisconnector.config.dataAndLogsStoragePeriod','6','DHIS Connector: Number of months backwards from current date for which to store both stored logs and data','ebec4d36-15bb-4eb7-ae35-81e4b43e89df',NULL,NULL,NULL,NULL,NULL,NULL),('dhisconnector.config.dxfToAdxSwitch','false','DHIS Connector: true/false whether or not to use the DXF to ADX conversion before sending data to DHIS2','1603ce84-cfe6-4e05-8608-5994ff00f7b2',NULL,NULL,NULL,NULL,NULL,NULL),('dhisconnector.config.enableAutoRun','true','Set to true to enable this module to run configured openmrs reports and post data into DHIS2 automatically','d341cbda-9ef7-4c58-a9f4-3aa10e2285e5',NULL,NULL,NULL,NULL,NULL,NULL),('dhisconnector.mandatory','false','true/false whether or not the dhisconnector module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','9c9412dd-07ae-47db-9d9e-dc047f652a2d',NULL,NULL,NULL,NULL,NULL,NULL),('dhisconnector.pass','Stle8719#','DHIS Password.','c09af5ff-ae74-4c2b-85ca-d901b6798461',NULL,NULL,NULL,NULL,NULL,NULL),('dhisconnector.started','true','DO NOT MODIFY. true/false whether or not the dhisconnector module has been started.  This is used to make sure modules that were running  prior to a restart are started again','72927e55-957d-4ab2-a1ca-fb3c8d61dd83',NULL,NULL,NULL,NULL,NULL,NULL),('dhisconnector.url','http://41.203.191.110/training','DHIS Server URL.','159d9a36-a83c-4c07-b411-df78d89f4364',NULL,NULL,NULL,NULL,NULL,NULL),('dhisconnector.user','leqelat','DHIS Username.','efb9a22a-25a9-4564-b747-cdfcbe96ce34',NULL,NULL,NULL,NULL,NULL,NULL),('dhisreport.database_version','1.2','DO NOT MODIFY.  Current database version number for the dhisreport module.','e3f262a7-9f6b-4c0b-b548-7ba47c7f5a85',NULL,NULL,NULL,NULL,NULL,NULL),('dhisreport.dhis2Password',NULL,'The Password of the DHIS Server','a4aadd92-8be5-41f6-8ab3-6317a43d65d2',NULL,NULL,NULL,NULL,NULL,NULL),('dhisreport.dhis2SyncDate',NULL,'The last sync date of reports.','d0b8b6a4-36c2-48d4-bbc8-e5146c8d4670',NULL,NULL,NULL,NULL,NULL,NULL),('dhisreport.dhis2URL','http://httpbin.org/post','DHIS2 URL where the report has to be sent.','b0cc2773-f398-46b3-b4e4-c5ee35cb02ce',NULL,NULL,NULL,NULL,NULL,NULL),('dhisreport.dhis2UserName','dhis2 username','The Username of the DHIS Server','7dbe95b6-86cc-4b99-92d0-294a271d5429',NULL,NULL,NULL,NULL,NULL,NULL),('dhisreport.mandatory','false','true/false whether or not the dhisreport module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','aa520f4e-4f9d-415d-97d2-3d0892c46908',NULL,NULL,NULL,NULL,NULL,NULL),('dhisreport.SchedulerURL',NULL,'URL of the page where we post reports (e.g. http://localhost:8081/openmrs18/module/dhisreport/executeReport.form )','7da153ba-5bb6-4773-aa1b-9c0d2021ee9c',NULL,NULL,NULL,NULL,NULL,NULL),('dhisreport.started','true','DO NOT MODIFY. true/false whether or not the dhisreport module has been started.  This is used to make sure modules that were running  prior to a restart are started again','97bd26aa-ee6b-49f7-9bc7-8b22eaf2d7b1',NULL,NULL,NULL,NULL,NULL,NULL),('disableDefaultAppointmentValidations','false','Disable default appointment validations','3c43a10a-d118-4861-8298-44362a8b1481',NULL,NULL,NULL,NULL,NULL,NULL),('drugOrder.drugOther','063ee60c-99a5-11e5-bbf3-080027b662ec','Specifies the uuid of the concept which represents drug other non coded','f1f00447-f3fb-41c2-99ba-96ed9086b7bb',NULL,NULL,NULL,NULL,NULL,NULL),('drugOrder.requireDrug','false','Set to value true if you need to specify a formulation(Drug) when creating a drug order.','553e98eb-9e62-4393-a7ed-7459cdd17a9d',NULL,NULL,NULL,NULL,NULL,NULL),('elisatomfeedclient.mandatory','false','true/false whether or not the elisatomfeedclient module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','46a6c514-f31a-4714-b316-d48161c83fbe',NULL,NULL,NULL,NULL,NULL,NULL),('elisatomfeedclient.started','true','DO NOT MODIFY. true/false whether or not the elisatomfeedclient module has been started.  This is used to make sure modules that were running  prior to a restart are started again','6a886279-77d2-4f90-83c7-3fbafd92ff37',NULL,NULL,NULL,NULL,NULL,NULL),('emr.admissionEncounterType','This global property had been migrated to metadata mapping in source \'org.openmrs.module.emrapi\' with code \'&s\'','UUID of the encounter type for admitting a patient','e209c792-8093-4894-86a6-de3b3eb82075',NULL,NULL,NULL,NULL,NULL,NULL),('emr.admissionForm',NULL,'UUID of the Admission Form (not required)','ef9b40fc-7e26-4011-954b-adfc4674d053',NULL,NULL,NULL,NULL,NULL,NULL),('emr.atFacilityVisitType',NULL,'UUID of the VisitType that we use for newly-created visits','7e35b5d9-f058-4f57-bdf1-f11fa08d95cd',NULL,NULL,NULL,NULL,NULL,NULL),('emr.concept.diagnosisSetOfSets','dbc2ecdb-4e14-11e4-8a57-0800271c1b75',NULL,'e0f02e9c-72a6-4f13-b619-c678af2d3609',NULL,NULL,NULL,NULL,NULL,NULL),('emr.encounterMatcher','org.bahmni.module.bahmnicore.matcher.EncounterSessionMatcher','custom encounter session matcher','81f078c9-3f10-11e4-adec-0800271c1b75',NULL,NULL,NULL,NULL,NULL,NULL),('emr.exitFromInpatientEncounterType','This global property had been migrated to metadata mapping in source \'org.openmrs.module.emrapi\' with code \'&s\'','UUID of the encounter type for exiting a patient from inpatient care','a6ae78f4-8624-4c08-ad7e-8fb847ac8fc8',NULL,NULL,NULL,NULL,NULL,NULL),('emr.exitFromInpatientForm',NULL,'UUID of the Discharge Form (not required)','53fd133c-ca9b-442e-b4de-719447cc6de8',NULL,NULL,NULL,NULL,NULL,NULL),('emr.personImagesDirectory','/home/bahmni/patient_images','Location of patient images - required by emrapi','c467177b-3f10-11e4-adec-0800271c1b75',NULL,NULL,NULL,NULL,NULL,NULL),('emr.transferWithinHospitalEncounterType',NULL,'UUID of the encounter type for transferring a patient within the hospital','b17a5357-a036-4871-9a64-74aab9ec11a5',NULL,NULL,NULL,NULL,NULL,NULL),('emr.transferWithinHospitalForm',NULL,'UUID of the Transfer Form (not required)','23489e82-8ebc-4f15-ac35-184b5e6bd3c9',NULL,NULL,NULL,NULL,NULL,NULL),('emr.unknownLocation',NULL,'UUID of the Location that represents an Unknown Location','490be82d-9831-48b5-8b1e-921a9d03b0ea',NULL,NULL,NULL,NULL,NULL,NULL),('emr.unknownProvider','f9badd80-ab76-11e2-9e96-0800200c9a66','UUID of the Provider that represents an Unknown Provider','4df46b77-962e-4ff1-98f7-27b84dadf843',NULL,NULL,NULL,NULL,NULL,NULL),('emr.visitNoteEncounterType',NULL,'UUID of the encounter type for a visit note','99c27416-f5e7-4c80-847a-87c83a5589fb',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.EmrApiVisitAssignmentHandler.encounterTypeToNewVisitTypeMap',NULL,'Specifies the mapping of encounter types to new visit types for more see https://wiki.openmrs.org/x/vgF4Aw','85d6dfeb-cd3f-4587-a194-ff95d72962c5',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.lastViewedPatientSizeLimit','50','Specifies the system wide number of patients to store as last viewed for a single user,\r\n            defaults to 50 if not specified','4262a261-ab49-4dec-bc1c-7c10687fbb76',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.mandatory','false','true/false whether or not the emrapi module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','c4c31180-3583-4ca0-849b-4340bd2bd6a4',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.nonDiagnosisConceptSets',NULL,'UUIDs or mapping of non diagnosis concept sets','6f488ef4-f8ae-4e54-b702-ecb260d8d0d7',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.sqlGet.wardsListDetails','SELECT\r\n  b.bed_number AS \'Bed\',\r\n  concat(pn.given_name, \' \', ifnull(pn.family_name,\'\')) AS \'Name\',\r\n  pv.uuid AS \'Patient Uuid\',\r\n  pi.identifier AS \'Id\',\r\n  pv.gender AS \'Gender\',\r\n  TIMESTAMPDIFF(YEAR, pv.birthdate, CURDATE()) AS \'Age\',\r\n  pa.county_district AS \'District\',\r\n  pa.city_village AS \'Village\',\r\n  admission_provider_name.given_name AS \'Admission By\',\r\n  cast(DATE_FORMAT(latestAdmissionEncounter.max_encounter_datetime, \'%d %b %y %h:%i %p\') AS CHAR) AS \'Admission Time\',\r\n  diagnosis.diagnosisConcept AS \'Diagnosis\',\r\n  diagnosis.certainty AS \'Diagnosis Certainty\',\r\n  diagnosis.diagnosisOrder AS \'Diagnosis Order\',\r\n  diagnosis.status AS \'Diagnosis Status\',\r\n  diagnosis.diagnosis_provider AS \'Diagnosis Provider\',\r\n  cast(DATE_FORMAT(diagnosis.diagnosis_datetime, \'%d %b %y %h:%i %p\') AS\r\n       CHAR) AS \'Diagnosis Datetime\',\r\n  dispositionInfo.providerName AS \'Disposition By\',\r\n  cast(DATE_FORMAT(dispositionInfo.providerDate, \'%d %b %y %h:%i %p\') AS CHAR) AS \'Disposition Time\',\r\n  adtNotes.value_text AS \'ADT Notes\',\r\n  v.uuid AS \'Visit Uuid\'\r\nFROM bed_location_map blm\r\n  INNER JOIN bed b\r\n    ON blm.bed_id = b.bed_id AND\r\n       b.status = \'OCCUPIED\' AND\r\n       blm.location_id IN (SELECT child_location.location_id\r\n                           FROM location child_location JOIN\r\n                             location parent_location\r\n                               ON parent_location.location_id =\r\n                                  child_location.parent_location\r\n                           WHERE\r\n                             parent_location.name = ${location_name})\r\n  INNER JOIN bed_patient_assignment_map bpam ON b.bed_id = bpam.bed_id AND date_stopped IS NULL\r\n  INNER JOIN person pv ON pv.person_id = bpam.patient_id\r\n  INNER JOIN person_name pn ON pn.person_id = pv.person_id\r\n  INNER JOIN patient_identifier pi ON pv.person_id = pi.patient_id\r\n  INNER JOIN patient_identifier_type pit on pi.identifier_type = pit.patient_identifier_type_id\r\n  INNER JOIN global_property gp on gp.property=\'bahmni.primaryIdentifierType\' and gp.property_value=pit.uuid\r\n  LEFT JOIN person_address pa ON pa.person_id = pv.person_id\r\n  INNER JOIN (SELECT\r\n                patient_id,\r\n                max(encounter_datetime) AS max_encounter_datetime,\r\n                max(visit_id) as visit_id,\r\n                max(encounter_id) AS encounter_id\r\n              FROM encounter\r\n                INNER JOIN encounter_type ON encounter_type.encounter_type_id = encounter.encounter_type\r\n              WHERE encounter_type.name = \'ADMISSION\'\r\n              GROUP BY patient_id) latestAdmissionEncounter ON pv.person_id = latestAdmissionEncounter.patient_id\r\n  INNER JOIN visit v ON latestAdmissionEncounter.visit_id = v.visit_id\r\n  LEFT OUTER JOIN obs adtNotes\r\n    ON adtNotes.encounter_id = latestAdmissionEncounter.encounter_id AND adtNotes.voided = 0 AND\r\n       adtNotes.concept_id = (SELECT concept_id\r\n                              FROM concept_name\r\n                              WHERE name = \'Adt Notes\' AND concept_name_type = \'FULLY_SPECIFIED\')\r\n  LEFT OUTER JOIN encounter_provider ep ON ep.encounter_id = latestAdmissionEncounter.encounter_id\r\n  LEFT OUTER JOIN provider admission_provider ON admission_provider.provider_id = ep.provider_id\r\n  LEFT OUTER JOIN person_name admission_provider_name\r\n    ON admission_provider_name.person_id = admission_provider.person_id\r\n  LEFT OUTER JOIN (\r\n                    SELECT\r\n                      bpam.patient_id AS person_id,\r\n                      concept_name.name AS disposition,\r\n                      latestDisposition.obs_datetime AS providerDate,\r\n                      person_name.given_name AS providerName\r\n                    FROM bed_patient_assignment_map bpam\r\n                      INNER JOIN (SELECT\r\n                                    person_id,\r\n                                    max(obs_id) obs_id\r\n                                  FROM obs\r\n                                  WHERE concept_id = (SELECT concept_id\r\n                                                      FROM concept_name\r\n                                                      WHERE\r\n                                                        name = \'Disposition\' AND concept_name_type = \'FULLY_SPECIFIED\')\r\n                                  GROUP BY person_id) maxObsId ON maxObsId.person_id = bpam.patient_id\r\n                      INNER JOIN obs latestDisposition\r\n                        ON maxObsId.obs_id = latestDisposition.obs_id AND latestDisposition.voided = 0\r\n                      INNER JOIN concept_name ON latestDisposition.value_coded = concept_name.concept_id AND\r\n                                                 concept_name_type = \'FULLY_SPECIFIED\'\r\n                      LEFT OUTER JOIN encounter_provider ep ON latestDisposition.encounter_id = ep.encounter_id\r\n                      LEFT OUTER JOIN provider disp_provider ON disp_provider.provider_id = ep.provider_id\r\n                      LEFT OUTER JOIN person_name ON person_name.person_id = disp_provider.person_id\r\n                    WHERE bpam.date_stopped IS NULL\r\n                  ) dispositionInfo ON pv.person_id = dispositionInfo.person_id\r\n  LEFT OUTER JOIN (\r\n                    SELECT\r\n                      diagnosis.person_id AS person_id,\r\n                      diagnosis.obs_id AS obs_id,\r\n                      diagnosis.obs_datetime AS diagnosis_datetime,\r\n                      if(diagnosisConceptName.name IS NOT NULL, diagnosisConceptName.name,\r\n                         diagnosis.value_text) AS diagnosisConcept,\r\n                      certaintyConceptName.name AS certainty,\r\n                      diagnosisOrderConceptName.name AS diagnosisOrder,\r\n                      diagnosisStatusConceptName.name AS status,\r\n                      person_name.given_name AS diagnosis_provider\r\n                    FROM bed_patient_assignment_map bpam\r\n                      INNER JOIN visit latestVisit\r\n                        ON latestVisit.patient_id = bpam.patient_id AND latestVisit.date_stopped IS NULL AND\r\n                           bpam.date_stopped IS NULL\r\n                      INNER JOIN encounter ON encounter.visit_id = latestVisit.visit_id\r\n                      INNER JOIN obs diagnosis ON bpam.patient_id = diagnosis.person_id AND diagnosis.voided = 0 AND\r\n                                                  diagnosis.encounter_id = encounter.encounter_id AND\r\n                                                  diagnosis.concept_id IN (SELECT concept_id\r\n                                                                           FROM concept_name\r\n                                                                           WHERE name IN\r\n                                                                                 (\'Coded Diagnosis\', \'Non-Coded Diagnosis\')\r\n                                                                                 AND\r\n                                                                                 concept_name_type = \'FULLY_SPECIFIED\')\r\n                      LEFT OUTER JOIN concept_name diagnosisConceptName\r\n                        ON diagnosis.value_coded IS NOT NULL AND diagnosis.value_coded = diagnosisConceptName.concept_id\r\n                           AND diagnosisConceptName.concept_name_type = \'FULLY_SPECIFIED\'\r\n                      LEFT OUTER JOIN encounter_provider ep ON diagnosis.encounter_id = ep.encounter_id\r\n                      LEFT OUTER JOIN provider diagnosis_provider ON diagnosis_provider.provider_id = ep.provider_id\r\n                      LEFT OUTER JOIN person_name ON person_name.person_id = diagnosis_provider.person_id\r\n                      INNER JOIN obs certainty\r\n                        ON diagnosis.obs_group_id = certainty.obs_group_id AND certainty.voided = 0 AND\r\n                           certainty.concept_id = (SELECT concept_id\r\n                                                   FROM concept_name\r\n                                                   WHERE name = \'Diagnosis Certainty\' AND\r\n                                                         concept_name_type = \'FULLY_SPECIFIED\')\r\n                      LEFT OUTER JOIN concept_name certaintyConceptName\r\n                        ON certainty.value_coded IS NOT NULL AND certainty.value_coded = certaintyConceptName.concept_id\r\n                           AND certaintyConceptName.concept_name_type = \'FULLY_SPECIFIED\'\r\n                      INNER JOIN obs diagnosisOrder\r\n                        ON diagnosis.obs_group_id = diagnosisOrder.obs_group_id AND diagnosisOrder.voided = 0 AND\r\n                           diagnosisOrder.concept_id = (SELECT concept_id\r\n                                                        FROM concept_name\r\n                                                        WHERE name = \'Diagnosis order\' AND\r\n                                                              concept_name_type = \'FULLY_SPECIFIED\')\r\n                      LEFT OUTER JOIN concept_name diagnosisOrderConceptName ON diagnosisOrder.value_coded IS NOT NULL\r\n                                                                                AND diagnosisOrder.value_coded =\r\n                                                                                    diagnosisOrderConceptName.concept_id\r\n                                                                                AND\r\n                                                                                diagnosisOrderConceptName.concept_name_type\r\n                                                                                = \'FULLY_SPECIFIED\'\r\n                      LEFT JOIN obs diagnosisStatus\r\n                        ON diagnosis.obs_group_id = diagnosisStatus.obs_group_id AND diagnosisStatus.voided = 0 AND\r\n                           diagnosisStatus.concept_id = (SELECT concept_id\r\n                                                         FROM concept_name\r\n                                                         WHERE name = \'Bahmni Diagnosis Status\' AND\r\n                                                               concept_name_type = \'FULLY_SPECIFIED\')\r\n                      LEFT OUTER JOIN concept_name diagnosisStatusConceptName ON diagnosisStatus.value_coded IS NOT NULL\r\n                                                                                 AND diagnosisStatus.value_coded =\r\n                                                                                     diagnosisStatusConceptName.concept_id\r\n                                                                                 AND\r\n                                                                                 diagnosisStatusConceptName.concept_name_type\r\n                                                                                 = \'FULLY_SPECIFIED\'\r\n                  ) diagnosis ON diagnosis.person_id = pv.person_id','Sql query to get list of wards','71bd93a9-36e8-11e7-be35-080027e99513',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.sqlSearch.activePatients','select distinct\r\n          concat(pn.given_name,\' \', ifnull(pn.family_name,\'\')) as name,\r\n          pi.identifier as identifier,\r\n          concat(\"\",p.uuid) as uuid,\r\n          concat(\"\",v.uuid) as activeVisitUuid,\r\n          IF(va.value_reference = \"Admitted\", \"true\", \"false\") as hasBeenAdmitted,\r\n          IF(datediff(now(), obs_blooddrawdue.value_datetime) >= 182.62, \"true\", \"false\") as BloodDrawDue\r\nfrom visit v\r\n        join person_name pn on v.patient_id = pn.person_id and pn.voided = 0\r\n        join patient_identifier pi on v.patient_id = pi.patient_id\r\n        join patient_identifier_type pit on pi.identifier_type = pit.patient_identifier_type_id\r\n        join global_property gp on gp.property=\"bahmni.primaryIdentifierType\" and gp.property_value=pit.uuid\r\n        join person p on p.person_id = v.patient_id\r\n		join encounter en on en.visit_id = v.visit_id and en.voided=0		\r\n		left outer JOIN (SELECT\r\n				max(test_obs.obs_group_id) AS max_id,\r\n				test_obs.concept_id,\r\n				test_obs.person_id\r\n			FROM obs test_obs\r\n			INNER JOIN concept c ON c.concept_id = test_obs.concept_id AND test_obs.voided = 0\r\n			INNER JOIN concept_name cn\r\n			  ON c.concept_id = cn.concept_id AND cn.concept_name_type = \"FULLY_SPECIFIED\" AND\r\n				 cn.name IN (\'HIVTC, Viral Load Blood drawn date\')\r\n			GROUP BY test_obs.person_id, test_obs.concept_id) AS tests ON tests.person_id = v.patient_id\r\n		left outer join obs obs_blooddrawdue on obs_blooddrawdue.obs_group_id=tests.max_id and obs_blooddrawdue.concept_id=4267\r\n			and obs_blooddrawdue.voided=0\r\n        join location l on l.uuid = ${visit_location_uuid} and v.location_id = l.location_id\r\n        left outer join visit_attribute va on va.visit_id = v.visit_id and va.attribute_type_id = (\r\n          select visit_attribute_type_id from visit_attribute_type where name=\"Admission Status\"\r\n        ) and va.voided = 0\r\nwhere\r\nv.date_stopped is null and v.voided=0\r\norder by en.encounter_datetime asc','Sql query to get list of active patients','71b9ac84-36e8-11e7-be35-080027e99513',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.sqlSearch.activePatientsByLocation','select distinct concat(pn.given_name,\" \", ifnull(pn.family_name,\'\')) as name,\r\n pi.identifier as identifier,\r\n concat(\"\",p.uuid) as uuid,\r\n concat(\"\",v.uuid) as activeVisitUuid,\r\n IF(va.value_reference = \"Admitted\", \"true\", \"false\") as hasBeenAdmitted\r\n from\r\n   visit v join person_name pn on v.patient_id = pn.person_id and pn.voided = 0 and v.voided=0\r\n   join patient_identifier pi on v.patient_id = pi.patient_id and pi.voided=0\r\n   join patient_identifier_type pit on pi.identifier_type = pit.patient_identifier_type_id\r\n   join global_property gp on gp.property=\"bahmni.primaryIdentifierType\" and gp.property_value=pit.uuid\r\n   join person p on p.person_id = v.patient_id  and p.voided=0\r\n   join encounter en on en.visit_id = v.visit_id and en.voided=0\r\n   left outer join location loc on en.location_id = loc.location_id\r\n   join encounter_provider ep on ep.encounter_id = en.encounter_id  and ep.voided=0\r\n   join provider pr on ep.provider_id=pr.provider_id and pr.retired=0\r\n   join person per on pr.person_id=per.person_id and per.voided=0\r\n   left outer join visit_attribute va on va.visit_id = v.visit_id and va.attribute_type_id = (\r\n                select visit_attribute_type_id from visit_attribute_type where name=\"Admission Status\"\r\n            )\r\n where\r\n   v.date_stopped is null and\r\n   loc.uuid=${location_uuid}\r\n   order by en.encounter_datetime desc','SQL query to get list of active patients by location','71ba007a-36e8-11e7-be35-080027e99513',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.sqlSearch.activePatientsByProvider','select distinct concat(pn.given_name,\" \", ifnull(pn.family_name,\'\')) as name,\r\n  pi.identifier as identifier,\r\n  concat(\"\",p.uuid) as uuid,\r\n  concat(\"\",v.uuid) as activeVisitUuid,\r\n  IF(va.value_reference = \"Admitted\", \"true\", \"false\") as hasBeenAdmitted\r\n  from\r\n    visit v join person_name pn on v.patient_id = pn.person_id and pn.voided = 0 and v.voided=0\r\n    join patient_identifier pi on v.patient_id = pi.patient_id and pi.voided=0\r\n    join patient_identifier_type pit on pi.identifier_type = pit.patient_identifier_type_id\r\n    join global_property gp on gp.property=\"bahmni.primaryIdentifierType\" and gp.property_value=pit.uuid\r\n    join person p on p.person_id = v.patient_id  and p.voided=0\r\n    join encounter en on en.visit_id = v.visit_id and en.voided=0\r\n    join encounter_provider ep on ep.encounter_id = en.encounter_id  and ep.voided=0\r\n    join provider pr on ep.provider_id=pr.provider_id and pr.retired=0\r\n    join person per on pr.person_id=per.person_id and per.voided=0\r\n    join location l on l.uuid=${visit_location_uuid} and l.location_id = v.location_id\r\n    left outer join visit_attribute va on va.visit_id = v.visit_id and va.voided = 0 and va.attribute_type_id = (\r\n				select visit_attribute_type_id from visit_attribute_type where name=\"Admission Status\"\r\n			)\r\n  where\r\n    v.date_stopped is null and\r\n    pr.uuid=${provider_uuid}\r\n    order by en.encounter_datetime desc','Sql query to get list of active patients by provider uuid','71b9c592-36e8-11e7-be35-080027e99513',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.sqlSearch.additionalSearchHandler','cn.name = \'${testName}\'','Sql query to get list of admitted patients','03be7b86-102c-11e5-b1c7-080027b662ec',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.sqlSearch.admittedPatients','select distinct\r\n          concat(pn.given_name,\" \", ifnull(pn.family_name,\'\')) as name,\r\n          pi.identifier as identifier,\r\n          concat(\"\",p.uuid) as uuid,\r\n          concat(\"\",v.uuid) as activeVisitUuid,\r\n          IF(va.value_reference = \"Admitted\", \"true\", \"false\") as hasBeenAdmitted\r\n        from visit v\r\n        join person_name pn on v.patient_id = pn.person_id and pn.voided = 0\r\n        join patient_identifier pi on v.patient_id = pi.patient_id\r\n        join patient_identifier_type pit on pi.identifier_type = pit.patient_identifier_type_id\r\n        join global_property gp on gp.property=\"bahmni.primaryIdentifierType\" and gp.property_value=pit.uuid\r\n        join person p on v.patient_id = p.person_id\r\n        join visit_attribute va on v.visit_id = va.visit_id and va.value_reference = \"Admitted\" and va.voided = 0\r\n        join visit_attribute_type vat on vat.visit_attribute_type_id = va.attribute_type_id and vat.name = \"Admission Status\"\r\n        join location l on l.uuid=${visit_location_uuid} and v.location_id = l.location_id\r\n        where v.date_stopped is null AND v.voided = 0','Sql query to get list of admitted patients','71b9e1ce-36e8-11e7-be35-080027e99513',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.sqlSearch.anc','select distinct\r\n          concat(pn.given_name,\' \', ifnull(pn.family_name,\'\')) as name,\r\n          pi.identifier as identifier,\r\n          concat(\"\",p.uuid) as uuid,\r\n          concat(\"\",v.uuid) as activeVisitUuid,\r\n          IF(va.value_reference = \"Admitted\", \"true\", \"false\") as hasBeenAdmitted\r\n        from visit v\r\n        join person_name pn on v.patient_id = pn.person_id and pn.voided = 0\r\n        join patient_identifier pi on v.patient_id = pi.patient_id\r\n        join patient_identifier_type pit on pi.identifier_type = pit.patient_identifier_type_id\r\n        join global_property gp on gp.property=\"bahmni.primaryIdentifierType\" and gp.property_value=pit.uuid\r\n        join person p on p.person_id = v.patient_id\r\n		join encounter en on en.visit_id = v.visit_id and en.voided=0\r\n        join location l on l.uuid = ${visit_location_uuid} and v.location_id = l.location_id\r\n        left outer join visit_attribute va on va.visit_id = v.visit_id and va.attribute_type_id = (\r\n          select visit_attribute_type_id from visit_attribute_type where name=\"Admission Status\"\r\n        ) and va.voided = 0\r\nwhere\r\nv.date_stopped is null and\r\nv.visit_type_id=16\r\norder by en.encounter_datetime asc',NULL,'fd4bfe62-4be4-454e-bdf8-1e9660637afa',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.sqlSearch.arvregimendrugpickup','select distinct\r\n          concat(pn.given_name,\' \', ifnull(pn.family_name,\'\')) as name,\r\n          pi.identifier as identifier,\r\n          concat(\"\",p.uuid) as uuid,\r\n          concat(\"\",v.uuid) as activeVisitUuid,\r\n          IF(va.value_reference = \"Admitted\", \"true\", \"false\") as hasBeenAdmitted,\r\n          IF(datediff(now(), obs_blooddrawdue.value_datetime) >= 182.62, \"true\", \"false\") as BloodDrawDue\r\nfrom visit v\r\n        join person_name pn on v.patient_id = pn.person_id and pn.voided = 0\r\n        join patient_identifier pi on v.patient_id = pi.patient_id\r\n        join patient_identifier_type pit on pi.identifier_type = pit.patient_identifier_type_id\r\n        join global_property gp on gp.property=\"bahmni.primaryIdentifierType\" and gp.property_value=pit.uuid\r\n        join person p on p.person_id = v.patient_id\r\n		join encounter en on en.visit_id = v.visit_id and en.voided=0		\r\n		left outer JOIN (SELECT\r\n				max(test_obs.obs_group_id) AS max_id,\r\n				test_obs.concept_id,\r\n				test_obs.person_id\r\n			FROM obs test_obs\r\n			INNER JOIN concept c ON c.concept_id = test_obs.concept_id AND test_obs.voided = 0\r\n			INNER JOIN concept_name cn\r\n			  ON c.concept_id = cn.concept_id AND cn.concept_name_type = \"FULLY_SPECIFIED\" AND\r\n				 cn.name IN (\'HIVTC, Viral Load Blood drawn date\')\r\n			GROUP BY test_obs.person_id, test_obs.concept_id) AS tests ON tests.person_id = v.patient_id\r\n		left outer join obs obs_blooddrawdue on obs_blooddrawdue.obs_group_id=tests.max_id and obs_blooddrawdue.concept_id=4267\r\n			and obs_blooddrawdue.voided=0\r\n        join location l on l.uuid = ${visit_location_uuid} and v.location_id = l.location_id\r\n        left outer join visit_attribute va on va.visit_id = v.visit_id and va.attribute_type_id = (\r\n          select visit_attribute_type_id from visit_attribute_type where name=\"Admission Status\"\r\n        ) and va.voided = 0\r\nwhere\r\nv.date_stopped is null and\r\nv.visit_type_id=10\r\norder by en.encounter_datetime asc',NULL,'852c4bce-90f0-4a45-8dff-332c5f9c8951',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.sqlSearch.hei','select distinct\r\n          concat(pn.given_name,\' \', ifnull(pn.family_name,\'\')) as name,\r\n          pi.identifier as identifier,\r\n          concat(\"\",p.uuid) as uuid,\r\n          concat(\"\",v.uuid) as activeVisitUuid,\r\n          IF(va.value_reference = \"Admitted\", \"true\", \"false\") as hasBeenAdmitted\r\n        from visit v\r\n        join person_name pn on v.patient_id = pn.person_id and pn.voided = 0\r\n        join patient_identifier pi on v.patient_id = pi.patient_id\r\n        join patient_identifier_type pit on pi.identifier_type = pit.patient_identifier_type_id\r\n        join global_property gp on gp.property=\"bahmni.primaryIdentifierType\" and gp.property_value=pit.uuid\r\n        join person p on p.person_id = v.patient_id\r\n		join encounter en on en.visit_id = v.visit_id and en.voided=0\r\n        join location l on l.uuid = ${visit_location_uuid} and v.location_id = l.location_id\r\n        left outer join visit_attribute va on va.visit_id = v.visit_id and va.attribute_type_id = (\r\n          select visit_attribute_type_id from visit_attribute_type where name=\"Admission Status\"\r\n        ) and va.voided = 0\r\nwhere\r\nv.date_stopped is null and\r\nv.visit_type_id=18\r\norder by en.encounter_datetime asc',NULL,'761dcbf4-6a78-4f5d-915a-25816d00b1de',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.sqlSearch.highRiskPatients','SELECT DISTINCT\r\n  concat(pn.given_name, \" \", ifnull(pn.family_name,\'\'))           AS name,\r\n  pi.identifier                                        AS identifier,\r\n  concat(\"\", p.uuid)                                   AS uuid,\r\n  concat(\"\", v.uuid)                                   AS activeVisitUuid,\r\n  IF(va.value_reference = \"Admitted\", \"true\", \"false\") AS hasBeenAdmitted\r\nFROM person p\r\n  INNER JOIN person_name pn ON pn.person_id = p.person_id\r\n  INNER JOIN patient_identifier pi ON pn.person_id = pi.patient_id\r\n  INNER JOIN patient_identifier_type pit on pi.identifier_type = pit.patient_identifier_type_id\r\n  INNER JOIN global_property gp on gp.property=\"bahmni.primaryIdentifierType\" and gp.property_value=pit.uuid\r\n  INNER JOIN visit v ON v.patient_id = p.person_id AND v.date_stopped IS NULL AND v.voided = 0\r\n  INNER JOIN (SELECT\r\n                max(test_obs.obs_group_id) AS max_id,\r\n                test_obs.concept_id,\r\n                test_obs.person_id\r\n              FROM obs test_obs\r\n                INNER JOIN concept c ON c.concept_id = test_obs.concept_id AND test_obs.voided = 0\r\n                INNER JOIN concept_name cn\r\n                  ON c.concept_id = cn.concept_id AND cn.concept_name_type = \"FULLY_SPECIFIED\" AND\r\n                     cn.name IN (${testName})\r\n              GROUP BY test_obs.person_id, test_obs.concept_id) AS tests ON tests.person_id = v.patient_id\r\n  INNER JOIN obs abnormal_obs\r\n    ON abnormal_obs.obs_group_id = tests.max_id AND abnormal_obs.value_coded = 1 AND abnormal_obs.voided = 0\r\n  INNER JOIN concept abnormal_concept ON abnormal_concept.concept_id = abnormal_obs.concept_id\r\n  INNER JOIN concept_name abnormal_concept_name\r\n    ON abnormal_concept.concept_id = abnormal_concept_name.concept_id AND\r\n       abnormal_concept_name.concept_name_type = \"FULLY_SPECIFIED\" AND\r\n       abnormal_concept_name.name IN (\"LAB_ABNORMAL\")\r\n  LEFT OUTER JOIN visit_attribute va ON va.visit_id = v.visit_id AND va.attribute_type_id =\r\n                                                                     (SELECT visit_attribute_type_id\r\n                                                                      FROM visit_attribute_type\r\n                                                                      WHERE name = \"Admission Status\")','SQL QUERY TO get LIST of patients with high risk','71ba1160-36e8-11e7-be35-080027e99513',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.sqlSearch.highviralload','select distinct\r\n          concat(pn.given_name,\' \', ifnull(pn.family_name,\'\')) as name,\r\n          pi.identifier as identifier,\r\n          concat(\"\",p.uuid) as uuid,\r\n          concat(\"\",v.uuid) as activeVisitUuid,\r\n          IF(va.value_reference = \"Admitted\", \"true\", \"false\") as hasBeenAdmitted,\r\n          IF(datediff(now(), obs_blooddrawdue.value_datetime) >= 182.62, \"true\", \"false\") as BloodDrawDue\r\nfrom visit v\r\n        join person_name pn on v.patient_id = pn.person_id and pn.voided = 0\r\n        join patient_identifier pi on v.patient_id = pi.patient_id\r\n        join patient_identifier_type pit on pi.identifier_type = pit.patient_identifier_type_id\r\n        join global_property gp on gp.property=\"bahmni.primaryIdentifierType\" and gp.property_value=pit.uuid\r\n        join person p on p.person_id = v.patient_id\r\n		join encounter en on en.visit_id = v.visit_id and en.voided=0		\r\n		left outer JOIN (SELECT\r\n				max(test_obs.obs_group_id) AS max_id,\r\n				test_obs.concept_id,\r\n				test_obs.person_id\r\n			FROM obs test_obs\r\n			INNER JOIN concept c ON c.concept_id = test_obs.concept_id AND test_obs.voided = 0\r\n			INNER JOIN concept_name cn\r\n			  ON c.concept_id = cn.concept_id AND cn.concept_name_type = \"FULLY_SPECIFIED\" AND\r\n				 cn.name IN (\'HIVTC, Viral Load Blood drawn date\')\r\n			GROUP BY test_obs.person_id, test_obs.concept_id) AS tests ON tests.person_id = v.patient_id\r\n		left outer join obs obs_blooddrawdue on obs_blooddrawdue.obs_group_id=tests.max_id and obs_blooddrawdue.concept_id=4267\r\n			and obs_blooddrawdue.voided=0\r\n        join location l on l.uuid = ${visit_location_uuid} and v.location_id = l.location_id\r\n        left outer join visit_attribute va on va.visit_id = v.visit_id and va.attribute_type_id = (\r\n          select visit_attribute_type_id from visit_attribute_type where name=\"Admission Status\"\r\n        ) and va.voided = 0\r\nwhere\r\nv.date_stopped is null and\r\nv.visit_type_id=12\r\norder by en.encounter_datetime asc',NULL,'647c7cbf-83de-44e6-a9a6-f33e4e8d3feb',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.sqlSearch.htsonly','select distinct\r\n          p.person_id,\r\n          concat(pn.given_name,\' \', ifnull(pn.family_name,\'\')) as name,\r\n          pi.identifier as identifier,\r\n		  concat(\"\",p.uuid) as uuid,\r\n          concat(\"\",v.uuid) as activeVisitUuid,\r\n          IF(va.value_reference = \"Admitted\", \"true\", \"false\") as hasBeenAdmitted,\r\n                  if(obs_positive.value_coded=1738, \"true\", \"false\") as CodedP\r\n        from visit v\r\n        join person_name pn on v.patient_id = pn.person_id and pn.voided = 0\r\n        join patient_identifier pi on v.patient_id = pi.patient_id\r\n        join patient_identifier_type pit on pi.identifier_type = pit.patient_identifier_type_id\r\n        join global_property gp on gp.property=\"bahmni.primaryIdentifierType\" and gp.property_value=pit.uuid\r\n        join person p on p.person_id = v.patient_id\r\n		join encounter en on en.visit_id = v.visit_id and en.voided=0\r\n		left outer JOIN (SELECT\r\n				max(test_obs.obs_group_id) AS max_id,\r\n				test_obs.concept_id,\r\n				test_obs.person_id\r\n			FROM obs test_obs\r\n			INNER JOIN concept c ON c.concept_id = test_obs.concept_id AND test_obs.voided = 0\r\n			INNER JOIN concept_name cn\r\n			  ON c.concept_id = cn.concept_id AND cn.concept_name_type = \"FULLY_SPECIFIED\" AND\r\n				 cn.name IN (\'HTC, Final HIV status\')\r\n			GROUP BY test_obs.person_id, test_obs.concept_id) AS tests ON tests.person_id = v.patient_id\r\n		left outer join obs obs_positive on obs_positive.obs_group_id=tests.max_id and obs_positive.value_coded=1738\r\n			and obs_positive.voided=0\r\n        join location l on v.location_id = l.location_id\r\n        left outer join visit_attribute va on va.visit_id = v.visit_id and va.attribute_type_id = (\r\n          select visit_attribute_type_id from visit_attribute_type where name=\"Admission Status\"\r\n        ) and va.voided = 0\r\nwhere\r\nv.date_stopped is null and\r\nv.visit_type_id=15\r\norder by en.encounter_datetime asc',NULL,'dc1d0217-5d58-4773-82bc-2fb817797d3e',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.sqlSearch.htspositivelinkedtocare','select distinct\r\n          concat(pn.given_name,\' \', ifnull(pn.family_name,\'\')) as name,\r\n          pi.identifier as identifier,\r\n          concat(\"\",p.uuid) as uuid,\r\n          concat(\"\",v.uuid) as activeVisitUuid,\r\n          IF(va.value_reference = \"Admitted\", \"true\", \"false\") as hasBeenAdmitted\r\n        from visit v\r\n        join person_name pn on v.patient_id = pn.person_id and pn.voided = 0\r\n        join patient_identifier pi on v.patient_id = pi.patient_id\r\n        join patient_identifier_type pit on pi.identifier_type = pit.patient_identifier_type_id\r\n        join global_property gp on gp.property=\"bahmni.primaryIdentifierType\" and gp.property_value=pit.uuid\r\n        join person p on p.person_id = v.patient_id\r\n		join encounter en on en.visit_id = v.visit_id and en.voided=0\r\n		join obs obs_linked on obs_linked.encounter_id=en.encounter_id and obs_linked.person_id=p.person_id\r\n		and obs_linked.concept_id=4239 and obs_linked.value_coded=2146\r\n		join obs obs_positive on obs_positive.encounter_id=en.encounter_id and obs_positive.person_id=p.person_id\r\n		and obs_positive.concept_id=2165 and obs_positive.value_coded=1738\r\n        join location l on v.location_id = l.location_id\r\n        left outer join visit_attribute va on va.visit_id = v.visit_id and va.attribute_type_id = (\r\n          select visit_attribute_type_id from visit_attribute_type where name=\"Admission Status\"\r\n        ) and va.voided = 0\r\nwhere\r\nv.date_stopped is null and\r\nv.visit_type_id=15\r\norder by en.encounter_datetime asc',NULL,'236b2f2f-5c77-480b-a18d-df0f5f3502b0',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.sqlSearch.neworpreart','select distinct\r\n          concat(pn.given_name,\' \', ifnull(pn.family_name,\'\')) as name,\r\n          pi.identifier as identifier,\r\n          concat(\"\",p.uuid) as uuid,\r\n          concat(\"\",v.uuid) as activeVisitUuid,\r\n          IF(va.value_reference = \"Admitted\", \"true\", \"false\") as hasBeenAdmitted\r\n        from visit v\r\n        join person_name pn on v.patient_id = pn.person_id and pn.voided = 0\r\n        join patient_identifier pi on v.patient_id = pi.patient_id\r\n        join patient_identifier_type pit on pi.identifier_type = pit.patient_identifier_type_id\r\n        join global_property gp on gp.property=\"bahmni.primaryIdentifierType\" and gp.property_value=pit.uuid\r\n        join person p on p.person_id = v.patient_id\r\n		join encounter en on en.visit_id = v.visit_id and en.voided=0\r\n        join location l on l.uuid = ${visit_location_uuid} and v.location_id = l.location_id\r\n        left outer join visit_attribute va on va.visit_id = v.visit_id and va.attribute_type_id = (\r\n          select visit_attribute_type_id from visit_attribute_type where name=\"Admission Status\"\r\n        ) and va.voided = 0\r\nwhere\r\nv.date_stopped is null and\r\nv.visit_type_id=9\r\norder by en.encounter_datetime asc',NULL,'1086fc26-0f7e-44c4-801e-ca6d57f8d525',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.sqlSearch.patientsHasPendingOrders','select distinct\r\n          concat(pn.given_name, \" \", ifnull(pn.family_name,\'\')) as name,\r\n          pi.identifier as identifier,\r\n          concat(\"\",p.uuid) as uuid,\r\n          concat(\"\",v.uuid) as activeVisitUuid,\r\n          IF(va.value_reference = \"Admitted\", \"true\", \"false\") as hasBeenAdmitted\r\n        from visit v\r\n        join person_name pn on v.patient_id = pn.person_id and pn.voided = 0\r\n        join patient_identifier pi on v.patient_id = pi.patient_id\r\n        join patient_identifier_type pit on pi.identifier_type = pit.patient_identifier_type_id\r\n        join global_property gp on gp.property=\"bahmni.primaryIdentifierType\" and gp.property_value=pit.uuid\r\n        join person p on p.person_id = v.patient_id\r\n        join orders on orders.patient_id = v.patient_id\r\n        join order_type on orders.order_type_id = order_type.order_type_id and order_type.name != \"Order\" and order_type.name != \"Drug Order\"\r\n        left outer join visit_attribute va on va.visit_id = v.visit_id and va.voided = 0 and va.attribute_type_id =\r\n          (select visit_attribute_type_id from visit_attribute_type where name=\"Admission Status\")\r\n        where v.date_stopped is null AND v.voided = 0 and order_id not in\r\n          (select obs.order_id\r\n            from obs\r\n          where person_id = pn.person_id and order_id = orders.order_id)','Sql query to get list of patients who has pending orders','71ba1bf0-36e8-11e7-be35-080027e99513',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.sqlSearch.patientsToAdmit','select distinct concat(pn.given_name,\' \', ifnull(pn.family_name,\'\')) as name,\r\n        pi.identifier as identifier,\r\n        concat(\"\",p.uuid) as uuid,\r\n        concat(\"\",v.uuid) as activeVisitUuid\r\n        from visit v\r\n        join person_name pn on v.patient_id = pn.person_id and pn.voided = 0 AND v.voided = 0\r\n        join patient_identifier pi on v.patient_id = pi.patient_id\r\n        join patient_identifier_type pit on pi.identifier_type = pit.patient_identifier_type_id\r\n        join global_property gp on gp.property=\"bahmni.primaryIdentifierType\" and gp.property_value=pit.uuid\r\n        join person p on v.patient_id = p.person_id\r\n        join encounter e on v.visit_id = e.visit_id\r\n        join obs o on e.encounter_id = o.encounter_id and o.voided = 0\r\n        join concept c on o.value_coded = c.concept_id\r\n        join concept_name cn on c.concept_id = cn.concept_id\r\n        join location l on l.uuid=${visit_location_uuid} and v.location_id = l.location_id\r\n        where v.date_stopped is null and cn.name = \'Admit Patient\' and v.visit_id not in (select visit_id\r\n        from encounter ie join encounter_type iet\r\n        on iet.encounter_type_id = ie.encounter_type\r\n        where iet.name = \'ADMISSION\')','Sql query to get list of patients to be admitted','71b9d436-36e8-11e7-be35-080027e99513',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.sqlSearch.patientsToDischarge','SELECT DISTINCT\r\n          concat(pn.given_name, \' \', ifnull(pn.family_name,\'\')) AS name,\r\n          pi.identifier AS identifier,\r\n          concat(\"\", p.uuid) AS uuid,\r\n          concat(\"\", v.uuid) AS activeVisitUuid,\r\n          IF(va.value_reference = \"Admitted\", \"true\", \"false\") as hasBeenAdmitted\r\n        FROM visit v\r\n        INNER JOIN person_name pn ON v.patient_id = pn.person_id and pn.voided is FALSE\r\n        INNER JOIN patient_identifier pi ON v.patient_id = pi.patient_id and pi.voided is FALSE\r\n        INNER JOIN patient_identifier_type pit on pi.identifier_type = pit.patient_identifier_type_id\r\n        INNER JOIN global_property gp on gp.property=\"bahmni.primaryIdentifierType\" and gp.property_value=pit.uuid\r\n        INNER JOIN person p ON v.patient_id = p.person_id\r\n        Inner Join (SELECT DISTINCT v.visit_id\r\n          FROM encounter en\r\n          INNER JOIN visit v ON v.visit_id = en.visit_id AND en.encounter_type =\r\n            (SELECT encounter_type_id\r\n              FROM encounter_type\r\n            WHERE name = \"ADMISSION\")) v1 on v1.visit_id = v.visit_id\r\n        INNER JOIN encounter e ON v.visit_id = e.visit_id\r\n        INNER JOIN obs o ON e.encounter_id = o.encounter_id\r\n        INNER JOIN concept_name cn ON o.value_coded = cn.concept_id AND cn.concept_name_type = \"FULLY_SPECIFIED\" AND cn.voided is FALSE\r\n        JOIN location l on l.uuid=${visit_location_uuid} and v.location_id = l.location_id\r\n        left outer join visit_attribute va on va.visit_id = v.visit_id and va.attribute_type_id =\r\n          (select visit_attribute_type_id from visit_attribute_type where name=\"Admission Status\")\r\n        LEFT OUTER JOIN encounter e1 ON e1.visit_id = v.visit_id AND e1.encounter_type = (\r\n          SELECT encounter_type_id\r\n            FROM encounter_type\r\n          WHERE name = \"DISCHARGE\") AND e1.voided is FALSE\r\n        WHERE v.date_stopped IS NULL AND v.voided = 0 AND o.voided = 0 AND cn.name = \"Discharge Patient\" AND e1.encounter_id IS NULL','Sql query to get list of patients to discharge','71b9f236-36e8-11e7-be35-080027e99513',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.sqlSearch.pnc','select distinct\r\n          concat(pn.given_name,\' \', ifnull(pn.family_name,\'\')) as name,\r\n          pi.identifier as identifier,\r\n          concat(\"\",p.uuid) as uuid,\r\n          concat(\"\",v.uuid) as activeVisitUuid,\r\n          IF(va.value_reference = \"Admitted\", \"true\", \"false\") as hasBeenAdmitted\r\n        from visit v\r\n        join person_name pn on v.patient_id = pn.person_id and pn.voided = 0\r\n        join patient_identifier pi on v.patient_id = pi.patient_id\r\n        join patient_identifier_type pit on pi.identifier_type = pit.patient_identifier_type_id\r\n        join global_property gp on gp.property=\"bahmni.primaryIdentifierType\" and gp.property_value=pit.uuid\r\n        join person p on p.person_id = v.patient_id\r\n		join encounter en on en.visit_id = v.visit_id and en.voided=0\r\n        join location l on l.uuid = ${visit_location_uuid} and v.location_id = l.location_id\r\n        left outer join visit_attribute va on va.visit_id = v.visit_id and va.attribute_type_id = (\r\n          select visit_attribute_type_id from visit_attribute_type where name=\"Admission Status\"\r\n        ) and va.voided = 0\r\nwhere\r\nv.date_stopped is null and\r\nv.visit_type_id=17\r\norder by en.encounter_datetime asc',NULL,'74e43089-f6fd-4f6b-a5cd-6af310d939d6',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.sqlSearch.tbcases','select distinct\r\n          concat(pn.given_name,\' \', ifnull(pn.family_name,\'\')) as name,\r\n          pi.identifier as identifier,\r\n          concat(\"\",p.uuid) as uuid,\r\n          concat(\"\",v.uuid) as activeVisitUuid,\r\n          IF(va.value_reference = \"Admitted\", \"true\", \"false\") as hasBeenAdmitted\r\n        from visit v\r\n        join person_name pn on v.patient_id = pn.person_id and pn.voided = 0\r\n        join patient_identifier pi on v.patient_id = pi.patient_id\r\n        join patient_identifier_type pit on pi.identifier_type = pit.patient_identifier_type_id\r\n        join global_property gp on gp.property=\"bahmni.primaryIdentifierType\" and gp.property_value=pit.uuid\r\n        join person p on p.person_id = v.patient_id\r\n		join encounter en on en.visit_id = v.visit_id and en.voided=0\r\n        join location l on l.uuid = ${visit_location_uuid} and v.location_id = l.location_id\r\n        left outer join visit_attribute va on va.visit_id = v.visit_id and va.attribute_type_id = (\r\n          select visit_attribute_type_id from visit_attribute_type where name=\"Admission Status\"\r\n        ) and va.voided = 0\r\nwhere\r\nv.date_stopped is null and\r\nv.visit_type_id=13\r\norder by en.encounter_datetime asc',NULL,'9a63db99-482e-4c29-acd4-c4c1c9a0e2d8',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.sqlSearch.tbintakeorfollowup','select distinct\r\n          concat(pn.given_name,\' \', ifnull(pn.family_name,\'\')) as name,\r\n          pi.identifier as identifier,\r\n          concat(\"\",p.uuid) as uuid,\r\n          concat(\"\",v.uuid) as activeVisitUuid,\r\n          IF(va.value_reference = \"Admitted\", \"true\", \"false\") as hasBeenAdmitted\r\n        from visit v\r\n        join person_name pn on v.patient_id = pn.person_id and pn.voided = 0\r\n        join patient_identifier pi on v.patient_id = pi.patient_id\r\n        join patient_identifier_type pit on pi.identifier_type = pit.patient_identifier_type_id\r\n        join global_property gp on gp.property=\"bahmni.primaryIdentifierType\" and gp.property_value=pit.uuid\r\n        join person p on p.person_id = v.patient_id\r\n		join encounter en on en.visit_id = v.visit_id and en.voided=0\r\n        join location l on l.uuid = ${visit_location_uuid} and v.location_id = l.location_id\r\n        left outer join visit_attribute va on va.visit_id = v.visit_id and va.attribute_type_id = (\r\n          select visit_attribute_type_id from visit_attribute_type where name=\"Admission Status\"\r\n        ) and va.voided = 0\r\nwhere\r\nv.date_stopped is null and\r\nv.visit_type_id=11\r\norder by en.encounter_datetime asc',NULL,'d104fb8e-78d4-4f41-bf4a-5968e2c6f7d1',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.sqlSearch.transferin','select distinct\r\n          concat(pn.given_name,\' \', ifnull(pn.family_name,\'\')) as name,\r\n          pi.identifier as identifier,\r\n          concat(\"\",p.uuid) as uuid,\r\n          concat(\"\",v.uuid) as activeVisitUuid,\r\n          IF(va.value_reference = \"Admitted\", \"true\", \"false\") as hasBeenAdmitted\r\n        from visit v\r\n        join person_name pn on v.patient_id = pn.person_id and pn.voided = 0\r\n        join patient_identifier pi on v.patient_id = pi.patient_id\r\n        join patient_identifier_type pit on pi.identifier_type = pit.patient_identifier_type_id\r\n        join global_property gp on gp.property=\"bahmni.primaryIdentifierType\" and gp.property_value=pit.uuid\r\n        join person p on p.person_id = v.patient_id\r\n		join encounter en on en.visit_id = v.visit_id and en.voided=0\r\n        join location l on l.uuid = ${visit_location_uuid} and v.location_id = l.location_id\r\n        left outer join visit_attribute va on va.visit_id = v.visit_id and va.attribute_type_id = (\r\n          select visit_attribute_type_id from visit_attribute_type where name=\"Admission Status\"\r\n        ) and va.voided = 0\r\nwhere\r\nv.date_stopped is null and\r\nv.visit_type_id=14\r\norder by en.encounter_datetime asc',NULL,'c18ec550-4878-4a5a-85b2-52a15d000992',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.started','true','DO NOT MODIFY. true/false whether or not the emrapi module has been started.  This is used to make sure modules that were running  prior to a restart are started again','f3ce398a-c275-4744-a727-cb02ac5d709d',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.suppressedDiagnosisConcepts',NULL,'UUIDs or mappings of suppressed diagnosis concepts','b339beb8-f6d3-41d9-a5fa-827c14756f2f',NULL,NULL,NULL,NULL,NULL,NULL),('emrapi.visitExpireHours','24','Number of hours after which visit can be auto closed','c22c5a73-3f10-11e4-adec-0800271c1b75',NULL,NULL,NULL,NULL,NULL,NULL),('encounter.feed.publish.url','/openmrs/ws/rest/v1/bahmnicore/bahmniencounter/%s?includeAll=true','Url to be published on encounter save.','242982b8-8a92-11e4-977f-0800271c1b75',NULL,NULL,NULL,NULL,NULL,NULL),('encounterForm.obsSortOrder','number','The sort order for the obs listed on the encounter edit form.  \'number\' sorts on the associated numbering from the form schema.  \'weight\' sorts on the order displayed in the form schema.','de214640-9698-40c0-8b9e-6c1cf53ce4c3',NULL,NULL,NULL,NULL,NULL,NULL),('encounterModifier.groovy.allowCaching','true','Allow Groovy Caching','e16605a1-266a-47cb-8385-d07742646640',NULL,NULL,NULL,NULL,NULL,NULL),('EncounterType.encounterTypes.locked','false','saving, retiring or deleting an Encounter Type is not permitted, if true','a23b0d0f-5a6d-4190-8b46-c2207ef5d370','org.openmrs.customdatatype.datatype.BooleanDatatype',NULL,NULL,NULL,NULL,NULL),('episodes.mandatory','false','true/false whether or not the episodes module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','deadd888-e1e7-44a5-a671-138c2a1998e4',NULL,NULL,NULL,NULL,NULL,NULL),('episodes.started','true','DO NOT MODIFY. true/false whether or not the episodes module has been started.  This is used to make sure modules that were running  prior to a restart are started again','d4fec83a-e7f5-47c4-ba51-8cce103aa33c',NULL,NULL,NULL,NULL,NULL,NULL),('event.ActiveMQDataDirectory','activemq-default-data','Directory where activeMQ files will be stored.','d8852aae-4778-44e0-b94f-625099459c3b',NULL,NULL,NULL,NULL,NULL,NULL),('event.mandatory','false','true/false whether or not the event module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','bca3d36b-b680-44e4-8065-6993412169d6',NULL,NULL,NULL,NULL,NULL,NULL),('event.started','true','DO NOT MODIFY. true/false whether or not the event module has been started.  This is used to make sure modules that were running  prior to a restart are started again','5dcd8d6b-4f9b-4d9b-a866-74fe998f0680',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.allergy.allergyStrategy','ActiveListAllergyStrategy','Set allergy strategy','4c8abce4-e5c7-4799-ada9-d0a140b483ce',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.allergy.ObsAllergyStrategy.concept.uuid','1234','Concept id for allergy obs','380be3fe-bd9c-45f7-bdb6-f3bd091c405e',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.baseUrl','http://localhost:8080/openmrs/ws/fhir','The URI prefix through which clients consuming FHIR services will connect to the web application, should\r\n            be of the form http://{ipAddress}:{port}/{contextPath}/ws/fhir','a4ec8431-d247-4d2c-9086-cd0c21666306',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.concept.codingSystem','OPENMRS','Concept Coding System','b53fac2c-ff77-4127-8bad-3b05a1a3841f',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.concepts.conditions',NULL,'The set of IDs of the concepts that can be matched to conditions which is needed to be stored as\r\n            Observations','82bc669e-5c33-4ae8-8ed9-5a7edcb40bb5',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.customNarrativePropertiesPath','classpath:/com/foo/customnarrative.properties','Set custom narratives property path','0785a87c-917f-4083-b948-196c7f532611',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.diagnosticreport.imagingstudy','0123456789','Concept Id for \'ImagingStudy\' field in http://www.hl7.org/FHIR/2015May/diagnosticreport.html','0a396f76-937e-4dc0-8564-2e900e28728e',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.diagnosticreport.name','0123456789','Concept Id for \'Name\' field in http://www.hl7.org/FHIR/2015May/diagnosticreport.html','7fff16aa-86cc-4fb1-98c6-a095f32efcb5',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.diagnosticreport.presentedform','0123456789','Concept Id for \'PresentedForm\' field in http://www.hl7.org/FHIR/2015May/diagnosticreport.html','abe6b214-3d2a-40ca-9788-77960a87222c',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.diagnosticreport.radiology.server','http://fhir-dev.healthintersections.com.au/open','The URL of third party FHIR base server that use to retrieve Radiology Diagnostic Reports','97462f46-2aa0-4358-9205-71cb4c4a9b14',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.diagnosticreport.result','0123456789','Concept Id for \'Result\' field in http://www.hl7.org/FHIR/2015May/diagnosticreport.html','e838fa93-aa2e-4193-9740-5bd563f8c6a8',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.diagnosticreport.status','0123456789','Concept Id for \'Status\' field in http://www.hl7.org/FHIR/2015May/diagnosticreport.html','9c864e9f-044a-4f27-8f44-e4ecfdb71f0c',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.encounter.encounterRoleUuid','73bbb069-9781-4afc-a9d1-54b6b2270e03','Encounter Role uuid','2fc25a50-1db1-4001-a486-806e62f02945',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.encounter.encounterStrategy','DefaultEncounterStrategy','Set encounter strategy.','1ecd7676-e741-4d29-bba0-298d85eaf376',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.encounter.encounterType.DEFAULT','01234-abcde-56789','EncounterType uuid for Default (not available in http://hl7.org/implement/standards/fhir/v2/0074/index\r\n            .html)','3263246c-509f-4159-883a-e85972b7ef80',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.encounter.encounterType.LAB','01234-abcde-56789','EncounterType uuid for Laboratory in http://hl7.org/implement/standards/fhir/v2/0074/index.html','c7336515-5733-4a82-8c0c-4deb6dea06b8',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.encounter.encounterType.RAD','01234-abcde-56789','EncounterType uuid for Radiology in http://hl7.org/implement/standards/fhir/v2/0074/index.html','fb381d06-5a12-4350-82aa-d6e550743434',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.imagingstudy.series','0123456789','Concept Id for \'ImagingStudy.Series\' field in http://www.hl7.org/FHIR/2015May/diagnosticreport.html','7466045c-a442-45f1-bd4b-0d1e90f5d707',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.imagingstudy.series.instance','0123456789','Concept Id for \'ImagingStudy.Series.Instance\' field in\r\n            http://www.hl7.org/FHIR/2015May/diagnosticreport.html','ad058cb9-597d-4ebc-9a4a-dfc51e6bfe1b',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.imagingstudy.series.instance.content','0123456789','Concept Id for \'ImagingStudy.Series.Content\' field in http://www.hl7.org/FHIR/2015May/imagingstudy.html','5869ba30-56ce-4e22-a479-7cdbe80a5a6c',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.isCustomerNarrativesEnabled','false','Set true if you need to enable custom narratives','a51bf278-ab9a-46c1-a65d-392c7d02b8a3',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.location.locationStrategy','DefaultLocationStrategy','Set location strategy','ac4473a6-94d6-476a-a88d-f0f2af3fa944',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.mandatory','false','true/false whether or not the fhir module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','a3fb1218-64bf-4dbf-8b25-99b401faa95f',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.observation.observationStrategy','DefaultObservationStrategy','Set observation strategy.','334da591-ec85-44e3-adaf-b3d5d36803c0',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.patient.patientStrategy','DefaultPatientStrategy','Set patient strategy.','54744fdf-d3de-4a8a-9c92-eaf3fe43b36e',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.person.personStrategy','DefaultPersonStrategy','Set person strategy.','bbb1b500-a7ca-43a6-bfc7-41f2de0b172b',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.practitioner.practitionerStrategy','DefaultPractitionerStrategy','Set practitioner strategy.','c01dcff2-9bd3-4ca6-85ae-66b872269119',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.relatedPerson.relatedPersonStrategy','DefaultRelatedPersonStrategy','Set related person strategy.','d9b909e0-2892-4cbe-bdcc-3e3ff6237ac7',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.started','true','DO NOT MODIFY. true/false whether or not the fhir module has been started.  This is used to make sure modules that were running  prior to a restart are started again','96f55c08-1127-4582-a98a-b22568d30818',NULL,NULL,NULL,NULL,NULL,NULL),('fhir.uriPrefix',NULL,'The URI prefix through which clients consuming web services will connect to the web application, should be of the form http://{ipAddress}:{port}/{contextPath}','53222978-8594-4a07-ab0c-20a72aecf789',NULL,NULL,NULL,NULL,NULL,NULL),('Form.forms.locked','false','Set to a value of true if you do not want any changes to be made on forms, else set to false.','993197ed-e8da-42de-8b62-1d00c33ad498',NULL,NULL,NULL,NULL,NULL,NULL),('FormEntry.enableDashboardTab','true','true/false whether or not to show a Form Entry tab on the patient dashboard','792466d4-2eee-4dc7-b934-3fa6dfef9a67','org.openmrs.customdatatype.datatype.BooleanDatatype',NULL,NULL,NULL,NULL,NULL),('FormEntry.enableOnEncounterTab','false','true/false whether or not to show a Enter Form button on the encounters tab of the patient dashboard','5e4abcdd-46ec-4925-b99a-8a55e33cd3e7','org.openmrs.customdatatype.datatype.BooleanDatatype',NULL,NULL,NULL,NULL,NULL),('forms.locked','false','Set to a value of true if you do not want any changes to be made on forms, else set to false.','4a47af93-ec78-49fb-b9d6-07a5ad53d6b3',NULL,NULL,NULL,NULL,NULL,NULL),('graph.color.absolute','rgb(20,20,20)','Color of the \'invalid\' section of numeric graphs on the patient dashboard.','6819ac4b-2dda-4e5c-a822-7583a4988316',NULL,NULL,NULL,NULL,NULL,NULL),('graph.color.critical','rgb(200,0,0)','Color of the \'critical\' section of numeric graphs on the patient dashboard.','322e459a-aed4-4e0f-ae70-9130d1f6156c',NULL,NULL,NULL,NULL,NULL,NULL),('graph.color.normal','rgb(255,126,0)','Color of the \'normal\' section of numeric graphs on the patient dashboard.','792feb98-9434-41d1-a588-d02f0f509397',NULL,NULL,NULL,NULL,NULL,NULL),('gzip.enabled','false','Set to \'true\' to turn on OpenMRS\'s gzip filter, and have the webapp compress data before sending it to any client that supports it. Generally use this if you are running Tomcat standalone. If you are running Tomcat behind Apache, then you\'d want to use Apache to do gzip compression.','9e7bfcbf-3f84-4c13-8f65-4bb460841663','org.openmrs.customdatatype.datatype.BooleanDatatype',NULL,NULL,NULL,NULL,NULL),('hl7_archive.dir','hl7_archives','The default name or absolute path for the folder where to write the hl7_in_archives.','a1a70f16-733f-48ba-9701-82877156ab04',NULL,NULL,NULL,NULL,NULL,NULL),('hl7_processor.ignore_missing_patient_non_local','false','If true, hl7 messages for patients that are not found and are non-local will silently be dropped/ignored','6dddbb11-8980-49b7-b432-a21951ea5d8e','org.openmrs.customdatatype.datatype.BooleanDatatype',NULL,NULL,NULL,NULL,NULL),('htmlwidgets.mandatory','false','true/false whether or not the htmlwidgets module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','d78cef29-f600-45e7-9328-e341f7542634',NULL,NULL,NULL,NULL,NULL,NULL),('htmlwidgets.started','true','DO NOT MODIFY. true/false whether or not the htmlwidgets module has been started.  This is used to make sure modules that were running  prior to a restart are started again','d39d17b3-3ce7-4f97-b2bd-a1b544a809ae',NULL,NULL,NULL,NULL,NULL,NULL),('idgen-webservices.mandatory','false','true/false whether or not the idgen-webservices module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','671b643a-e4ec-40b9-83ab-68d5cfe1c41c',NULL,NULL,NULL,NULL,NULL,NULL),('idgen-webservices.started','true','DO NOT MODIFY. true/false whether or not the idgen-webservices module has been started.  This is used to make sure modules that were running  prior to a restart are started again','608946c8-af00-48f1-93d4-f438724cf6b0',NULL,NULL,NULL,NULL,NULL,NULL),('idgen.database_version','2.5.1','DO NOT MODIFY.  Current database version number for the idgen module.','705e4713-3f10-11e4-adec-0800271c1b75',NULL,NULL,NULL,NULL,NULL,NULL),('idgen.mandatory','false','true/false whether or not the idgen module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','08413c3e-7d96-4d0f-9e1d-788df2c80e6c',NULL,NULL,NULL,NULL,NULL,NULL),('idgen.started','true','DO NOT MODIFY. true/false whether or not the idgen module has been started.  This is used to make sure modules that were running  prior to a restart are started again','f37b76d3-33e1-4d85-8f3e-74bb8683067f',NULL,NULL,NULL,NULL,NULL,NULL),('layout.address.format','<org.openmrs.layout.address.AddressTemplate>\r\n    <nameMappings class=\"properties\">\r\n      <property name=\"postalCode\" value=\"Location.postalCode\"/>\r\n      <property name=\"longitude\" value=\"Location.longitude\"/>\r\n      <property name=\"address2\" value=\"Location.address2\"/>\r\n      <property name=\"address1\" value=\"Location.address1\"/>\r\n      <property name=\"startDate\" value=\"PersonAddress.startDate\"/>\r\n      <property name=\"country\" value=\"Location.country\"/>\r\n      <property name=\"endDate\" value=\"personAddress.endDate\"/>\r\n      <property name=\"stateProvince\" value=\"Location.stateProvince\"/>\r\n      <property name=\"latitude\" value=\"Location.latitude\"/>\r\n      <property name=\"cityVillage\" value=\"Location.cityVillage\"/>\r\n    </nameMappings>\r\n    <sizeMappings class=\"properties\">\r\n      <property name=\"postalCode\" value=\"10\"/>\r\n      <property name=\"longitude\" value=\"10\"/>\r\n      <property name=\"address2\" value=\"40\"/>\r\n      <property name=\"address1\" value=\"40\"/>\r\n      <property name=\"startDate\" value=\"10\"/>\r\n      <property name=\"country\" value=\"10\"/>\r\n      <property name=\"endDate\" value=\"10\"/>\r\n      <property name=\"stateProvince\" value=\"10\"/>\r\n      <property name=\"latitude\" value=\"10\"/>\r\n      <property name=\"cityVillage\" value=\"10\"/>\r\n    </sizeMappings>\r\n    <lineByLineFormat>\r\n      <string>address1</string>\r\n      <string>address2</string>\r\n      <string>cityVillage stateProvince country postalCode</string>\r\n      <string>latitude longitude</string>\r\n      <string>startDate endDate</string>\r\n    </lineByLineFormat>\r\n  </org.openmrs.layout.address.AddressTemplate>','XML description of address formats','494499c0-23fe-4a9e-b6f0-eeaeb04cf3b2',NULL,NULL,NULL,NULL,NULL,NULL),('layout.name.format','short','Format in which to display the person names.  Valid values are short, long','623aad31-3143-422a-9f37-d21c99c6ccd2',NULL,NULL,NULL,NULL,NULL,NULL),('legacyui.mandatory','false','true/false whether or not the legacyui module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','8fd39c14-eb45-468b-a5e5-f207e25ba87c',NULL,NULL,NULL,NULL,NULL,NULL),('legacyui.started','true','DO NOT MODIFY. true/false whether or not the legacyui module has been started.  This is used to make sure modules that were running  prior to a restart are started again','f2038149-4c27-417b-91b1-5c31ccba4d82',NULL,NULL,NULL,NULL,NULL,NULL),('locale.allowed.list','en, es, fr, it, pt_BR','Comma delimited list of locales allowed for use on system','99f24877-92ff-435c-8429-4a7ae3773f4e',NULL,NULL,NULL,NULL,NULL,NULL),('location.field.style','default','Type of widget to use for location fields','d65fb5b9-20b1-484c-9e1b-7643fbe16d04',NULL,NULL,NULL,NULL,NULL,NULL),('log.layout','%p - %C{1}.%M(%L) |%d{ISO8601}| %m%n','A log layout pattern which is used by the OpenMRS file appender.','67171cd3-108f-4a25-985a-8b0555b5b352',NULL,NULL,NULL,NULL,NULL,NULL),('log.level','org.openmrs.api:warn','Logging levels for log4j.xml. Valid format is class:level,class:level. If class not specified, \'org.openmrs.api\' presumed. Valid levels are trace, debug, info, warn, error or fatal','f69ef4c0-caaa-4945-8755-e7c72ff21632',NULL,NULL,NULL,NULL,NULL,NULL),('log.location',NULL,'A directory where the OpenMRS log file appender is stored. The log file name is \'openmrs.log\'.','2de8aed5-90e0-46b4-be48-2342c984335c',NULL,NULL,NULL,NULL,NULL,NULL),('mail.debug','false','true/false whether to print debugging information during mailing','6150d0e0-a1ca-4808-af69-355e8a625725',NULL,NULL,NULL,NULL,NULL,NULL),('mail.default_content_type','text/plain','Content type to append to the mail messages','4dc73071-3366-4745-9b42-2f6acecf313e',NULL,NULL,NULL,NULL,NULL,NULL),('mail.from','info@openmrs.org','Email address to use as the default from address','3e543dd1-128f-4520-bed4-ab346ac43318',NULL,NULL,NULL,NULL,NULL,NULL),('mail.password','test','Password for the SMTP user (if smtp_auth is enabled)','fb48ea7a-aa17-4f6f-b571-2c45c9d23a1f',NULL,NULL,NULL,NULL,NULL,NULL),('mail.smtp.starttls.enable','false','Set to true to enable TLS encryption, else set to false','ab1a263e-3c96-4220-9952-409a698f963e',NULL,NULL,NULL,NULL,NULL,NULL),('mail.smtp_auth','false','true/false whether the smtp host requires authentication','2595a4b7-d351-4138-9e52-d089a97a00a8',NULL,NULL,NULL,NULL,NULL,NULL),('mail.smtp_host','localhost','SMTP host name','7577eb07-1f87-4508-9842-8aaac8bb100e',NULL,NULL,NULL,NULL,NULL,NULL),('mail.smtp_port','25','SMTP port','6102da96-2434-47b2-813e-7e1830c011c0',NULL,NULL,NULL,NULL,NULL,NULL),('mail.transport_protocol','smtp','Transport protocol for the messaging engine. Valid values: smtp','b3955b98-691e-4697-a436-c1a7f64c4442',NULL,NULL,NULL,NULL,NULL,NULL),('mail.user','test','Username of the SMTP user (if smtp_auth is enabled)','a8b3fb8f-b424-49dd-9862-fe6930a340e6',NULL,NULL,NULL,NULL,NULL,NULL),('metadatamapping.addLocalMappings',NULL,'Specifies whether the concept mappings to the local dictionary should be created when exporting concepts','317bee27-8e72-4460-a142-667e468a8705',NULL,NULL,NULL,NULL,NULL,NULL),('metadatamapping.mandatory','false','true/false whether or not the metadatamapping module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','6e4f03c7-3f36-481c-8d68-6cda1b5ea632',NULL,NULL,NULL,NULL,NULL,NULL),('metadatamapping.started','true','DO NOT MODIFY. true/false whether or not the metadatamapping module has been started.  This is used to make sure modules that were running  prior to a restart are started again','809f4bd6-a9c5-449d-aac6-7da021c2559c',NULL,NULL,NULL,NULL,NULL,NULL),('metadatasharing.database_version','1.0','DO NOT MODIFY.  Current database version number for the metadatasharing module.','718259e7-b309-4a83-8a49-feb24d3c66da',NULL,NULL,NULL,NULL,NULL,NULL),('metadatasharing.enableOnTheFlyPackages','false','Specifies whether metadata packages can be exported on the fly','7dd8af44-cc61-4fdb-9256-266b39cd2815',NULL,NULL,NULL,NULL,NULL,NULL),('metadatasharing.mandatory','false','true/false whether or not the metadatasharing module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','3a408900-554f-40cb-92b7-9c4dc77d9b96',NULL,NULL,NULL,NULL,NULL,NULL),('metadatasharing.persistIdsForClasses',NULL,'A comma separated list of class package/names that denotes classes to try and persist ids for. Common options: org.openmrs.Concept,org.openmrs.Form,org.openmrs.ConceptDatatype,org.openmrs.ConceptClass,org.openmrs.EncounterType,org.openmrs.IdentifierType,org.openmrs.RelationshipType,org.openmrs.Location','9972a45c-622c-4904-b726-6b5ee00c6af4',NULL,NULL,NULL,NULL,NULL,NULL),('metadatasharing.preferredConceptSourceIds',NULL,'Comma-separated list of concept source Ids for preferred sources, in case an incoming concept \r\nhas duplicate mappings to any of these sources, no confirmation will be required unless its \r\ndatatype or concept class differs from that of the existing concept','cfb18f41-4fd8-49aa-bfb5-f776a9915535',NULL,NULL,NULL,NULL,NULL,NULL),('metadatasharing.started','true','DO NOT MODIFY. true/false whether or not the metadatasharing module has been started.  This is used to make sure modules that were running  prior to a restart are started again','c58da326-8acf-4c79-b262-bfcdb7af7db7',NULL,NULL,NULL,NULL,NULL,NULL),('metadatasharing.webservicesKey',NULL,'Key to grant access to remote systems to consume module webservices RESTfully','e091e673-2d65-447f-b7bd-87fdc5c64928',NULL,NULL,NULL,NULL,NULL,NULL),('minSearchCharacters','3','Number of characters user must input before searching is started.','1df4fdb6-1857-4f88-aa74-65dc30258ec8',NULL,NULL,NULL,NULL,NULL,NULL),('module_repository_folder','modules','Name of the folder in which to store the modules','fd243812-aa5f-4bda-bd8d-a275e2c5f2e9',NULL,NULL,NULL,NULL,NULL,NULL),('mrs.genders','{\"M\":\"Male\", \"F\":\"Female\"}','List of gender and gender codes used across MRS','a110bb9c-f97d-495c-8778-3b5eb02ec441',NULL,NULL,NULL,NULL,NULL,NULL),('newPatientForm.relationships',NULL,'Comma separated list of the RelationshipTypes to show on the new/short patient form.  The list is defined like \'3a, 4b, 7a\'.  The number is the RelationshipTypeId and the \'a\' vs \'b\' part is which side of the relationship is filled in by the user.','3b5d2bc8-a239-4555-92db-92b6480c9e3d',NULL,NULL,NULL,NULL,NULL,NULL),('new_patient_form.showRelationships','false','true/false whether or not to show the relationship editor on the addPatient.htm screen','4a174a81-91e0-4eca-b1a9-b037cc909dcc','org.openmrs.customdatatype.datatype.BooleanDatatype',NULL,NULL,NULL,NULL,NULL),('obs.complex_obs_dir','complex_obs','Default directory for storing complex obs.','6f431c35-e7f9-4f78-abfd-e650a0226976',NULL,NULL,NULL,NULL,NULL,NULL),('openerpatomfeedclient.mandatory','false','true/false whether or not the openerpatomfeedclient module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','cb5f81d2-6e65-4676-9d49-ef3fd330e09d',NULL,NULL,NULL,NULL,NULL,NULL),('openerpatomfeedclient.started','true','DO NOT MODIFY. true/false whether or not the openerpatomfeedclient module has been started.  This is used to make sure modules that were running  prior to a restart are started again','89419e15-a14a-43a8-8a04-bbeae95b47f5',NULL,NULL,NULL,NULL,NULL,NULL),('openmrs-atomfeed.mandatory','false','true/false whether or not the openmrs-atomfeed module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','004d8195-163f-4cba-b0d9-459f3f176d0b',NULL,NULL,NULL,NULL,NULL,NULL),('openmrs-atomfeed.started','true','DO NOT MODIFY. true/false whether or not the openmrs-atomfeed module has been started.  This is used to make sure modules that were running  prior to a restart are started again','092a0a1d-175e-45b1-a899-1affe0e0a579',NULL,NULL,NULL,NULL,NULL,NULL),('order.dosingInstructionsConceptUuid','9d86785e-3f10-11e4-adec-0800271c1b75','Global property pointing to duration units concept set','9d8fbf9e-3f10-11e4-adec-0800271c1b75',NULL,NULL,NULL,NULL,NULL,NULL),('order.drugDispensingUnitsConceptUuid','87a0c56d-3f10-11e4-adec-0800271c1b75','Dose Quantity Units UUID','87a08f0d-3f10-11e4-adec-0800271c1b75',NULL,NULL,NULL,NULL,NULL,NULL),('order.drugDosingUnitsConceptUuid','9d5b708e-3f10-11e4-adec-0800271c1b75','Global property pointing to dosing units concept set','9d6753fa-3f10-11e4-adec-0800271c1b75',NULL,NULL,NULL,NULL,NULL,NULL),('order.drugRoutesConceptUuid','9d697972-3f10-11e4-adec-0800271c1b75','Global property pointing to drug routes concept set','9d718b33-3f10-11e4-adec-0800271c1b75',NULL,NULL,NULL,NULL,NULL,NULL),('order.durationUnitsConceptUuid','9d735b63-3f10-11e4-adec-0800271c1b75','Global property pointing to duration units concept set','9d74f171-3f10-11e4-adec-0800271c1b75',NULL,NULL,NULL,NULL,NULL,NULL),('order.nextOrderNumberSeed','310','The next order number available for assignment','53c00d2f-5406-4646-b6a3-7ff831d85e27',NULL,NULL,NULL,NULL,NULL,NULL),('order.orderNumberGeneratorBeanId',NULL,'Specifies spring bean id of the order generator to use when assigning order numbers','14aeb40c-fede-45d5-be49-ff9a25151791',NULL,NULL,NULL,NULL,NULL,NULL),('order.testSpecimenSourcesConceptUuid',NULL,'Specifies the uuid of the concept set where its members represent the possible test specimen sources','cf99870d-0b08-4314-bae3-98afb7ee5e4e',NULL,NULL,NULL,NULL,NULL,NULL),('patient.defaultPatientIdentifierValidator','org.openmrs.patient.impl.LuhnIdentifierValidator','This property sets the default patient identifier validator.  The default validator is only used in a handful of (mostly legacy) instances.  For example, it\'s used to generate the isValidCheckDigit calculated column and to append the string \"(default)\" to the name of the default validator on the editPatientIdentifierType form.','ff7883a2-141c-4cf5-bb93-add6da5c91f5',NULL,NULL,NULL,NULL,NULL,NULL),('patient.headerAttributeTypes',NULL,'A comma delimited list of PersonAttributeType names that will be shown on the patient dashboard','e2df03d3-43d6-44ba-8ad8-69a0844c4c6f',NULL,NULL,NULL,NULL,NULL,NULL),('patient.identifierPrefix',NULL,'This property is only used if patient.identifierRegex is empty.  The string here is prepended to the sql indentifier search string.  The sql becomes \"... where identifier like \'<PREFIX><QUERY STRING><SUFFIX>\';\".  Typically this value is either a percent sign (%) or empty.','2738bc71-791c-421e-afcd-10c9fdf0f205',NULL,NULL,NULL,NULL,NULL,NULL),('patient.identifierRegex',NULL,'WARNING: Using this search property can cause a drop in mysql performance with large patient sets.  A MySQL regular expression for the patient identifier search strings.  The @SEARCH@ string is replaced at runtime with the user\'s search string.  An empty regex will cause a simply \'like\' sql search to be used. Example: ^0*@SEARCH@([A-Z]+-[0-9])?$','e72ad4ef-6e39-4ff8-b8ce-9c90719e503e',NULL,NULL,NULL,NULL,NULL,NULL),('patient.identifierSearchPattern',NULL,'If this is empty, the regex or suffix/prefix search is used.  Comma separated list of identifiers to check.  Allows for faster searching of multiple options rather than the slow regex. e.g. @SEARCH@,0@SEARCH@,@SEARCH-1@-@CHECKDIGIT@,0@SEARCH-1@-@CHECKDIGIT@ would turn a request for \"4127\" into a search for \"in (\'4127\',\'04127\',\'412-7\',\'0412-7\')\"','b88cfbac-213f-4560-bca7-b6a2ccec59d2',NULL,NULL,NULL,NULL,NULL,NULL),('patient.identifierSuffix',NULL,'This property is only used if patient.identifierRegex is empty.  The string here is prepended to the sql indentifier search string.  The sql becomes \"... where identifier like \'<PREFIX><QUERY STRING><SUFFIX>\';\".  Typically this value is either a percent sign (%) or empty.','ebfb82ef-43c9-41e1-a5a0-621a9aa0c516',NULL,NULL,NULL,NULL,NULL,NULL),('patient.listingAttributeTypes',NULL,'A comma delimited list of PersonAttributeType names that should be displayed for patients in _lists_','2af95a77-0e73-4382-8269-800c740ba167',NULL,NULL,NULL,NULL,NULL,NULL),('patient.nameValidationRegex','^[a-zA-Z \\-]+$','Names of the patients must pass this regex. Eg : ^[a-zA-Z \\-]+$ contains only english alphabet letters, spaces, and hyphens. A value of .* or the empty string means no validation is done.','4315a7c2-24a2-4d4a-b776-95ed983ff978',NULL,NULL,NULL,NULL,NULL,NULL),('patient.viewingAttributeTypes',NULL,'A comma delimited list of PersonAttributeType names that should be displayed for patients when _viewing individually_','0fb974b6-07b9-4bd1-b823-e20637113c72',NULL,NULL,NULL,NULL,NULL,NULL),('PatientIdentifierType.locked','false','Set to a value of true if you do not want allow editing patient identifier types, else set to false.','7b223852-4f8b-40fd-8596-a0be16c2eddc',NULL,NULL,NULL,NULL,NULL,NULL),('patientIdentifierTypes.locked','false','Set to a value of true if you do not want allow editing patient identifier types, else set to false.','2473dc4a-c854-4126-bc89-da9898176900',NULL,NULL,NULL,NULL,NULL,NULL),('patientSearch.matchMode','START','Specifies how patient names are matched while searching patient. Valid values are \'ANYWHERE\' or \'START\'. Defaults to start if missing or invalid value is present.','a4f4ce84-59b3-422c-9a4f-cbf7e27c185e',NULL,NULL,NULL,NULL,NULL,NULL),('patient_identifier.importantTypes',NULL,'A comma delimited list of PatientIdentifier names : PatientIdentifier locations that will be displayed on the patient dashboard.  E.g.: TRACnet ID:Rwanda,ELDID:Kenya','82c42f90-b68f-4ff3-96f0-6955f43959e4',NULL,NULL,NULL,NULL,NULL,NULL),('person.attributeSearchMatchMode','EXACT','Specifies how person attributes are matched while searching person. Valid values are \'ANYWHERE\' or \'EXACT\'. Defaults to exact if missing or invalid value is present.','850c97ed-9548-437c-a326-a7d63df4bdf7',NULL,NULL,NULL,NULL,NULL,NULL),('person.searchMaxResults','1000','The maximum number of results returned by patient searches','526b5e22-6e8f-4970-babc-af61872fdb09',NULL,NULL,NULL,NULL,NULL,NULL),('PersonAttributeType.locked','false','Set to a value of true if you do not want allow editing person attribute types, else set to false.','dbc7dadc-3e67-4186-97e5-d8b0ce544505',NULL,NULL,NULL,NULL,NULL,NULL),('personAttributeTypes.locked','false','Set to a value of true if you do not want allow editing person attribute types, else set to false.','37d9d6cb-d67e-4526-b1cb-99fc43f1a0d1',NULL,NULL,NULL,NULL,NULL,NULL),('provider.unknownProviderUuid','f9badd80-ab76-11e2-9e96-0800200c9a66','Specifies the uuid of the Unknown Provider account','c26954b7-cb13-4648-b52d-e2c31a397144',NULL,NULL,NULL,NULL,NULL,NULL),('providermanagement.addressWidget','personAddress','Address widget to use throughout the module','a68ee612-26a9-4ebf-b7c2-af3496a261af',NULL,NULL,NULL,NULL,NULL,NULL),('providermanagement.advancedSearchPersonAttributeType',NULL,'Person attribute type, specified by uuid, to use as a search field on the advanced search page','bd6a2252-91f3-46ac-a135-b87dd765027d',NULL,NULL,NULL,NULL,NULL,NULL),('providermanagement.database_version','1.0','DO NOT MODIFY.  Current database version number for the providermanagement module.','73015f7a-cd7b-4f64-b43c-658991908588',NULL,NULL,NULL,NULL,NULL,NULL),('providermanagement.historicalPatientListDisplayFields','Identifier:patient.patientIdentifier.identifier|Given Name:patient.personName.givenName|Family Name:patient.personName.familyName|Age:patient.age|Gender:patient.gender|Start Date:relationship.startDate|End Date:relationship.endDate','Fields to display in the historical patient lists; specified as a pipe-delimited list of label/field pairs','ea29efe5-b5e3-47e4-ba16-122f47cd283d',NULL,NULL,NULL,NULL,NULL,NULL),('providermanagement.historicalProviderListDisplayFields','Identifier:provider.identifier|Given Name:provider.person.personName.givenName|Family Name:provider.person.personName.familyName|Role:provider.providerRole|Gender:provider.person.gender|Start Date:relationship.startDate|End Date:relationship.endDate','Fields to display in the historical provider lists; specified as a pipe-delimited list of label/field pairs','9a478125-6f2c-40cd-8620-a8674b23a9b8',NULL,NULL,NULL,NULL,NULL,NULL),('providermanagement.mandatory','false','true/false whether or not the providermanagement module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','2e1501f0-23e1-4d96-9376-56bf4da947b0',NULL,NULL,NULL,NULL,NULL,NULL),('providermanagement.patientListDisplayFields','Identifier:patient.patientIdentifier.identifier|Given Name:patient.personName.givenName|Family Name:patient.personName.familyName|Age:patient.age|Gender:patient.gender|Start Date:relationship.startDate','Fields to display in the patient lists; specified as a pipe-delimited list of label/field pairs','4e0dcf7f-f737-4638-a939-a9986eb51333',NULL,NULL,NULL,NULL,NULL,NULL),('providermanagement.patientSearchDisplayFields','Identifier:patient.patientIdentifier.identifier|Given Name:patient.personName.givenName|Family Name:patient.personName.familyName|Age:patient.age|Gender:patient.gender','Fields to display in the patient search results; specified as a pipe-delimited list of label/field pairs','e0df3e10-4951-4656-bab2-c703c00a3ac8',NULL,NULL,NULL,NULL,NULL,NULL),('providermanagement.personAttributeTypes',NULL,'Person attributes to display on the provider dashboard; specified as a pipe-delimited list of person attribute type uuids','47ba7340-88b0-4784-a305-0a935f53d96d',NULL,NULL,NULL,NULL,NULL,NULL),('providermanagement.personSearchDisplayFields','Given Name:person.personName.givenName|Family Name:person.personName.familyName|Age:person.age|Gender:person.gender','Fields to display in the person search results; specified as a pipe-delimited list of label/field pairs','b82e330e-90e9-4356-899d-992686d92543',NULL,NULL,NULL,NULL,NULL,NULL),('providermanagement.providerListDisplayFields','Identifier:provider.identifier|Given Name:provider.person.personName.givenName|Family Name:provider.person.personName.familyName|Role:provider.providerRole|Gender:provider.person.gender|Start Date:relationship.startDate','Fields to display in the provider lists; specified as a pipe-delimited list of label/field pairs','354791e4-5abd-4421-a6f1-6f23b7b1ae8e',NULL,NULL,NULL,NULL,NULL,NULL),('providermanagement.providerSearchDisplayFields','Identifier:provider.identifier|Given Name:provider.person.personName.givenName|Family Name:provider.person.personName.familyName|Role:provider.providerRole|Gender:provider.person.gender','Fields to display in the provider search results; specified as a pipe-delimited list of label/field pairs','9b935508-8746-45f4-b491-aa783adb7752',NULL,NULL,NULL,NULL,NULL,NULL),('providermanagement.restrictSearchToProvidersWithProviderRoles','false','True/false whether to restrict providers to those with roles','35404dc4-8961-4c7d-a0b2-c4850f7224e8',NULL,NULL,NULL,NULL,NULL,NULL),('providermanagement.started','true','DO NOT MODIFY. true/false whether or not the providermanagement module has been started.  This is used to make sure modules that were running  prior to a restart are started again','46d981db-dc99-4933-ab15-cf832bb0fab3',NULL,NULL,NULL,NULL,NULL,NULL),('providerSearch.matchMode','EXACT','Specifies how provider identifiers are matched while searching for providers. Valid values are START,EXACT, END or ANYWHERE','a11c129b-c2dc-4146-95aa-32fde8d6bb97',NULL,NULL,NULL,NULL,NULL,NULL),('reference-data.mandatory','false','true/false whether or not the reference-data module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','b0741544-4e92-47ef-a2c6-68c22c6ce57e',NULL,NULL,NULL,NULL,NULL,NULL),('reference-data.started','true','DO NOT MODIFY. true/false whether or not the reference-data module has been started.  This is used to make sure modules that were running  prior to a restart are started again','573bc7a3-9e4a-4d20-a0e2-6f051933c860',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.biometrics.implementation',NULL,'Which Biometrics engine implementation to should we connect to?\r\nSpecify a Spring bean name, or leave blank to disable','4e3703be-f2b0-4c88-b490-c4c9236c4369',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.birthdateEstimationStartMonth','0','The month from which the birth date is estimated, with January having a value of 0','436cd1dd-c77c-430b-ad45-9328de175d53',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.familyNameAutoSuggestList',NULL,'A comma separated list of common names to auto suggest for the family name field, when registering patients.','51470255-a12b-4dea-877c-b8008646aff8',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.fastSimilarPatientSearchAlgorithm','registrationcore.BasicSimilarPatientSearchAlgorithm','Specifies a bean used for the fast similar patient search algorithm.','015352ab-f317-4668-9c4d-5a356a4f08d1',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.givenNameAutoSuggestList',NULL,'A comma separated list of common names to auto suggest for the given name field, when registering patients.','dbe1a1b3-e313-4189-85df-f207d907b893',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.identifierSourceId',NULL,'Specifies the identifier source to use when generating patient identifiers','04fd4089-99a0-4f02-a62a-a45547eb5373',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.local_mpi_identifierTypeMap.OpenEMPI ID','a5d38e09-efcb-4d91-a526-50ce1ba5011a:2.16.840.1.113883.4.357:ISO','Specifies the mapping from OpenEMPI Object ID (OID) to the local OpenMRS Application\'s identifier for OpenEMPI ID UUID.\r\nOpenEMPI ID is the default Global Identifier Domain (GID) for OpenEMPI but this can be changed.','7a5cc131-ad04-4011-9c61-b044207127d9',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.local_mpi_identifierTypeMap.OpenMRS ID','81433852-3f10-11e4-adec-0800271c1b75:2.25.71280592878078638113873461180761116320:PI','Specifies the mapping from OpenEMPI Object ID (OID) to the local OpenMRS Application\'s identifier for OpenMRS ID UUID.\r\nOpenMRS ID is the default generated identifier for OpenMRS but this can be changed.','2419b8fd-8268-4d99-8860-8f7457789701',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.mandatory','false','true/false whether or not the registrationcore module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','e5e56bb2-547a-4e71-9365-a97cbb7d715b',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.mpi.Hl7implementation','registrationcore.mpiHl7v2HttpSender','Specifies which bean should be used to send the Hl7 Message. Current options are:\r\n\"registrationcore.mpiHl7v2HttpSender\", \"registrationcore.mpiHl7v2MllpSender\".','941b0078-0525-4e7d-8d0c-546ac5de7e31',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.mpi.implementation',NULL,'Which MPI to should we connect to? Specify a Spring bean name, or leave blank to disable MPI integration. Options include:\r\n\"registrationcore.mpi.implementation.PixPdq\", \"registrationcore.mpi.implementation.OpenEMPI\".','06c3a167-1310-4147-9820-48adead81277',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.mpi.pdq.errorHandler.implementation',NULL,'Specify a Spring bean name of PDQ error handler service. It requires the xds-sender module and outgoing message\r\nexception module developed by SolDevelo. Set value to \"outgoingmessageexceptions.PdqErrorHandlingService\" and\r\ninstall those two modules to enable pix error handling functionality.','ad51a045-444c-49c3-a066-159e46eebec8',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.mpi.pdqEndpoint','http://18.223.38.222:5001/pdq','Specifies endpoint for Hl7 PDQ Message','01b493b9-263e-4ea5-9b7c-0cc426df4fe3',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.mpi.pdqIdentifierTypeUuidList','81433852-3f10-11e4-adec-0800271c1b75,a5d38e09-efcb-4d91-a526-50ce1ba5011a','Specifies the list of identifiers to send in a PDQ query to get patient data from the MPI. Takes a list of UUID of patient identifier types - separate them with commas.\r\nUUIDs can be found in the patient_identifier_type database table.','295e2d94-da7f-4f0e-9f91-3e515f212f1b',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.mpi.pdqPort','3700','Specifies port for Hl7 PDQ Message','d640db66-d073-4eaa-ab2c-a7857a7953df',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.mpi.personIdentifierTypeUuid','a5d38e09-efcb-4d91-a526-50ce1ba5011a','Specifies UUID of the identifier type that is used as the Global Identifier Domain (GID) in the MPI.\r\nIt is generated by the MPI and is persisted in OpenMRS.','3a6d13c1-1295-496a-9f7c-7ee3612eb9c7',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.mpi.pix.errorHandler.implementation',NULL,'Specify a Spring bean name of PIX error handler service. It requires the xds-sender module and outgoing message\r\nexception module developed by SolDevelo. Set value to \"outgoingmessageexceptions.PixErrorHandlingService\" and\r\ninstall those two modules to enable pix error handling functionality.','ed46324d-6f72-488b-b969-4ca8bb903c2b',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.mpi.pixEndpoint','http://18.223.38.222:5001/pix','Specifies the endpoint for the Hl7 PIX Message','a1b01747-7065-41ad-ae33-7ec9de5aaeb7',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.mpi.pixIdentifierTypeUuidList','81433852-3f10-11e4-adec-0800271c1b75,a5d38e09-efcb-4d91-a526-50ce1ba5011a','Specifies the list of identifiers to send in a PIX query to save the patient in the MPI. Takes a list of UUID of patient identifier types - separate them with commas.\r\nUUIDs can be found in the patient_identifier_type database table.','b899ba0b-1522-4f7d-94da-2564e6b5313e',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.mpi.pixPort','3600','Specifies port for Hl7 PIX Message','911ef37b-7bb2-40bc-9acf-b9c79da1ecf4',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.mpi.receivingApplication','TsebaMokuli','Specifies the receiving application in the MSH header section of the HL7 message','93e61efb-6ea3-4713-bc03-4b89d5267225',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.mpi.receivingFacility','LSHIE','Specifies sending Facility in the MSH header section of the HL7 message','1f524659-1e24-4a87-b350-2f6d9eeb9bde',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.mpi.sendingApplication','eRegisterMuela','Specifies the sending application in the MSH header section of the HL7 message','72ab7076-3dd4-49eb-bb33-866459e27851',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.mpi.sendingFacility','MuelaHC','Specifies sending Facility in the MSH header section of the HL7 message','b20377fb-6bce-472a-b435-d8ba338394f4',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.mpi.url',NULL,'Specifies url to MPI server. (GSOC OpenEMPI Specific Implementation)','7dccade2-67cb-413a-b1f5-449d384e4ab2',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.openempi.enableProbabilisticMatching','false','Specifies if probability matching should be used (GSOC OpenEMPI Specific Implementation)','dfec7b0e-9812-4778-b3c2-f70ab093f9e9',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.openempi.globalIdentifierDomainId',NULL,'Specifies main identifier on MPI server (e.g. \"xyz\" for OpenEMPI) (GSOC OpenEMPI Specific Implementation)','b205694d-cee2-4aac-af16-f80fb6c0ed17',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.openmrsIdentifier.uuid','81433852-3f10-11e4-adec-0800271c1b75','UUID of the OpenMRS identifier that will be generated during MPI import unless it is present. By default set to the UUID of OpenMRS ID.\r\nNote: You have to have a Patient Identifier Source correctly configured and stored in the global property identifierSourceId','827c6e4c-4696-4c3e-bf46-bd6e6f438126',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.patientNameSearch','registrationcore.BasicPatientNameSearch','Specifies a bean used for the auto suggest name feature.','b47bf436-bd91-49b2-95ed-3a347ba55de9',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.preciseSimilarPatientSearchAlgorithm','registrationcore.BasicExactPatientSearchAlgorithm','Specifies a bean used for the precise similar patient search algorithm.','9a5244ef-6717-4639-990e-954ff5681b80',NULL,NULL,NULL,NULL,NULL,NULL),('registrationcore.started','true','DO NOT MODIFY. true/false whether or not the registrationcore module has been started.  This is used to make sure modules that were running  prior to a restart are started again','67321f92-904e-4cf9-99af-d69fe5008d01',NULL,NULL,NULL,NULL,NULL,NULL),('report.deleteReportsAgeInHours','72','Reports that are not explicitly saved are deleted automatically when they are this many hours old. (Values less than or equal to zero means do not delete automatically)','e7116b5c-adb9-46a0-ae6f-4d990b10d508',NULL,NULL,NULL,NULL,NULL,NULL),('report.xmlMacros',NULL,'Macros that will be applied to Report Schema XMLs when they are interpreted. This should be java.util.properties format.','85d33560-e355-4cf2-b81f-1c6c94e84f62',NULL,NULL,NULL,NULL,NULL,NULL),('reporting.dataEvaluationBatchSize','-1','This determines whether to run evaluators for Data in batches and what the size of those batches should be.\r\nA value of less than or equal to 0 indicates that no batching is desired.','7204b3c4-92d9-4445-acb9-be5509fa292b',NULL,NULL,NULL,NULL,NULL,NULL),('reporting.defaultDateFormat','dd/MMM/yyyy','Default date format to use when formatting report data','20e968af-8c02-4c72-979a-6e0cf6ee20bd',NULL,NULL,NULL,NULL,NULL,NULL),('reporting.defaultLocale','en','Default locale to use when formatting report data','f929c2b7-b812-4384-b8e9-03c8425ad35b',NULL,NULL,NULL,NULL,NULL,NULL),('reporting.evaluationLoggerEnabled','false','If false, will disable the built in use of the evaluation logger to log evaluation information for performance diagnostics','981c91de-dbec-4c29-99b5-7f706983d40b',NULL,NULL,NULL,NULL,NULL,NULL),('reporting.includeDataExportsAsDataSetDefinitions','false','If reportingcompatibility is installed, this indicates whether data exports should be exposed as Dataset Definitions','76778228-86cd-4192-9f30-361f698051e6',NULL,NULL,NULL,NULL,NULL,NULL),('reporting.mandatory','false','true/false whether or not the reporting module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','9b538a20-228c-4ba2-b73e-9e01d84bcdce',NULL,NULL,NULL,NULL,NULL,NULL),('reporting.maxCachedReports','10','The maximum number of reports whose underlying data and output should be kept in the cache at any one time','f1c19677-88e3-474a-9ae5-59261381bff5',NULL,NULL,NULL,NULL,NULL,NULL),('reporting.maxReportsToRun','1','The maximum number of reports that should be processed at any one time','2ee2fb45-e5bc-4ec3-81e0-05eaea563370',NULL,NULL,NULL,NULL,NULL,NULL),('reporting.preferredIdentifierTypes',NULL,'Pipe-separated list of patient identifier type names, which should be displayed on default patient datasets','96c7caf0-232e-4147-81c6-de66e5a5cfb4',NULL,NULL,NULL,NULL,NULL,NULL),('reporting.runReportCohortFilterMode','showIfNull','Supports the values hide,showIfNull,show which determine whether the cohort selector should be available in the run report page','d0eeb046-bc6c-4a97-ae7b-97e13d32400d',NULL,NULL,NULL,NULL,NULL,NULL),('reporting.started','true','DO NOT MODIFY. true/false whether or not the reporting module has been started.  This is used to make sure modules that were running  prior to a restart are started again','546ae5ff-473d-4b92-bebc-67a7294ab437',NULL,NULL,NULL,NULL,NULL,NULL),('reporting.testPatientsCohortDefinition',NULL,'Points to a cohort definition representing all test/fake patients that you want to exclude from all queries and reports. You may set this to the UUID of a saved cohort definition, or to \"library:keyInADefinitionLibrary\"','d7d07f99-a994-43d6-b74c-24bf07d1da0b',NULL,NULL,NULL,NULL,NULL,NULL),('reportingcompatibility.data_export_batch_size','7500','The number of patients to export at a time in a data export.  The larger this number the faster and more memory that is used.  The smaller this number the slower and less memory is used.','e7c4bc1f-0d05-41ef-8d26-14b927bf72d5',NULL,NULL,NULL,NULL,NULL,NULL),('reportingcompatibility.mandatory','false','true/false whether or not the reportingcompatibility module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','ad25b9b2-1ff9-4d92-9d95-3b3b3dfcb752',NULL,NULL,NULL,NULL,NULL,NULL),('reportingcompatibility.patientLinkUrl','patientDashboard.form','The link url for a particular patient to view from the cohort builder','544a85e9-85f9-4505-a4e1-ddd0fca3d7ec',NULL,NULL,NULL,NULL,NULL,NULL),('reportingcompatibility.started','true','DO NOT MODIFY. true/false whether or not the reportingcompatibility module has been started.  This is used to make sure modules that were running  prior to a restart are started again','bc32ab21-9852-42ea-9c43-7f67f8929b05',NULL,NULL,NULL,NULL,NULL,NULL),('reportingrest.mandatory','false','true/false whether or not the reportingrest module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','8607de51-4b0d-491c-8ece-f744f0d037dd',NULL,NULL,NULL,NULL,NULL,NULL),('reportingrest.started','true','DO NOT MODIFY. true/false whether or not the reportingrest module has been started.  This is used to make sure modules that were running  prior to a restart are started again','884304f4-3deb-42a7-b9ac-4eda185c8dcd',NULL,NULL,NULL,NULL,NULL,NULL),('reportProblem.url','http://errors.openmrs.org/scrap','The openmrs url where to submit bug reports','1ccf2dc4-b32c-41fd-8d2e-0dc01a884359',NULL,NULL,NULL,NULL,NULL,NULL),('rulesengine.mandatory','false','true/false whether or not the rulesengine module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','62a4ab9c-52ac-4513-9841-a9613dddd461',NULL,NULL,NULL,NULL,NULL,NULL),('rulesengine.started','true','DO NOT MODIFY. true/false whether or not the rulesengine module has been started.  This is used to make sure modules that were running  prior to a restart are started again','6b82428f-8e5a-434a-a39d-3a421f89dae2',NULL,NULL,NULL,NULL,NULL,NULL),('scheduler.password','test','Password for the OpenMRS user that will perform the scheduler activities','4f075c92-a447-4c89-b058-230ec8a738c5',NULL,NULL,NULL,NULL,NULL,NULL),('scheduler.username','admin','Username for the OpenMRS user that will perform the scheduler activities','ffded5ea-4625-4545-9efa-ea78a50445ca',NULL,NULL,NULL,NULL,NULL,NULL),('SchedulerMarksComplete','false','Scheduler marks checked in appointments as complete when it turned on','e82ac4cd-827e-4238-ace9-6c0399f62727',NULL,NULL,NULL,NULL,NULL,NULL),('SchedulerMarksMissed','false','Scheduler marks scheduled appointments as missed when it is turned on','51715641-7af6-4f46-ac38-35147b3242ee',NULL,NULL,NULL,NULL,NULL,NULL),('search.caseSensitiveDatabaseStringComparison','false','Indicates whether database string comparison is case sensitive or not. Setting this to false for MySQL with a case insensitive collation improves search performance.','ac4c736a-9bcd-4cb5-b992-9f00115bd347',NULL,NULL,NULL,NULL,NULL,NULL),('search.indexVersion','7','Indicates the index version. If it is blank, the index needs to be rebuilt.','81bfa679-5f2c-4c12-a8fc-5345f09dcd93',NULL,NULL,NULL,NULL,NULL,NULL),('searchWidget.batchSize','200','The maximum number of search results that are returned by an ajax call','b3b4c64b-9cfe-48d1-8bf0-1949f1695815',NULL,NULL,NULL,NULL,NULL,NULL),('searchWidget.dateDisplayFormat',NULL,'Date display format to be used to display the date somewhere in the UI i.e the search widgets and autocompletes','e6b2842f-07bb-4f73-9ffe-ab9511738ebc',NULL,NULL,NULL,NULL,NULL,NULL),('searchWidget.maximumResults','2000','Specifies the maximum number of results to return from a single search in the search widgets','adae79fc-9fde-4fbb-8265-dbc804ca9465',NULL,NULL,NULL,NULL,NULL,NULL),('searchWidget.runInSerialMode','false','Specifies whether the search widgets should make ajax requests in serial or parallel order, a value of true is appropriate for implementations running on a slow network connection and vice versa','05ceff5c-3681-4fbd-b803-3f0985135cc2','org.openmrs.customdatatype.datatype.BooleanDatatype',NULL,NULL,NULL,NULL,NULL),('searchWidget.searchDelayInterval','400','Specifies time interval in milliseconds when searching, between keyboard keyup event and triggering the search off, should be higher if most users are slow when typing so as to minimise the load on the server','6f1b982e-e920-44d8-a195-f6ca2f9dca38',NULL,NULL,NULL,NULL,NULL,NULL),('security.allowedFailedLoginsBeforeLockout','7','Maximum number of failed logins allowed after which username is locked out','ad937514-59a9-444e-b23e-2961e047c2c8',NULL,NULL,NULL,NULL,NULL,NULL),('security.passwordCannotMatchUsername','true','Configure whether passwords must not match user\'s username or system id','243a0045-1dd8-4412-8443-b186a0b36354','org.openmrs.customdatatype.datatype.BooleanDatatype',NULL,NULL,NULL,NULL,NULL),('security.passwordCustomRegex',NULL,'Configure a custom regular expression that a password must match','8e142d81-dfc7-4874-9e5e-f11e107c029e',NULL,NULL,NULL,NULL,NULL,NULL),('security.passwordMinimumLength','8','Configure the minimum length required of all passwords','1e33de83-dd54-4e11-8aea-045e5dc269a1',NULL,NULL,NULL,NULL,NULL,NULL),('security.passwordRequiresDigit','true','Configure whether passwords must contain at least one digit','e1b047c7-f4d5-4f5d-8eae-96e58db43bce','org.openmrs.customdatatype.datatype.BooleanDatatype',NULL,NULL,NULL,NULL,NULL),('security.passwordRequiresNonDigit','true','Configure whether passwords must contain at least one non-digit','ea31d9d1-6544-4edb-b19b-4cf525cc0238','org.openmrs.customdatatype.datatype.BooleanDatatype',NULL,NULL,NULL,NULL,NULL),('security.passwordRequiresUpperAndLowerCase','true','Configure whether passwords must contain both upper and lower case characters','961cc724-b9b9-4ef6-bd26-0b7c0c9f6ab0','org.openmrs.customdatatype.datatype.BooleanDatatype',NULL,NULL,NULL,NULL,NULL),('serialization.xstream.mandatory','false','true/false whether or not the serialization.xstream module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','4d3029c6-6218-4ecb-a7dd-100226ad8252',NULL,NULL,NULL,NULL,NULL,NULL),('serialization.xstream.started','true','DO NOT MODIFY. true/false whether or not the serialization.xstream module has been started.  This is used to make sure modules that were running  prior to a restart are started again','6d0e98f1-cff1-4644-a6c3-8d243f614fd2',NULL,NULL,NULL,NULL,NULL,NULL),('uicommons.mandatory','false','true/false whether or not the uicommons module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','9c883c63-50f9-4d2b-9cfe-48b3237168d2',NULL,NULL,NULL,NULL,NULL,NULL),('uicommons.started','true','DO NOT MODIFY. true/false whether or not the uicommons module has been started.  This is used to make sure modules that were running  prior to a restart are started again','5e035208-3f7f-46a8-a4a8-f370b12c2741',NULL,NULL,NULL,NULL,NULL,NULL),('uiframework.formatter.dateAndTimeFormat','dd.MMM.yyyy, HH:mm:ss','Format used by UiUtils.format for dates that have a time component','98a3c5ca-c0cd-4249-ac9a-ec58b98c0897',NULL,NULL,NULL,NULL,NULL,NULL),('uiframework.formatter.dateFormat','dd.MMM.yyyy','Format used by UiUtils.format for dates that do not have a time component','6f429d40-972f-4d28-8d32-6952d3374d0a',NULL,NULL,NULL,NULL,NULL,NULL),('uiframework.mandatory','false','true/false whether or not the uiframework module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','3fba7fce-33fd-4748-a9f4-b33f8b61bdcc',NULL,NULL,NULL,NULL,NULL,NULL),('uiframework.started','true','DO NOT MODIFY. true/false whether or not the uiframework module has been started.  This is used to make sure modules that were running  prior to a restart are started again','f0929aa0-cb0a-4e1b-b20e-3c57d22b5734',NULL,NULL,NULL,NULL,NULL,NULL),('uilibrary.mandatory','false','true/false whether or not the uilibrary module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','1098fb91-8d76-4c58-8919-939b06fc25cc',NULL,NULL,NULL,NULL,NULL,NULL),('uilibrary.started','true','DO NOT MODIFY. true/false whether or not the uilibrary module has been started.  This is used to make sure modules that were running  prior to a restart are started again','71a95588-ce7a-44c4-be40-eeb96fe059ba',NULL,NULL,NULL,NULL,NULL,NULL),('uploaded.files.directory','/home/bahmni/uploaded-files/mrs/','Directory where files uploaded to Bahmni are stored','bb33d8bc-3f10-11e4-adec-0800271c1b75',NULL,NULL,NULL,NULL,NULL,NULL),('user.headerAttributeTypes',NULL,'A comma delimited list of PersonAttributeType names that will be shown on the user dashboard. (not used in v1.5)','5bca62d2-c71d-4187-ad42-87f744bdcc2d',NULL,NULL,NULL,NULL,NULL,NULL),('user.listingAttributeTypes',NULL,'A comma delimited list of PersonAttributeType names that should be displayed for users in _lists_','b433af18-c843-4e68-bbb4-decb99c97784',NULL,NULL,NULL,NULL,NULL,NULL),('user.requireEmailAsUsername','false','Indicates whether a username must be a valid e-mail or not.','bf0d3012-c9f7-4012-b7d1-2aa793dea966','org.openmrs.customdatatype.datatype.BooleanDatatype',NULL,NULL,NULL,NULL,NULL),('user.viewingAttributeTypes',NULL,'A comma delimited list of PersonAttributeType names that should be displayed for users when _viewing individually_','2bdc0621-bd24-4873-8edf-be31d4fdd673',NULL,NULL,NULL,NULL,NULL,NULL),('use_patient_attribute.healthCenter','false','Indicates whether or not the \'health center\' attribute is shown when viewing/searching for patients','ca1419ea-b351-4767-8e95-6d6cf9b9d3f2','org.openmrs.customdatatype.datatype.BooleanDatatype',NULL,NULL,NULL,NULL,NULL),('use_patient_attribute.mothersName','false','Indicates whether or not mother\'s name is able to be added/viewed for a patient','4a024c74-6003-41f9-801a-752bb30d2ef9','org.openmrs.customdatatype.datatype.BooleanDatatype',NULL,NULL,NULL,NULL,NULL),('validation.disable','false','Disables validation of OpenMRS Objects. Only takes affect on next restart. Warning: only do this is you know what you are doing!','27c3226c-b88e-4329-8027-0d8b1ae5128c',NULL,NULL,NULL,NULL,NULL,NULL),('visits.allowOverlappingVisits','true','true/false whether or not to allow visits of a given patient to overlap','de638cfe-bd4c-46e8-9609-970766f3dde9','org.openmrs.customdatatype.datatype.BooleanDatatype',NULL,NULL,NULL,NULL,NULL),('visits.assignmentHandler','org.openmrs.module.emrapi.adt.EmrApiVisitAssignmentHandler','Set to the name of the class responsible for assigning encounters to visits.','71f5f74d-2b4a-47df-9c81-a0b8bc27e630',NULL,NULL,NULL,NULL,NULL,NULL),('visits.autoCloseVisitType','New or Pre-ART,ARV Drug Pickup,Sick or Presumptive TB,High Viral Load Result,HTS Only','comma-separated list of the visit type(s) to automatically close','eb6f071e-3c12-4dc5-ad0c-953c0e5d2021',NULL,NULL,NULL,NULL,NULL,NULL),('visits.enabled','true','Set to true to enable the Visits feature. This will replace the \'Encounters\' tab with a \'Visits\' tab on the dashboard.','1f1b13f9-2def-44c1-844b-708ca04e9fe7','org.openmrs.customdatatype.datatype.BooleanDatatype',NULL,NULL,NULL,NULL,NULL),('visits.encounterTypeToVisitTypeMapping',NULL,'Specifies how encounter types are mapped to visit types when automatically assigning encounters to visits. e.g 1:1, 2:1, 3:2 in the format encounterTypeId:visitTypeId or encounterTypeUuid:visitTypeUuid or a combination of encounter/visit type uuids and ids e.g 1:759799ab-c9a5-435e-b671-77773ada74e4','50722a0e-6e2a-4742-81d9-74345d56e04d',NULL,NULL,NULL,NULL,NULL,NULL),('webservices.rest.allowedips',NULL,'A comma-separate list of IP addresses that are allowed to access the web services. An empty string allows everyone to access all ws. \r\n        IPs can be declared with bit masks e.g. 10.0.0.0/30 matches 10.0.0.0 - 10.0.0.3 and 10.0.0.0/24 matches 10.0.0.0 - 10.0.0.255.','55e8bfdd-0d74-4109-a5bc-ae88a1f01603',NULL,NULL,NULL,NULL,NULL,NULL),('webservices.rest.mandatory','false','true/false whether or not the webservices.rest module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','c32a4641-f635-46a3-b78c-bdb85d04cf21',NULL,NULL,NULL,NULL,NULL,NULL),('webservices.rest.maxResultsAbsolute','2000','The absolute max results limit. If the client requests a larger number of results, then will get an error','eb8dbd29-b1ac-4c03-b435-2db89179ae2a',NULL,NULL,NULL,NULL,NULL,NULL),('webservices.rest.maxResultsDefault','500','The default max results limit if the user does not provide a maximum when making the web service call.','0c292473-777e-4aa3-b8ae-ab9e29e7a892',NULL,NULL,NULL,NULL,NULL,NULL),('webservices.rest.quietDocs','true','If the value of this setting is \"true\", then nothing is logged while the Swagger specification is being generated.','85b77fd1-5461-41ee-b1e9-d4b1c5785d50',NULL,NULL,NULL,NULL,NULL,NULL),('webservices.rest.started','true','DO NOT MODIFY. true/false whether or not the webservices.rest module has been started.  This is used to make sure modules that were running  prior to a restart are started again','49fe025a-f8ed-460d-8c5c-9bcf942840ef',NULL,NULL,NULL,NULL,NULL,NULL),('webservices.rest.uriPrefix',NULL,'The URI prefix through which clients consuming web services will connect to the web application, should be of the form http://{ipAddress}:{port}/{contextPath}','2e29060d-5faf-4011-8b63-b337e1e6aae3',NULL,NULL,NULL,NULL,NULL,NULL),('xds-sender.mandatory','false','true/false whether or not the xds-sender module MUST start when openmrs starts.  This is used to make sure that mission critical modules are always running if openmrs is running.','dfab58f1-dcba-49aa-b470-42ce1a1a232a',NULL,NULL,NULL,NULL,NULL,NULL),('xds-sender.started','true','DO NOT MODIFY. true/false whether or not the xds-sender module has been started.  This is used to make sure modules that were running  prior to a restart are started again','7b714dbd-4ce9-4a39-81b6-bbb33d6a4518',NULL,NULL,NULL,NULL,NULL,NULL),('xdssender.ccd.errorHandler.implementation','outgoingmessageexceptions.CcdErrorHandlingService','Specify a Spring bean name of CCD error handler service','e388ac50-bfb2-4602-9e4f-3efe62863bd0',NULL,NULL,NULL,NULL,NULL,NULL),('xdssender.codeNationalRoot','2.25.71280592878078638113873461180761116320','Authority domain for the specific health facility patient identifier domain','aa0909fd-c8e4-4993-a735-561203a2fbb3',NULL,NULL,NULL,NULL,NULL,NULL),('xdssender.ecidRoot','2.16.840.1.113883.4.357','Authority domain for the OpenEMPI enterprise Global ID','1820537c-d38d-4ef7-8935-5ba2d60ae651',NULL,NULL,NULL,NULL,NULL,NULL),('xdssender.exportCcd.ignoreCerts','false','Determines if ccd downloading from OpenSHR should ignore certificates','66beb1b9-341c-4826-89db-8966ce4c5df0',NULL,NULL,NULL,NULL,NULL,NULL),('xdssender.exportCcdEndpoint','http://thebukana.org:8080/openmrs/ws/rest/exportccd/ccd','Specifies the export ccd module endpoint address (OpenSHR)','68a7890e-75e1-4ae1-a62a-233a4de82923',NULL,NULL,NULL,NULL,NULL,NULL),('xdssender.notificationsPullPoint.endpoint',NULL,'Endpoint used to fetch Notifications from the Pull Point','df3d38b7-9a0c-417e-9a8b-2f68afdf89b7',NULL,NULL,NULL,NULL,NULL,NULL),('xdssender.notificationsPullPoint.password',NULL,'Password to authorize int the Notifications Pull Point','f813e418-8fc5-4233-9f98-97121e700b3b',NULL,NULL,NULL,NULL,NULL,NULL),('xdssender.notificationsPullPoint.username',NULL,'Username to authorize int the Notifications Pull Point','5605fa89-b8af-4990-85fd-edc9a04c7f13',NULL,NULL,NULL,NULL,NULL,NULL),('xdssender.openmrs.moduleUsedToDetermineSoftwareVersion','isanteplusreports','Specifies the module name which will be used to determine the software version.','5ed53e4d-847a-4c48-ad57-bb888d860207',NULL,NULL,NULL,NULL,NULL,NULL),('xdssender.openmrs.password','P@$$w0rd!','Specifies password for authentication in OpenMRS','c0012d0e-c775-4cac-8a15-3931de2805ef',NULL,NULL,NULL,NULL,NULL,NULL),('xdssender.openmrs.provider.role.clinician',NULL,'Specifies role for add provider to XDS documents','7aa265f2-d0d1-448d-aa15-ca756c0aae91',NULL,NULL,NULL,NULL,NULL,NULL),('xdssender.openmrs.provider.role.doctor',NULL,'Specifies role for add provider to XDS documents','b90eaa63-95ac-47c4-b4d6-09bbfb3a31ed',NULL,NULL,NULL,NULL,NULL,NULL),('xdssender.openmrs.username','superman','Specifies username for authentication in OpenMRS','defac893-17a5-4b73-aab8-bc26f90a4773',NULL,NULL,NULL,NULL,NULL,NULL),('xdssender.oshr.password','OpenSHR#123','Specifies the OpenSHR password','583e7583-b0fe-40b5-9fd8-dba4de90d54a',NULL,NULL,NULL,NULL,NULL,NULL),('xdssender.oshr.username','admin','Specifies the OpenSHR username','83da5158-6a8a-4ceb-aaa0-7bb6f1bee47b',NULL,NULL,NULL,NULL,NULL,NULL),('xdssender.pullNotificationsTaskInterval','3600','Interval time (in seconds) to execute pulling notifications from Pull Point task','96eb41f2-fabf-4bc2-a738-e8155e87cb9c',NULL,NULL,NULL,NULL,NULL,NULL),('xdssender.registryEndpoint','http://18.223.38.222:5001/xdsregistry','Specifies endpoint to XDS registry','91c28b4b-8928-4372-a179-63f21dc43d00',NULL,NULL,NULL,NULL,NULL,NULL),('xdssender.repositoryEndpoint','http://18.223.38.222:5001/xdsrepository','Specifies endpoint to XDS repository','ab7d64f4-1bf2-42b9-94d3-f5ecf91f61d2',NULL,NULL,NULL,NULL,NULL,NULL),('xdssender.xdsB.errorHandler.implementation','outgoingmessageexceptions.XdsBErrorHandlingService','Specify a Spring bean name of XDS.b error handler service','8ed44ba0-ea24-4c83-834d-3c8407f2eab1',NULL,NULL,NULL,NULL,NULL,NULL),('xdssender.xdsrepository.password',NULL,'Specifies password for authentication to XDS repository','e3bc50ad-10ab-41b3-a3b9-564fbda3e359',NULL,NULL,NULL,NULL,NULL,NULL),('xdssender.xdsrepository.username','pixclient_b2101','Specifies username for authentication to XDS repository','9ef76352-e85e-4285-b9cf-61e2aad08306',NULL,NULL,NULL,NULL,NULL,NULL);
/*!40000 ALTER TABLE `global_property` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2020-05-07 18:45:07
